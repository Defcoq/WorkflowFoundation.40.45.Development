#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PROWF40.CH13.AdventureWorksAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AdventureWorks2012")]
	public partial class AdventureWorksDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAWBuildVersion(AWBuildVersion instance);
    partial void UpdateAWBuildVersion(AWBuildVersion instance);
    partial void DeleteAWBuildVersion(AWBuildVersion instance);
    partial void InsertErrorLog(ErrorLog instance);
    partial void UpdateErrorLog(ErrorLog instance);
    partial void DeleteErrorLog(ErrorLog instance);
    partial void InsertDatabaseLog(DatabaseLog instance);
    partial void UpdateDatabaseLog(DatabaseLog instance);
    partial void DeleteDatabaseLog(DatabaseLog instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertEmployeeDepartmentHistory(EmployeeDepartmentHistory instance);
    partial void UpdateEmployeeDepartmentHistory(EmployeeDepartmentHistory instance);
    partial void DeleteEmployeeDepartmentHistory(EmployeeDepartmentHistory instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductCategory(ProductCategory instance);
    partial void UpdateProductCategory(ProductCategory instance);
    partial void DeleteProductCategory(ProductCategory instance);
    partial void InsertProductCostHistory(ProductCostHistory instance);
    partial void UpdateProductCostHistory(ProductCostHistory instance);
    partial void DeleteProductCostHistory(ProductCostHistory instance);
    partial void InsertProductDescription(ProductDescription instance);
    partial void UpdateProductDescription(ProductDescription instance);
    partial void DeleteProductDescription(ProductDescription instance);
    partial void InsertProductInventory(ProductInventory instance);
    partial void UpdateProductInventory(ProductInventory instance);
    partial void DeleteProductInventory(ProductInventory instance);
    partial void InsertProductListPriceHistory(ProductListPriceHistory instance);
    partial void UpdateProductListPriceHistory(ProductListPriceHistory instance);
    partial void DeleteProductListPriceHistory(ProductListPriceHistory instance);
    partial void InsertProductModel(ProductModel instance);
    partial void UpdateProductModel(ProductModel instance);
    partial void DeleteProductModel(ProductModel instance);
    partial void InsertProductModelIllustration(ProductModelIllustration instance);
    partial void UpdateProductModelIllustration(ProductModelIllustration instance);
    partial void DeleteProductModelIllustration(ProductModelIllustration instance);
    partial void InsertProductModelProductDescriptionCulture(ProductModelProductDescriptionCulture instance);
    partial void UpdateProductModelProductDescriptionCulture(ProductModelProductDescriptionCulture instance);
    partial void DeleteProductModelProductDescriptionCulture(ProductModelProductDescriptionCulture instance);
    partial void InsertProductPhoto(ProductPhoto instance);
    partial void UpdateProductPhoto(ProductPhoto instance);
    partial void DeleteProductPhoto(ProductPhoto instance);
    partial void InsertProductProductPhoto(ProductProductPhoto instance);
    partial void UpdateProductProductPhoto(ProductProductPhoto instance);
    partial void DeleteProductProductPhoto(ProductProductPhoto instance);
    partial void InsertProductReview(ProductReview instance);
    partial void UpdateProductReview(ProductReview instance);
    partial void DeleteProductReview(ProductReview instance);
    partial void InsertProductSubcategory(ProductSubcategory instance);
    partial void UpdateProductSubcategory(ProductSubcategory instance);
    partial void DeleteProductSubcategory(ProductSubcategory instance);
    partial void InsertScrapReason(ScrapReason instance);
    partial void UpdateScrapReason(ScrapReason instance);
    partial void DeleteScrapReason(ScrapReason instance);
    partial void InsertTransactionHistory(TransactionHistory instance);
    partial void UpdateTransactionHistory(TransactionHistory instance);
    partial void DeleteTransactionHistory(TransactionHistory instance);
    partial void InsertTransactionHistoryArchive(TransactionHistoryArchive instance);
    partial void UpdateTransactionHistoryArchive(TransactionHistoryArchive instance);
    partial void DeleteTransactionHistoryArchive(TransactionHistoryArchive instance);
    partial void InsertUnitMeasure(UnitMeasure instance);
    partial void UpdateUnitMeasure(UnitMeasure instance);
    partial void DeleteUnitMeasure(UnitMeasure instance);
    partial void InsertWorkOrder(WorkOrder instance);
    partial void UpdateWorkOrder(WorkOrder instance);
    partial void DeleteWorkOrder(WorkOrder instance);
    partial void InsertWorkOrderRouting(WorkOrderRouting instance);
    partial void UpdateWorkOrderRouting(WorkOrderRouting instance);
    partial void DeleteWorkOrderRouting(WorkOrderRouting instance);
    partial void InsertProductVendor(ProductVendor instance);
    partial void UpdateProductVendor(ProductVendor instance);
    partial void DeleteProductVendor(ProductVendor instance);
    partial void InsertPurchaseOrderDetail(PurchaseOrderDetail instance);
    partial void UpdatePurchaseOrderDetail(PurchaseOrderDetail instance);
    partial void DeletePurchaseOrderDetail(PurchaseOrderDetail instance);
    partial void InsertPurchaseOrderHeader(PurchaseOrderHeader instance);
    partial void UpdatePurchaseOrderHeader(PurchaseOrderHeader instance);
    partial void DeletePurchaseOrderHeader(PurchaseOrderHeader instance);
    partial void InsertShipMethod(ShipMethod instance);
    partial void UpdateShipMethod(ShipMethod instance);
    partial void DeleteShipMethod(ShipMethod instance);
    partial void InsertVendor(Vendor instance);
    partial void UpdateVendor(Vendor instance);
    partial void DeleteVendor(Vendor instance);
    partial void InsertCountryRegionCurrency(CountryRegionCurrency instance);
    partial void UpdateCountryRegionCurrency(CountryRegionCurrency instance);
    partial void DeleteCountryRegionCurrency(CountryRegionCurrency instance);
    partial void InsertCreditCard(CreditCard instance);
    partial void UpdateCreditCard(CreditCard instance);
    partial void DeleteCreditCard(CreditCard instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertCurrencyRate(CurrencyRate instance);
    partial void UpdateCurrencyRate(CurrencyRate instance);
    partial void DeleteCurrencyRate(CurrencyRate instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertPersonCreditCard(PersonCreditCard instance);
    partial void UpdatePersonCreditCard(PersonCreditCard instance);
    partial void DeletePersonCreditCard(PersonCreditCard instance);
    partial void InsertSalesOrderDetail(SalesOrderDetail instance);
    partial void UpdateSalesOrderDetail(SalesOrderDetail instance);
    partial void DeleteSalesOrderDetail(SalesOrderDetail instance);
    partial void InsertSalesOrderHeader(SalesOrderHeader instance);
    partial void UpdateSalesOrderHeader(SalesOrderHeader instance);
    partial void DeleteSalesOrderHeader(SalesOrderHeader instance);
    partial void InsertSalesOrderHeaderSalesReason(SalesOrderHeaderSalesReason instance);
    partial void UpdateSalesOrderHeaderSalesReason(SalesOrderHeaderSalesReason instance);
    partial void DeleteSalesOrderHeaderSalesReason(SalesOrderHeaderSalesReason instance);
    partial void InsertSalesPerson(SalesPerson instance);
    partial void UpdateSalesPerson(SalesPerson instance);
    partial void DeleteSalesPerson(SalesPerson instance);
    partial void InsertSalesPersonQuotaHistory(SalesPersonQuotaHistory instance);
    partial void UpdateSalesPersonQuotaHistory(SalesPersonQuotaHistory instance);
    partial void DeleteSalesPersonQuotaHistory(SalesPersonQuotaHistory instance);
    partial void InsertSalesReason(SalesReason instance);
    partial void UpdateSalesReason(SalesReason instance);
    partial void DeleteSalesReason(SalesReason instance);
    partial void InsertSalesTaxRate(SalesTaxRate instance);
    partial void UpdateSalesTaxRate(SalesTaxRate instance);
    partial void DeleteSalesTaxRate(SalesTaxRate instance);
    partial void InsertSalesTerritory(SalesTerritory instance);
    partial void UpdateSalesTerritory(SalesTerritory instance);
    partial void DeleteSalesTerritory(SalesTerritory instance);
    partial void InsertSalesTerritoryHistory(SalesTerritoryHistory instance);
    partial void UpdateSalesTerritoryHistory(SalesTerritoryHistory instance);
    partial void DeleteSalesTerritoryHistory(SalesTerritoryHistory instance);
    partial void InsertShoppingCartItem(ShoppingCartItem instance);
    partial void UpdateShoppingCartItem(ShoppingCartItem instance);
    partial void DeleteShoppingCartItem(ShoppingCartItem instance);
    partial void InsertSpecialOffer(SpecialOffer instance);
    partial void UpdateSpecialOffer(SpecialOffer instance);
    partial void DeleteSpecialOffer(SpecialOffer instance);
    partial void InsertSpecialOfferProduct(SpecialOfferProduct instance);
    partial void UpdateSpecialOfferProduct(SpecialOfferProduct instance);
    partial void DeleteSpecialOfferProduct(SpecialOfferProduct instance);
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertIllustration(Illustration instance);
    partial void UpdateIllustration(Illustration instance);
    partial void DeleteIllustration(Illustration instance);
    partial void InsertBillOfMaterial(BillOfMaterial instance);
    partial void UpdateBillOfMaterial(BillOfMaterial instance);
    partial void DeleteBillOfMaterial(BillOfMaterial instance);
    partial void InsertStateProvince(StateProvince instance);
    partial void UpdateStateProvince(StateProvince instance);
    partial void DeleteStateProvince(StateProvince instance);
    partial void InsertPhoneNumberType(PhoneNumberType instance);
    partial void UpdatePhoneNumberType(PhoneNumberType instance);
    partial void DeletePhoneNumberType(PhoneNumberType instance);
    partial void InsertPersonPhone(PersonPhone instance);
    partial void UpdatePersonPhone(PersonPhone instance);
    partial void DeletePersonPhone(PersonPhone instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertPassword(Password instance);
    partial void UpdatePassword(Password instance);
    partial void DeletePassword(Password instance);
    partial void InsertBusinessEntityContact(BusinessEntityContact instance);
    partial void UpdateBusinessEntityContact(BusinessEntityContact instance);
    partial void DeleteBusinessEntityContact(BusinessEntityContact instance);
    partial void InsertBusinessEntityAddress(BusinessEntityAddress instance);
    partial void UpdateBusinessEntityAddress(BusinessEntityAddress instance);
    partial void DeleteBusinessEntityAddress(BusinessEntityAddress instance);
    partial void InsertBusinessEntity(BusinessEntity instance);
    partial void UpdateBusinessEntity(BusinessEntity instance);
    partial void DeleteBusinessEntity(BusinessEntity instance);
    partial void InsertAddressType(AddressType instance);
    partial void UpdateAddressType(AddressType instance);
    partial void DeleteAddressType(AddressType instance);
    #endregion
		
		public AdventureWorksDataContext() : 
				base(global::PROWF40.CH13.AdventureWorksAccess.Properties.Settings.Default.AdventureWorks2012ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AdventureWorksDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdventureWorksDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdventureWorksDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdventureWorksDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AWBuildVersion> AWBuildVersions
		{
			get
			{
				return this.GetTable<AWBuildVersion>();
			}
		}
		
		public System.Data.Linq.Table<ErrorLog> ErrorLogs
		{
			get
			{
				return this.GetTable<ErrorLog>();
			}
		}
		
		public System.Data.Linq.Table<DatabaseLog> DatabaseLogs
		{
			get
			{
				return this.GetTable<DatabaseLog>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeDepartmentHistory> EmployeeDepartmentHistories
		{
			get
			{
				return this.GetTable<EmployeeDepartmentHistory>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductCategory> ProductCategories
		{
			get
			{
				return this.GetTable<ProductCategory>();
			}
		}
		
		public System.Data.Linq.Table<ProductCostHistory> ProductCostHistories
		{
			get
			{
				return this.GetTable<ProductCostHistory>();
			}
		}
		
		public System.Data.Linq.Table<ProductDescription> ProductDescriptions
		{
			get
			{
				return this.GetTable<ProductDescription>();
			}
		}
		
		public System.Data.Linq.Table<ProductInventory> ProductInventories
		{
			get
			{
				return this.GetTable<ProductInventory>();
			}
		}
		
		public System.Data.Linq.Table<ProductListPriceHistory> ProductListPriceHistories
		{
			get
			{
				return this.GetTable<ProductListPriceHistory>();
			}
		}
		
		public System.Data.Linq.Table<ProductModel> ProductModels
		{
			get
			{
				return this.GetTable<ProductModel>();
			}
		}
		
		public System.Data.Linq.Table<ProductModelIllustration> ProductModelIllustrations
		{
			get
			{
				return this.GetTable<ProductModelIllustration>();
			}
		}
		
		public System.Data.Linq.Table<ProductModelProductDescriptionCulture> ProductModelProductDescriptionCultures
		{
			get
			{
				return this.GetTable<ProductModelProductDescriptionCulture>();
			}
		}
		
		public System.Data.Linq.Table<ProductPhoto> ProductPhotos
		{
			get
			{
				return this.GetTable<ProductPhoto>();
			}
		}
		
		public System.Data.Linq.Table<ProductProductPhoto> ProductProductPhotos
		{
			get
			{
				return this.GetTable<ProductProductPhoto>();
			}
		}
		
		public System.Data.Linq.Table<ProductReview> ProductReviews
		{
			get
			{
				return this.GetTable<ProductReview>();
			}
		}
		
		public System.Data.Linq.Table<ProductSubcategory> ProductSubcategories
		{
			get
			{
				return this.GetTable<ProductSubcategory>();
			}
		}
		
		public System.Data.Linq.Table<ScrapReason> ScrapReasons
		{
			get
			{
				return this.GetTable<ScrapReason>();
			}
		}
		
		public System.Data.Linq.Table<TransactionHistory> TransactionHistories
		{
			get
			{
				return this.GetTable<TransactionHistory>();
			}
		}
		
		public System.Data.Linq.Table<TransactionHistoryArchive> TransactionHistoryArchives
		{
			get
			{
				return this.GetTable<TransactionHistoryArchive>();
			}
		}
		
		public System.Data.Linq.Table<UnitMeasure> UnitMeasures
		{
			get
			{
				return this.GetTable<UnitMeasure>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrder> WorkOrders
		{
			get
			{
				return this.GetTable<WorkOrder>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderRouting> WorkOrderRoutings
		{
			get
			{
				return this.GetTable<WorkOrderRouting>();
			}
		}
		
		public System.Data.Linq.Table<ProductVendor> ProductVendors
		{
			get
			{
				return this.GetTable<ProductVendor>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseOrderDetail> PurchaseOrderDetails
		{
			get
			{
				return this.GetTable<PurchaseOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseOrderHeader> PurchaseOrderHeaders
		{
			get
			{
				return this.GetTable<PurchaseOrderHeader>();
			}
		}
		
		public System.Data.Linq.Table<ShipMethod> ShipMethods
		{
			get
			{
				return this.GetTable<ShipMethod>();
			}
		}
		
		public System.Data.Linq.Table<Vendor> Vendors
		{
			get
			{
				return this.GetTable<Vendor>();
			}
		}
		
		public System.Data.Linq.Table<CountryRegionCurrency> CountryRegionCurrencies
		{
			get
			{
				return this.GetTable<CountryRegionCurrency>();
			}
		}
		
		public System.Data.Linq.Table<CreditCard> CreditCards
		{
			get
			{
				return this.GetTable<CreditCard>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyRate> CurrencyRates
		{
			get
			{
				return this.GetTable<CurrencyRate>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<PersonCreditCard> PersonCreditCards
		{
			get
			{
				return this.GetTable<PersonCreditCard>();
			}
		}
		
		public System.Data.Linq.Table<SalesOrderDetail> SalesOrderDetails
		{
			get
			{
				return this.GetTable<SalesOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<SalesOrderHeader> SalesOrderHeaders
		{
			get
			{
				return this.GetTable<SalesOrderHeader>();
			}
		}
		
		public System.Data.Linq.Table<SalesOrderHeaderSalesReason> SalesOrderHeaderSalesReasons
		{
			get
			{
				return this.GetTable<SalesOrderHeaderSalesReason>();
			}
		}
		
		public System.Data.Linq.Table<SalesPerson> SalesPersons
		{
			get
			{
				return this.GetTable<SalesPerson>();
			}
		}
		
		public System.Data.Linq.Table<SalesPersonQuotaHistory> SalesPersonQuotaHistories
		{
			get
			{
				return this.GetTable<SalesPersonQuotaHistory>();
			}
		}
		
		public System.Data.Linq.Table<SalesReason> SalesReasons
		{
			get
			{
				return this.GetTable<SalesReason>();
			}
		}
		
		public System.Data.Linq.Table<SalesTaxRate> SalesTaxRates
		{
			get
			{
				return this.GetTable<SalesTaxRate>();
			}
		}
		
		public System.Data.Linq.Table<SalesTerritory> SalesTerritories
		{
			get
			{
				return this.GetTable<SalesTerritory>();
			}
		}
		
		public System.Data.Linq.Table<SalesTerritoryHistory> SalesTerritoryHistories
		{
			get
			{
				return this.GetTable<SalesTerritoryHistory>();
			}
		}
		
		public System.Data.Linq.Table<ShoppingCartItem> ShoppingCartItems
		{
			get
			{
				return this.GetTable<ShoppingCartItem>();
			}
		}
		
		public System.Data.Linq.Table<SpecialOffer> SpecialOffers
		{
			get
			{
				return this.GetTable<SpecialOffer>();
			}
		}
		
		public System.Data.Linq.Table<SpecialOfferProduct> SpecialOfferProducts
		{
			get
			{
				return this.GetTable<SpecialOfferProduct>();
			}
		}
		
		public System.Data.Linq.Table<Store> Stores
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<Illustration> Illustrations
		{
			get
			{
				return this.GetTable<Illustration>();
			}
		}
		
		public System.Data.Linq.Table<BillOfMaterial> BillOfMaterials
		{
			get
			{
				return this.GetTable<BillOfMaterial>();
			}
		}
		
		public System.Data.Linq.Table<StateProvince> StateProvinces
		{
			get
			{
				return this.GetTable<StateProvince>();
			}
		}
		
		public System.Data.Linq.Table<PhoneNumberType> PhoneNumberTypes
		{
			get
			{
				return this.GetTable<PhoneNumberType>();
			}
		}
		
		public System.Data.Linq.Table<PersonPhone> PersonPhones
		{
			get
			{
				return this.GetTable<PersonPhone>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Password> Passwords
		{
			get
			{
				return this.GetTable<Password>();
			}
		}
		
		public System.Data.Linq.Table<BusinessEntityContact> BusinessEntityContacts
		{
			get
			{
				return this.GetTable<BusinessEntityContact>();
			}
		}
		
		public System.Data.Linq.Table<BusinessEntityAddress> BusinessEntityAddresses
		{
			get
			{
				return this.GetTable<BusinessEntityAddress>();
			}
		}
		
		public System.Data.Linq.Table<BusinessEntity> BusinessEntities
		{
			get
			{
				return this.GetTable<BusinessEntity>();
			}
		}
		
		public System.Data.Linq.Table<AddressType> AddressTypes
		{
			get
			{
				return this.GetTable<AddressType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AWBuildVersion")]
	public partial class AWBuildVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _SystemInformationID;
		
		private string _Database_Version;
		
		private System.DateTime _VersionDate;
		
		private System.DateTime _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystemInformationIDChanging(byte value);
    partial void OnSystemInformationIDChanged();
    partial void OnDatabase_VersionChanging(string value);
    partial void OnDatabase_VersionChanged();
    partial void OnVersionDateChanging(System.DateTime value);
    partial void OnVersionDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public AWBuildVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemInformationID", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte SystemInformationID
		{
			get
			{
				return this._SystemInformationID;
			}
			set
			{
				if ((this._SystemInformationID != value))
				{
					this.OnSystemInformationIDChanging(value);
					this.SendPropertyChanging();
					this._SystemInformationID = value;
					this.SendPropertyChanged("SystemInformationID");
					this.OnSystemInformationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Database Version]", Storage="_Database_Version", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string Database_Version
		{
			get
			{
				return this._Database_Version;
			}
			set
			{
				if ((this._Database_Version != value))
				{
					this.OnDatabase_VersionChanging(value);
					this.SendPropertyChanging();
					this._Database_Version = value;
					this.SendPropertyChanged("Database_Version");
					this.OnDatabase_VersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionDate", DbType="DateTime NOT NULL")]
		public System.DateTime VersionDate
		{
			get
			{
				return this._VersionDate;
			}
			set
			{
				if ((this._VersionDate != value))
				{
					this.OnVersionDateChanging(value);
					this.SendPropertyChanging();
					this._VersionDate = value;
					this.SendPropertyChanged("VersionDate");
					this.OnVersionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ErrorLog")]
	public partial class ErrorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ErrorLogID;
		
		private System.DateTime _ErrorTime;
		
		private string _UserName;
		
		private int _ErrorNumber;
		
		private System.Nullable<int> _ErrorSeverity;
		
		private System.Nullable<int> _ErrorState;
		
		private string _ErrorProcedure;
		
		private System.Nullable<int> _ErrorLine;
		
		private string _ErrorMessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnErrorLogIDChanging(int value);
    partial void OnErrorLogIDChanged();
    partial void OnErrorTimeChanging(System.DateTime value);
    partial void OnErrorTimeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnErrorNumberChanging(int value);
    partial void OnErrorNumberChanged();
    partial void OnErrorSeverityChanging(System.Nullable<int> value);
    partial void OnErrorSeverityChanged();
    partial void OnErrorStateChanging(System.Nullable<int> value);
    partial void OnErrorStateChanged();
    partial void OnErrorProcedureChanging(string value);
    partial void OnErrorProcedureChanged();
    partial void OnErrorLineChanging(System.Nullable<int> value);
    partial void OnErrorLineChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    #endregion
		
		public ErrorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ErrorLogID
		{
			get
			{
				return this._ErrorLogID;
			}
			set
			{
				if ((this._ErrorLogID != value))
				{
					this.OnErrorLogIDChanging(value);
					this.SendPropertyChanging();
					this._ErrorLogID = value;
					this.SendPropertyChanged("ErrorLogID");
					this.OnErrorLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorTime", DbType="DateTime NOT NULL")]
		public System.DateTime ErrorTime
		{
			get
			{
				return this._ErrorTime;
			}
			set
			{
				if ((this._ErrorTime != value))
				{
					this.OnErrorTimeChanging(value);
					this.SendPropertyChanging();
					this._ErrorTime = value;
					this.SendPropertyChanged("ErrorTime");
					this.OnErrorTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorNumber", DbType="Int NOT NULL")]
		public int ErrorNumber
		{
			get
			{
				return this._ErrorNumber;
			}
			set
			{
				if ((this._ErrorNumber != value))
				{
					this.OnErrorNumberChanging(value);
					this.SendPropertyChanging();
					this._ErrorNumber = value;
					this.SendPropertyChanged("ErrorNumber");
					this.OnErrorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorSeverity", DbType="Int")]
		public System.Nullable<int> ErrorSeverity
		{
			get
			{
				return this._ErrorSeverity;
			}
			set
			{
				if ((this._ErrorSeverity != value))
				{
					this.OnErrorSeverityChanging(value);
					this.SendPropertyChanging();
					this._ErrorSeverity = value;
					this.SendPropertyChanged("ErrorSeverity");
					this.OnErrorSeverityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorState", DbType="Int")]
		public System.Nullable<int> ErrorState
		{
			get
			{
				return this._ErrorState;
			}
			set
			{
				if ((this._ErrorState != value))
				{
					this.OnErrorStateChanging(value);
					this.SendPropertyChanging();
					this._ErrorState = value;
					this.SendPropertyChanged("ErrorState");
					this.OnErrorStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorProcedure", DbType="NVarChar(126)")]
		public string ErrorProcedure
		{
			get
			{
				return this._ErrorProcedure;
			}
			set
			{
				if ((this._ErrorProcedure != value))
				{
					this.OnErrorProcedureChanging(value);
					this.SendPropertyChanging();
					this._ErrorProcedure = value;
					this.SendPropertyChanged("ErrorProcedure");
					this.OnErrorProcedureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorLine", DbType="Int")]
		public System.Nullable<int> ErrorLine
		{
			get
			{
				return this._ErrorLine;
			}
			set
			{
				if ((this._ErrorLine != value))
				{
					this.OnErrorLineChanging(value);
					this.SendPropertyChanging();
					this._ErrorLine = value;
					this.SendPropertyChanged("ErrorLine");
					this.OnErrorLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DatabaseLog")]
	public partial class DatabaseLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DatabaseLogID;
		
		private System.DateTime _PostTime;
		
		private string _DatabaseUser;
		
		private string _Event;
		
		private string _Schema;
		
		private string _Object;
		
		private string _TSQL;
		
		private System.Xml.Linq.XElement _XmlEvent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDatabaseLogIDChanging(int value);
    partial void OnDatabaseLogIDChanged();
    partial void OnPostTimeChanging(System.DateTime value);
    partial void OnPostTimeChanged();
    partial void OnDatabaseUserChanging(string value);
    partial void OnDatabaseUserChanged();
    partial void OnEventChanging(string value);
    partial void OnEventChanged();
    partial void OnSchemaChanging(string value);
    partial void OnSchemaChanged();
    partial void OnObjectChanging(string value);
    partial void OnObjectChanged();
    partial void OnTSQLChanging(string value);
    partial void OnTSQLChanged();
    partial void OnXmlEventChanging(System.Xml.Linq.XElement value);
    partial void OnXmlEventChanged();
    #endregion
		
		public DatabaseLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseLogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DatabaseLogID
		{
			get
			{
				return this._DatabaseLogID;
			}
			set
			{
				if ((this._DatabaseLogID != value))
				{
					this.OnDatabaseLogIDChanging(value);
					this.SendPropertyChanging();
					this._DatabaseLogID = value;
					this.SendPropertyChanged("DatabaseLogID");
					this.OnDatabaseLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostTime", DbType="DateTime NOT NULL")]
		public System.DateTime PostTime
		{
			get
			{
				return this._PostTime;
			}
			set
			{
				if ((this._PostTime != value))
				{
					this.OnPostTimeChanging(value);
					this.SendPropertyChanging();
					this._PostTime = value;
					this.SendPropertyChanged("PostTime");
					this.OnPostTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseUser", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DatabaseUser
		{
			get
			{
				return this._DatabaseUser;
			}
			set
			{
				if ((this._DatabaseUser != value))
				{
					this.OnDatabaseUserChanging(value);
					this.SendPropertyChanging();
					this._DatabaseUser = value;
					this.SendPropertyChanged("DatabaseUser");
					this.OnDatabaseUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Event
		{
			get
			{
				return this._Event;
			}
			set
			{
				if ((this._Event != value))
				{
					this.OnEventChanging(value);
					this.SendPropertyChanging();
					this._Event = value;
					this.SendPropertyChanged("Event");
					this.OnEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Schema]", Storage="_Schema", DbType="NVarChar(128)")]
		public string Schema
		{
			get
			{
				return this._Schema;
			}
			set
			{
				if ((this._Schema != value))
				{
					this.OnSchemaChanging(value);
					this.SendPropertyChanging();
					this._Schema = value;
					this.SendPropertyChanged("Schema");
					this.OnSchemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object", DbType="NVarChar(128)")]
		public string Object
		{
			get
			{
				return this._Object;
			}
			set
			{
				if ((this._Object != value))
				{
					this.OnObjectChanging(value);
					this.SendPropertyChanging();
					this._Object = value;
					this.SendPropertyChanged("Object");
					this.OnObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TSQL", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TSQL
		{
			get
			{
				return this._TSQL;
			}
			set
			{
				if ((this._TSQL != value))
				{
					this.OnTSQLChanging(value);
					this.SendPropertyChanging();
					this._TSQL = value;
					this.SendPropertyChanged("TSQL");
					this.OnTSQLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XmlEvent", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement XmlEvent
		{
			get
			{
				return this._XmlEvent;
			}
			set
			{
				if ((this._XmlEvent != value))
				{
					this.OnXmlEventChanging(value);
					this.SendPropertyChanging();
					this._XmlEvent = value;
					this.SendPropertyChanged("XmlEvent");
					this.OnXmlEventChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="HumanResources.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _DepartmentID;
		
		private string _Name;
		
		private string _GroupName;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<EmployeeDepartmentHistory> _EmployeeDepartmentHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIDChanging(short value);
    partial void OnDepartmentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Department()
		{
			this._EmployeeDepartmentHistories = new EntitySet<EmployeeDepartmentHistory>(new Action<EmployeeDepartmentHistory>(this.attach_EmployeeDepartmentHistories), new Action<EmployeeDepartmentHistory>(this.detach_EmployeeDepartmentHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_EmployeeDepartmentHistory", Storage="_EmployeeDepartmentHistories", ThisKey="DepartmentID", OtherKey="DepartmentID")]
		public EntitySet<EmployeeDepartmentHistory> EmployeeDepartmentHistories
		{
			get
			{
				return this._EmployeeDepartmentHistories;
			}
			set
			{
				this._EmployeeDepartmentHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeDepartmentHistories(EmployeeDepartmentHistory entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_EmployeeDepartmentHistories(EmployeeDepartmentHistory entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="HumanResources.EmployeeDepartmentHistory")]
	public partial class EmployeeDepartmentHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private short _DepartmentID;
		
		private byte _ShiftID;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Department> _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnDepartmentIDChanging(short value);
    partial void OnDepartmentIDChanged();
    partial void OnShiftIDChanging(byte value);
    partial void OnShiftIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public EmployeeDepartmentHistory()
		{
			this._Department = default(EntityRef<Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short DepartmentID
		{
			get
			{
				return this._DepartmentID;
			}
			set
			{
				if ((this._DepartmentID != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._DepartmentID = value;
					this.SendPropertyChanged("DepartmentID");
					this.OnDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShiftID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ShiftID
		{
			get
			{
				return this._ShiftID;
			}
			set
			{
				if ((this._ShiftID != value))
				{
					this.OnShiftIDChanging(value);
					this.SendPropertyChanging();
					this._ShiftID = value;
					this.SendPropertyChanged("ShiftID");
					this.OnShiftIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_EmployeeDepartmentHistory", Storage="_Department", ThisKey="DepartmentID", OtherKey="DepartmentID", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.EmployeeDepartmentHistories.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.EmployeeDepartmentHistories.Add(this);
						this._DepartmentID = value.DepartmentID;
					}
					else
					{
						this._DepartmentID = default(short);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private string _Name;
		
		private string _ProductNumber;
		
		private bool _MakeFlag;
		
		private bool _FinishedGoodsFlag;
		
		private string _Color;
		
		private short _SafetyStockLevel;
		
		private short _ReorderPoint;
		
		private decimal _StandardCost;
		
		private decimal _ListPrice;
		
		private string _Size;
		
		private string _SizeUnitMeasureCode;
		
		private string _WeightUnitMeasureCode;
		
		private System.Nullable<decimal> _Weight;
		
		private int _DaysToManufacture;
		
		private string _ProductLine;
		
		private string _Class;
		
		private string _Style;
		
		private System.Nullable<int> _ProductSubcategoryID;
		
		private System.Nullable<int> _ProductModelID;
		
		private System.DateTime _SellStartDate;
		
		private System.Nullable<System.DateTime> _SellEndDate;
		
		private System.Nullable<System.DateTime> _DiscontinuedDate;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<ProductCostHistory> _ProductCostHistories;
		
		private EntitySet<ProductInventory> _ProductInventories;
		
		private EntitySet<ProductListPriceHistory> _ProductListPriceHistories;
		
		private EntitySet<ProductProductPhoto> _ProductProductPhotos;
		
		private EntitySet<ProductReview> _ProductReviews;
		
		private EntitySet<TransactionHistory> _TransactionHistories;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
		private EntitySet<ProductVendor> _ProductVendors;
		
		private EntitySet<PurchaseOrderDetail> _PurchaseOrderDetails;
		
		private EntitySet<ShoppingCartItem> _ShoppingCartItems;
		
		private EntitySet<SpecialOfferProduct> _SpecialOfferProducts;
		
		private EntitySet<BillOfMaterial> _BillOfMaterials;
		
		private EntitySet<BillOfMaterial> _BillOfMaterials1;
		
		private EntityRef<ProductModel> _ProductModel;
		
		private EntityRef<ProductSubcategory> _ProductSubcategory;
		
		private EntityRef<UnitMeasure> _UnitMeasure;
		
		private EntityRef<UnitMeasure> _UnitMeasure1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProductNumberChanging(string value);
    partial void OnProductNumberChanged();
    partial void OnMakeFlagChanging(bool value);
    partial void OnMakeFlagChanged();
    partial void OnFinishedGoodsFlagChanging(bool value);
    partial void OnFinishedGoodsFlagChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSafetyStockLevelChanging(short value);
    partial void OnSafetyStockLevelChanged();
    partial void OnReorderPointChanging(short value);
    partial void OnReorderPointChanged();
    partial void OnStandardCostChanging(decimal value);
    partial void OnStandardCostChanged();
    partial void OnListPriceChanging(decimal value);
    partial void OnListPriceChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnSizeUnitMeasureCodeChanging(string value);
    partial void OnSizeUnitMeasureCodeChanged();
    partial void OnWeightUnitMeasureCodeChanging(string value);
    partial void OnWeightUnitMeasureCodeChanged();
    partial void OnWeightChanging(System.Nullable<decimal> value);
    partial void OnWeightChanged();
    partial void OnDaysToManufactureChanging(int value);
    partial void OnDaysToManufactureChanged();
    partial void OnProductLineChanging(string value);
    partial void OnProductLineChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnStyleChanging(string value);
    partial void OnStyleChanged();
    partial void OnProductSubcategoryIDChanging(System.Nullable<int> value);
    partial void OnProductSubcategoryIDChanged();
    partial void OnProductModelIDChanging(System.Nullable<int> value);
    partial void OnProductModelIDChanged();
    partial void OnSellStartDateChanging(System.DateTime value);
    partial void OnSellStartDateChanged();
    partial void OnSellEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSellEndDateChanged();
    partial void OnDiscontinuedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDiscontinuedDateChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Product()
		{
			this._ProductCostHistories = new EntitySet<ProductCostHistory>(new Action<ProductCostHistory>(this.attach_ProductCostHistories), new Action<ProductCostHistory>(this.detach_ProductCostHistories));
			this._ProductInventories = new EntitySet<ProductInventory>(new Action<ProductInventory>(this.attach_ProductInventories), new Action<ProductInventory>(this.detach_ProductInventories));
			this._ProductListPriceHistories = new EntitySet<ProductListPriceHistory>(new Action<ProductListPriceHistory>(this.attach_ProductListPriceHistories), new Action<ProductListPriceHistory>(this.detach_ProductListPriceHistories));
			this._ProductProductPhotos = new EntitySet<ProductProductPhoto>(new Action<ProductProductPhoto>(this.attach_ProductProductPhotos), new Action<ProductProductPhoto>(this.detach_ProductProductPhotos));
			this._ProductReviews = new EntitySet<ProductReview>(new Action<ProductReview>(this.attach_ProductReviews), new Action<ProductReview>(this.detach_ProductReviews));
			this._TransactionHistories = new EntitySet<TransactionHistory>(new Action<TransactionHistory>(this.attach_TransactionHistories), new Action<TransactionHistory>(this.detach_TransactionHistories));
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			this._ProductVendors = new EntitySet<ProductVendor>(new Action<ProductVendor>(this.attach_ProductVendors), new Action<ProductVendor>(this.detach_ProductVendors));
			this._PurchaseOrderDetails = new EntitySet<PurchaseOrderDetail>(new Action<PurchaseOrderDetail>(this.attach_PurchaseOrderDetails), new Action<PurchaseOrderDetail>(this.detach_PurchaseOrderDetails));
			this._ShoppingCartItems = new EntitySet<ShoppingCartItem>(new Action<ShoppingCartItem>(this.attach_ShoppingCartItems), new Action<ShoppingCartItem>(this.detach_ShoppingCartItems));
			this._SpecialOfferProducts = new EntitySet<SpecialOfferProduct>(new Action<SpecialOfferProduct>(this.attach_SpecialOfferProducts), new Action<SpecialOfferProduct>(this.detach_SpecialOfferProducts));
			this._BillOfMaterials = new EntitySet<BillOfMaterial>(new Action<BillOfMaterial>(this.attach_BillOfMaterials), new Action<BillOfMaterial>(this.detach_BillOfMaterials));
			this._BillOfMaterials1 = new EntitySet<BillOfMaterial>(new Action<BillOfMaterial>(this.attach_BillOfMaterials1), new Action<BillOfMaterial>(this.detach_BillOfMaterials1));
			this._ProductModel = default(EntityRef<ProductModel>);
			this._ProductSubcategory = default(EntityRef<ProductSubcategory>);
			this._UnitMeasure = default(EntityRef<UnitMeasure>);
			this._UnitMeasure1 = default(EntityRef<UnitMeasure>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string ProductNumber
		{
			get
			{
				return this._ProductNumber;
			}
			set
			{
				if ((this._ProductNumber != value))
				{
					this.OnProductNumberChanging(value);
					this.SendPropertyChanging();
					this._ProductNumber = value;
					this.SendPropertyChanged("ProductNumber");
					this.OnProductNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MakeFlag", DbType="Bit NOT NULL")]
		public bool MakeFlag
		{
			get
			{
				return this._MakeFlag;
			}
			set
			{
				if ((this._MakeFlag != value))
				{
					this.OnMakeFlagChanging(value);
					this.SendPropertyChanging();
					this._MakeFlag = value;
					this.SendPropertyChanged("MakeFlag");
					this.OnMakeFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishedGoodsFlag", DbType="Bit NOT NULL")]
		public bool FinishedGoodsFlag
		{
			get
			{
				return this._FinishedGoodsFlag;
			}
			set
			{
				if ((this._FinishedGoodsFlag != value))
				{
					this.OnFinishedGoodsFlagChanging(value);
					this.SendPropertyChanging();
					this._FinishedGoodsFlag = value;
					this.SendPropertyChanged("FinishedGoodsFlag");
					this.OnFinishedGoodsFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(15)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafetyStockLevel", DbType="SmallInt NOT NULL")]
		public short SafetyStockLevel
		{
			get
			{
				return this._SafetyStockLevel;
			}
			set
			{
				if ((this._SafetyStockLevel != value))
				{
					this.OnSafetyStockLevelChanging(value);
					this.SendPropertyChanging();
					this._SafetyStockLevel = value;
					this.SendPropertyChanged("SafetyStockLevel");
					this.OnSafetyStockLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderPoint", DbType="SmallInt NOT NULL")]
		public short ReorderPoint
		{
			get
			{
				return this._ReorderPoint;
			}
			set
			{
				if ((this._ReorderPoint != value))
				{
					this.OnReorderPointChanging(value);
					this.SendPropertyChanging();
					this._ReorderPoint = value;
					this.SendPropertyChanged("ReorderPoint");
					this.OnReorderPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardCost", DbType="Money NOT NULL")]
		public decimal StandardCost
		{
			get
			{
				return this._StandardCost;
			}
			set
			{
				if ((this._StandardCost != value))
				{
					this.OnStandardCostChanging(value);
					this.SendPropertyChanging();
					this._StandardCost = value;
					this.SendPropertyChanged("StandardCost");
					this.OnStandardCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListPrice", DbType="Money NOT NULL")]
		public decimal ListPrice
		{
			get
			{
				return this._ListPrice;
			}
			set
			{
				if ((this._ListPrice != value))
				{
					this.OnListPriceChanging(value);
					this.SendPropertyChanging();
					this._ListPrice = value;
					this.SendPropertyChanged("ListPrice");
					this.OnListPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="NVarChar(5)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SizeUnitMeasureCode", DbType="NChar(3)")]
		public string SizeUnitMeasureCode
		{
			get
			{
				return this._SizeUnitMeasureCode;
			}
			set
			{
				if ((this._SizeUnitMeasureCode != value))
				{
					if (this._UnitMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSizeUnitMeasureCodeChanging(value);
					this.SendPropertyChanging();
					this._SizeUnitMeasureCode = value;
					this.SendPropertyChanged("SizeUnitMeasureCode");
					this.OnSizeUnitMeasureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightUnitMeasureCode", DbType="NChar(3)")]
		public string WeightUnitMeasureCode
		{
			get
			{
				return this._WeightUnitMeasureCode;
			}
			set
			{
				if ((this._WeightUnitMeasureCode != value))
				{
					if (this._UnitMeasure1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWeightUnitMeasureCodeChanging(value);
					this.SendPropertyChanging();
					this._WeightUnitMeasureCode = value;
					this.SendPropertyChanged("WeightUnitMeasureCode");
					this.OnWeightUnitMeasureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysToManufacture", DbType="Int NOT NULL")]
		public int DaysToManufacture
		{
			get
			{
				return this._DaysToManufacture;
			}
			set
			{
				if ((this._DaysToManufacture != value))
				{
					this.OnDaysToManufactureChanging(value);
					this.SendPropertyChanging();
					this._DaysToManufacture = value;
					this.SendPropertyChanged("DaysToManufacture");
					this.OnDaysToManufactureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductLine", DbType="NChar(2)")]
		public string ProductLine
		{
			get
			{
				return this._ProductLine;
			}
			set
			{
				if ((this._ProductLine != value))
				{
					this.OnProductLineChanging(value);
					this.SendPropertyChanging();
					this._ProductLine = value;
					this.SendPropertyChanged("ProductLine");
					this.OnProductLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NChar(2)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Style", DbType="NChar(2)")]
		public string Style
		{
			get
			{
				return this._Style;
			}
			set
			{
				if ((this._Style != value))
				{
					this.OnStyleChanging(value);
					this.SendPropertyChanging();
					this._Style = value;
					this.SendPropertyChanged("Style");
					this.OnStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSubcategoryID", DbType="Int")]
		public System.Nullable<int> ProductSubcategoryID
		{
			get
			{
				return this._ProductSubcategoryID;
			}
			set
			{
				if ((this._ProductSubcategoryID != value))
				{
					if (this._ProductSubcategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductSubcategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ProductSubcategoryID = value;
					this.SendPropertyChanged("ProductSubcategoryID");
					this.OnProductSubcategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductModelID", DbType="Int")]
		public System.Nullable<int> ProductModelID
		{
			get
			{
				return this._ProductModelID;
			}
			set
			{
				if ((this._ProductModelID != value))
				{
					if (this._ProductModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductModelIDChanging(value);
					this.SendPropertyChanging();
					this._ProductModelID = value;
					this.SendPropertyChanged("ProductModelID");
					this.OnProductModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime SellStartDate
		{
			get
			{
				return this._SellStartDate;
			}
			set
			{
				if ((this._SellStartDate != value))
				{
					this.OnSellStartDateChanging(value);
					this.SendPropertyChanging();
					this._SellStartDate = value;
					this.SendPropertyChanged("SellStartDate");
					this.OnSellStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SellEndDate
		{
			get
			{
				return this._SellEndDate;
			}
			set
			{
				if ((this._SellEndDate != value))
				{
					this.OnSellEndDateChanging(value);
					this.SendPropertyChanging();
					this._SellEndDate = value;
					this.SendPropertyChanged("SellEndDate");
					this.OnSellEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscontinuedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DiscontinuedDate
		{
			get
			{
				return this._DiscontinuedDate;
			}
			set
			{
				if ((this._DiscontinuedDate != value))
				{
					this.OnDiscontinuedDateChanging(value);
					this.SendPropertyChanging();
					this._DiscontinuedDate = value;
					this.SendPropertyChanged("DiscontinuedDate");
					this.OnDiscontinuedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductCostHistory", Storage="_ProductCostHistories", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ProductCostHistory> ProductCostHistories
		{
			get
			{
				return this._ProductCostHistories;
			}
			set
			{
				this._ProductCostHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductInventory", Storage="_ProductInventories", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ProductInventory> ProductInventories
		{
			get
			{
				return this._ProductInventories;
			}
			set
			{
				this._ProductInventories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductListPriceHistory", Storage="_ProductListPriceHistories", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ProductListPriceHistory> ProductListPriceHistories
		{
			get
			{
				return this._ProductListPriceHistories;
			}
			set
			{
				this._ProductListPriceHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductProductPhoto", Storage="_ProductProductPhotos", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ProductProductPhoto> ProductProductPhotos
		{
			get
			{
				return this._ProductProductPhotos;
			}
			set
			{
				this._ProductProductPhotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductReview", Storage="_ProductReviews", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ProductReview> ProductReviews
		{
			get
			{
				return this._ProductReviews;
			}
			set
			{
				this._ProductReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_TransactionHistory", Storage="_TransactionHistories", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<TransactionHistory> TransactionHistories
		{
			get
			{
				return this._TransactionHistories;
			}
			set
			{
				this._TransactionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_WorkOrder", Storage="_WorkOrders", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductVendor", Storage="_ProductVendors", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ProductVendor> ProductVendors
		{
			get
			{
				return this._ProductVendors;
			}
			set
			{
				this._ProductVendors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PurchaseOrderDetail", Storage="_PurchaseOrderDetails", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<PurchaseOrderDetail> PurchaseOrderDetails
		{
			get
			{
				return this._PurchaseOrderDetails;
			}
			set
			{
				this._PurchaseOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ShoppingCartItem", Storage="_ShoppingCartItems", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ShoppingCartItem> ShoppingCartItems
		{
			get
			{
				return this._ShoppingCartItems;
			}
			set
			{
				this._ShoppingCartItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_SpecialOfferProduct", Storage="_SpecialOfferProducts", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<SpecialOfferProduct> SpecialOfferProducts
		{
			get
			{
				return this._SpecialOfferProducts;
			}
			set
			{
				this._SpecialOfferProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_BillOfMaterial", Storage="_BillOfMaterials", ThisKey="ProductID", OtherKey="ComponentID")]
		public EntitySet<BillOfMaterial> BillOfMaterials
		{
			get
			{
				return this._BillOfMaterials;
			}
			set
			{
				this._BillOfMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_BillOfMaterial1", Storage="_BillOfMaterials1", ThisKey="ProductID", OtherKey="ProductAssemblyID")]
		public EntitySet<BillOfMaterial> BillOfMaterials1
		{
			get
			{
				return this._BillOfMaterials1;
			}
			set
			{
				this._BillOfMaterials1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductModel_Product", Storage="_ProductModel", ThisKey="ProductModelID", OtherKey="ProductModelID", IsForeignKey=true)]
		public ProductModel ProductModel
		{
			get
			{
				return this._ProductModel.Entity;
			}
			set
			{
				ProductModel previousValue = this._ProductModel.Entity;
				if (((previousValue != value) 
							|| (this._ProductModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductModel.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProductModel.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ProductModelID = value.ProductModelID;
					}
					else
					{
						this._ProductModelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductModel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductSubcategory_Product", Storage="_ProductSubcategory", ThisKey="ProductSubcategoryID", OtherKey="ProductSubcategoryID", IsForeignKey=true)]
		public ProductSubcategory ProductSubcategory
		{
			get
			{
				return this._ProductSubcategory.Entity;
			}
			set
			{
				ProductSubcategory previousValue = this._ProductSubcategory.Entity;
				if (((previousValue != value) 
							|| (this._ProductSubcategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductSubcategory.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProductSubcategory.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ProductSubcategoryID = value.ProductSubcategoryID;
					}
					else
					{
						this._ProductSubcategoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProductSubcategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitMeasure_Product", Storage="_UnitMeasure", ThisKey="SizeUnitMeasureCode", OtherKey="UnitMeasureCode", IsForeignKey=true)]
		public UnitMeasure UnitMeasure
		{
			get
			{
				return this._UnitMeasure.Entity;
			}
			set
			{
				UnitMeasure previousValue = this._UnitMeasure.Entity;
				if (((previousValue != value) 
							|| (this._UnitMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitMeasure.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._UnitMeasure.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._SizeUnitMeasureCode = value.UnitMeasureCode;
					}
					else
					{
						this._SizeUnitMeasureCode = default(string);
					}
					this.SendPropertyChanged("UnitMeasure");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitMeasure_Product1", Storage="_UnitMeasure1", ThisKey="WeightUnitMeasureCode", OtherKey="UnitMeasureCode", IsForeignKey=true)]
		public UnitMeasure UnitMeasure1
		{
			get
			{
				return this._UnitMeasure1.Entity;
			}
			set
			{
				UnitMeasure previousValue = this._UnitMeasure1.Entity;
				if (((previousValue != value) 
							|| (this._UnitMeasure1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitMeasure1.Entity = null;
						previousValue.Products1.Remove(this);
					}
					this._UnitMeasure1.Entity = value;
					if ((value != null))
					{
						value.Products1.Add(this);
						this._WeightUnitMeasureCode = value.UnitMeasureCode;
					}
					else
					{
						this._WeightUnitMeasureCode = default(string);
					}
					this.SendPropertyChanged("UnitMeasure1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductCostHistories(ProductCostHistory entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductCostHistories(ProductCostHistory entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductInventories(ProductInventory entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductInventories(ProductInventory entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductListPriceHistories(ProductListPriceHistory entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductListPriceHistories(ProductListPriceHistory entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductProductPhotos(ProductProductPhoto entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductProductPhotos(ProductProductPhoto entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductReviews(ProductReview entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductReviews(ProductReview entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_TransactionHistories(TransactionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_TransactionHistories(TransactionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductVendors(ProductVendor entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductVendors(ProductVendor entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_PurchaseOrderDetails(PurchaseOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_PurchaseOrderDetails(PurchaseOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ShoppingCartItems(ShoppingCartItem entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ShoppingCartItems(ShoppingCartItem entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_SpecialOfferProducts(SpecialOfferProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_SpecialOfferProducts(SpecialOfferProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_BillOfMaterials(BillOfMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_BillOfMaterials(BillOfMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_BillOfMaterials1(BillOfMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = this;
		}
		
		private void detach_BillOfMaterials1(BillOfMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Product1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ProductCategory")]
	public partial class ProductCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductCategoryID;
		
		private string _Name;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<ProductSubcategory> _ProductSubcategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductCategoryIDChanging(int value);
    partial void OnProductCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductCategory()
		{
			this._ProductSubcategories = new EntitySet<ProductSubcategory>(new Action<ProductSubcategory>(this.attach_ProductSubcategories), new Action<ProductSubcategory>(this.detach_ProductSubcategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					this.OnProductCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryID = value;
					this.SendPropertyChanged("ProductCategoryID");
					this.OnProductCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategory_ProductSubcategory", Storage="_ProductSubcategories", ThisKey="ProductCategoryID", OtherKey="ProductCategoryID")]
		public EntitySet<ProductSubcategory> ProductSubcategories
		{
			get
			{
				return this._ProductSubcategories;
			}
			set
			{
				this._ProductSubcategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductSubcategories(ProductSubcategory entity)
		{
			this.SendPropertyChanging();
			entity.ProductCategory = this;
		}
		
		private void detach_ProductSubcategories(ProductSubcategory entity)
		{
			this.SendPropertyChanging();
			entity.ProductCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ProductCostHistory")]
	public partial class ProductCostHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private decimal _StandardCost;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnStandardCostChanging(decimal value);
    partial void OnStandardCostChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductCostHistory()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardCost", DbType="Money NOT NULL")]
		public decimal StandardCost
		{
			get
			{
				return this._StandardCost;
			}
			set
			{
				if ((this._StandardCost != value))
				{
					this.OnStandardCostChanging(value);
					this.SendPropertyChanging();
					this._StandardCost = value;
					this.SendPropertyChanged("StandardCost");
					this.OnStandardCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductCostHistory", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductCostHistories.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductCostHistories.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ProductDescription")]
	public partial class ProductDescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductDescriptionID;
		
		private string _Description;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<ProductModelProductDescriptionCulture> _ProductModelProductDescriptionCultures;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductDescriptionIDChanging(int value);
    partial void OnProductDescriptionIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductDescription()
		{
			this._ProductModelProductDescriptionCultures = new EntitySet<ProductModelProductDescriptionCulture>(new Action<ProductModelProductDescriptionCulture>(this.attach_ProductModelProductDescriptionCultures), new Action<ProductModelProductDescriptionCulture>(this.detach_ProductModelProductDescriptionCultures));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDescriptionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductDescriptionID
		{
			get
			{
				return this._ProductDescriptionID;
			}
			set
			{
				if ((this._ProductDescriptionID != value))
				{
					this.OnProductDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._ProductDescriptionID = value;
					this.SendPropertyChanged("ProductDescriptionID");
					this.OnProductDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductDescription_ProductModelProductDescriptionCulture", Storage="_ProductModelProductDescriptionCultures", ThisKey="ProductDescriptionID", OtherKey="ProductDescriptionID")]
		public EntitySet<ProductModelProductDescriptionCulture> ProductModelProductDescriptionCultures
		{
			get
			{
				return this._ProductModelProductDescriptionCultures;
			}
			set
			{
				this._ProductModelProductDescriptionCultures.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductModelProductDescriptionCultures(ProductModelProductDescriptionCulture entity)
		{
			this.SendPropertyChanging();
			entity.ProductDescription = this;
		}
		
		private void detach_ProductModelProductDescriptionCultures(ProductModelProductDescriptionCulture entity)
		{
			this.SendPropertyChanging();
			entity.ProductDescription = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ProductInventory")]
	public partial class ProductInventory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private short _LocationID;
		
		private string _Shelf;
		
		private byte _Bin;
		
		private short _Quantity;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnLocationIDChanging(short value);
    partial void OnLocationIDChanged();
    partial void OnShelfChanging(string value);
    partial void OnShelfChanged();
    partial void OnBinChanging(byte value);
    partial void OnBinChanged();
    partial void OnQuantityChanging(short value);
    partial void OnQuantityChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductInventory()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shelf", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Shelf
		{
			get
			{
				return this._Shelf;
			}
			set
			{
				if ((this._Shelf != value))
				{
					this.OnShelfChanging(value);
					this.SendPropertyChanging();
					this._Shelf = value;
					this.SendPropertyChanged("Shelf");
					this.OnShelfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bin", DbType="TinyInt NOT NULL")]
		public byte Bin
		{
			get
			{
				return this._Bin;
			}
			set
			{
				if ((this._Bin != value))
				{
					this.OnBinChanging(value);
					this.SendPropertyChanging();
					this._Bin = value;
					this.SendPropertyChanged("Bin");
					this.OnBinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="SmallInt NOT NULL")]
		public short Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductInventory", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductInventories.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductInventories.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ProductListPriceHistory")]
	public partial class ProductListPriceHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private decimal _ListPrice;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnListPriceChanging(decimal value);
    partial void OnListPriceChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductListPriceHistory()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListPrice", DbType="Money NOT NULL")]
		public decimal ListPrice
		{
			get
			{
				return this._ListPrice;
			}
			set
			{
				if ((this._ListPrice != value))
				{
					this.OnListPriceChanging(value);
					this.SendPropertyChanging();
					this._ListPrice = value;
					this.SendPropertyChanged("ListPrice");
					this.OnListPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductListPriceHistory", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductListPriceHistories.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductListPriceHistories.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ProductModel")]
	public partial class ProductModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductModelID;
		
		private string _Name;
		
		private System.Xml.Linq.XElement _CatalogDescription;
		
		private System.Xml.Linq.XElement _Instructions;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<ProductModelIllustration> _ProductModelIllustrations;
		
		private EntitySet<ProductModelProductDescriptionCulture> _ProductModelProductDescriptionCultures;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductModelIDChanging(int value);
    partial void OnProductModelIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCatalogDescriptionChanging(System.Xml.Linq.XElement value);
    partial void OnCatalogDescriptionChanged();
    partial void OnInstructionsChanging(System.Xml.Linq.XElement value);
    partial void OnInstructionsChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductModel()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._ProductModelIllustrations = new EntitySet<ProductModelIllustration>(new Action<ProductModelIllustration>(this.attach_ProductModelIllustrations), new Action<ProductModelIllustration>(this.detach_ProductModelIllustrations));
			this._ProductModelProductDescriptionCultures = new EntitySet<ProductModelProductDescriptionCulture>(new Action<ProductModelProductDescriptionCulture>(this.attach_ProductModelProductDescriptionCultures), new Action<ProductModelProductDescriptionCulture>(this.detach_ProductModelProductDescriptionCultures));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductModelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductModelID
		{
			get
			{
				return this._ProductModelID;
			}
			set
			{
				if ((this._ProductModelID != value))
				{
					this.OnProductModelIDChanging(value);
					this.SendPropertyChanging();
					this._ProductModelID = value;
					this.SendPropertyChanged("ProductModelID");
					this.OnProductModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CatalogDescription", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement CatalogDescription
		{
			get
			{
				return this._CatalogDescription;
			}
			set
			{
				if ((this._CatalogDescription != value))
				{
					this.OnCatalogDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CatalogDescription = value;
					this.SendPropertyChanged("CatalogDescription");
					this.OnCatalogDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instructions", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Instructions
		{
			get
			{
				return this._Instructions;
			}
			set
			{
				if ((this._Instructions != value))
				{
					this.OnInstructionsChanging(value);
					this.SendPropertyChanging();
					this._Instructions = value;
					this.SendPropertyChanged("Instructions");
					this.OnInstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductModel_Product", Storage="_Products", ThisKey="ProductModelID", OtherKey="ProductModelID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductModel_ProductModelIllustration", Storage="_ProductModelIllustrations", ThisKey="ProductModelID", OtherKey="ProductModelID")]
		public EntitySet<ProductModelIllustration> ProductModelIllustrations
		{
			get
			{
				return this._ProductModelIllustrations;
			}
			set
			{
				this._ProductModelIllustrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductModel_ProductModelProductDescriptionCulture", Storage="_ProductModelProductDescriptionCultures", ThisKey="ProductModelID", OtherKey="ProductModelID")]
		public EntitySet<ProductModelProductDescriptionCulture> ProductModelProductDescriptionCultures
		{
			get
			{
				return this._ProductModelProductDescriptionCultures;
			}
			set
			{
				this._ProductModelProductDescriptionCultures.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductModel = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductModel = null;
		}
		
		private void attach_ProductModelIllustrations(ProductModelIllustration entity)
		{
			this.SendPropertyChanging();
			entity.ProductModel = this;
		}
		
		private void detach_ProductModelIllustrations(ProductModelIllustration entity)
		{
			this.SendPropertyChanging();
			entity.ProductModel = null;
		}
		
		private void attach_ProductModelProductDescriptionCultures(ProductModelProductDescriptionCulture entity)
		{
			this.SendPropertyChanging();
			entity.ProductModel = this;
		}
		
		private void detach_ProductModelProductDescriptionCultures(ProductModelProductDescriptionCulture entity)
		{
			this.SendPropertyChanging();
			entity.ProductModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ProductModelIllustration")]
	public partial class ProductModelIllustration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductModelID;
		
		private int _IllustrationID;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<ProductModel> _ProductModel;
		
		private EntityRef<Illustration> _Illustration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductModelIDChanging(int value);
    partial void OnProductModelIDChanged();
    partial void OnIllustrationIDChanging(int value);
    partial void OnIllustrationIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductModelIllustration()
		{
			this._ProductModel = default(EntityRef<ProductModel>);
			this._Illustration = default(EntityRef<Illustration>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductModelID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductModelID
		{
			get
			{
				return this._ProductModelID;
			}
			set
			{
				if ((this._ProductModelID != value))
				{
					if (this._ProductModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductModelIDChanging(value);
					this.SendPropertyChanging();
					this._ProductModelID = value;
					this.SendPropertyChanged("ProductModelID");
					this.OnProductModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IllustrationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IllustrationID
		{
			get
			{
				return this._IllustrationID;
			}
			set
			{
				if ((this._IllustrationID != value))
				{
					if (this._Illustration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIllustrationIDChanging(value);
					this.SendPropertyChanging();
					this._IllustrationID = value;
					this.SendPropertyChanged("IllustrationID");
					this.OnIllustrationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductModel_ProductModelIllustration", Storage="_ProductModel", ThisKey="ProductModelID", OtherKey="ProductModelID", IsForeignKey=true)]
		public ProductModel ProductModel
		{
			get
			{
				return this._ProductModel.Entity;
			}
			set
			{
				ProductModel previousValue = this._ProductModel.Entity;
				if (((previousValue != value) 
							|| (this._ProductModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductModel.Entity = null;
						previousValue.ProductModelIllustrations.Remove(this);
					}
					this._ProductModel.Entity = value;
					if ((value != null))
					{
						value.ProductModelIllustrations.Add(this);
						this._ProductModelID = value.ProductModelID;
					}
					else
					{
						this._ProductModelID = default(int);
					}
					this.SendPropertyChanged("ProductModel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Illustration_ProductModelIllustration", Storage="_Illustration", ThisKey="IllustrationID", OtherKey="IllustrationID", IsForeignKey=true)]
		public Illustration Illustration
		{
			get
			{
				return this._Illustration.Entity;
			}
			set
			{
				Illustration previousValue = this._Illustration.Entity;
				if (((previousValue != value) 
							|| (this._Illustration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Illustration.Entity = null;
						previousValue.ProductModelIllustrations.Remove(this);
					}
					this._Illustration.Entity = value;
					if ((value != null))
					{
						value.ProductModelIllustrations.Add(this);
						this._IllustrationID = value.IllustrationID;
					}
					else
					{
						this._IllustrationID = default(int);
					}
					this.SendPropertyChanged("Illustration");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ProductModelProductDescriptionCulture")]
	public partial class ProductModelProductDescriptionCulture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductModelID;
		
		private int _ProductDescriptionID;
		
		private string _CultureID;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<ProductDescription> _ProductDescription;
		
		private EntityRef<ProductModel> _ProductModel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductModelIDChanging(int value);
    partial void OnProductModelIDChanged();
    partial void OnProductDescriptionIDChanging(int value);
    partial void OnProductDescriptionIDChanged();
    partial void OnCultureIDChanging(string value);
    partial void OnCultureIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductModelProductDescriptionCulture()
		{
			this._ProductDescription = default(EntityRef<ProductDescription>);
			this._ProductModel = default(EntityRef<ProductModel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductModelID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductModelID
		{
			get
			{
				return this._ProductModelID;
			}
			set
			{
				if ((this._ProductModelID != value))
				{
					if (this._ProductModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductModelIDChanging(value);
					this.SendPropertyChanging();
					this._ProductModelID = value;
					this.SendPropertyChanged("ProductModelID");
					this.OnProductModelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDescriptionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductDescriptionID
		{
			get
			{
				return this._ProductDescriptionID;
			}
			set
			{
				if ((this._ProductDescriptionID != value))
				{
					if (this._ProductDescription.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._ProductDescriptionID = value;
					this.SendPropertyChanged("ProductDescriptionID");
					this.OnProductDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureID", DbType="NChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CultureID
		{
			get
			{
				return this._CultureID;
			}
			set
			{
				if ((this._CultureID != value))
				{
					this.OnCultureIDChanging(value);
					this.SendPropertyChanging();
					this._CultureID = value;
					this.SendPropertyChanged("CultureID");
					this.OnCultureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductDescription_ProductModelProductDescriptionCulture", Storage="_ProductDescription", ThisKey="ProductDescriptionID", OtherKey="ProductDescriptionID", IsForeignKey=true)]
		public ProductDescription ProductDescription
		{
			get
			{
				return this._ProductDescription.Entity;
			}
			set
			{
				ProductDescription previousValue = this._ProductDescription.Entity;
				if (((previousValue != value) 
							|| (this._ProductDescription.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductDescription.Entity = null;
						previousValue.ProductModelProductDescriptionCultures.Remove(this);
					}
					this._ProductDescription.Entity = value;
					if ((value != null))
					{
						value.ProductModelProductDescriptionCultures.Add(this);
						this._ProductDescriptionID = value.ProductDescriptionID;
					}
					else
					{
						this._ProductDescriptionID = default(int);
					}
					this.SendPropertyChanged("ProductDescription");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductModel_ProductModelProductDescriptionCulture", Storage="_ProductModel", ThisKey="ProductModelID", OtherKey="ProductModelID", IsForeignKey=true)]
		public ProductModel ProductModel
		{
			get
			{
				return this._ProductModel.Entity;
			}
			set
			{
				ProductModel previousValue = this._ProductModel.Entity;
				if (((previousValue != value) 
							|| (this._ProductModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductModel.Entity = null;
						previousValue.ProductModelProductDescriptionCultures.Remove(this);
					}
					this._ProductModel.Entity = value;
					if ((value != null))
					{
						value.ProductModelProductDescriptionCultures.Add(this);
						this._ProductModelID = value.ProductModelID;
					}
					else
					{
						this._ProductModelID = default(int);
					}
					this.SendPropertyChanged("ProductModel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ProductPhoto")]
	public partial class ProductPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductPhotoID;
		
		private System.Data.Linq.Binary _ThumbNailPhoto;
		
		private string _ThumbnailPhotoFileName;
		
		private System.Data.Linq.Binary _LargePhoto;
		
		private string _LargePhotoFileName;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<ProductProductPhoto> _ProductProductPhotos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductPhotoIDChanging(int value);
    partial void OnProductPhotoIDChanged();
    partial void OnThumbNailPhotoChanging(System.Data.Linq.Binary value);
    partial void OnThumbNailPhotoChanged();
    partial void OnThumbnailPhotoFileNameChanging(string value);
    partial void OnThumbnailPhotoFileNameChanged();
    partial void OnLargePhotoChanging(System.Data.Linq.Binary value);
    partial void OnLargePhotoChanged();
    partial void OnLargePhotoFileNameChanging(string value);
    partial void OnLargePhotoFileNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductPhoto()
		{
			this._ProductProductPhotos = new EntitySet<ProductProductPhoto>(new Action<ProductProductPhoto>(this.attach_ProductProductPhotos), new Action<ProductProductPhoto>(this.detach_ProductProductPhotos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductPhotoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductPhotoID
		{
			get
			{
				return this._ProductPhotoID;
			}
			set
			{
				if ((this._ProductPhotoID != value))
				{
					this.OnProductPhotoIDChanging(value);
					this.SendPropertyChanging();
					this._ProductPhotoID = value;
					this.SendPropertyChanged("ProductPhotoID");
					this.OnProductPhotoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbNailPhoto", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ThumbNailPhoto
		{
			get
			{
				return this._ThumbNailPhoto;
			}
			set
			{
				if ((this._ThumbNailPhoto != value))
				{
					this.OnThumbNailPhotoChanging(value);
					this.SendPropertyChanging();
					this._ThumbNailPhoto = value;
					this.SendPropertyChanged("ThumbNailPhoto");
					this.OnThumbNailPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbnailPhotoFileName", DbType="NVarChar(50)")]
		public string ThumbnailPhotoFileName
		{
			get
			{
				return this._ThumbnailPhotoFileName;
			}
			set
			{
				if ((this._ThumbnailPhotoFileName != value))
				{
					this.OnThumbnailPhotoFileNameChanging(value);
					this.SendPropertyChanging();
					this._ThumbnailPhotoFileName = value;
					this.SendPropertyChanged("ThumbnailPhotoFileName");
					this.OnThumbnailPhotoFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargePhoto", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LargePhoto
		{
			get
			{
				return this._LargePhoto;
			}
			set
			{
				if ((this._LargePhoto != value))
				{
					this.OnLargePhotoChanging(value);
					this.SendPropertyChanging();
					this._LargePhoto = value;
					this.SendPropertyChanged("LargePhoto");
					this.OnLargePhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargePhotoFileName", DbType="NVarChar(50)")]
		public string LargePhotoFileName
		{
			get
			{
				return this._LargePhotoFileName;
			}
			set
			{
				if ((this._LargePhotoFileName != value))
				{
					this.OnLargePhotoFileNameChanging(value);
					this.SendPropertyChanging();
					this._LargePhotoFileName = value;
					this.SendPropertyChanged("LargePhotoFileName");
					this.OnLargePhotoFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductPhoto_ProductProductPhoto", Storage="_ProductProductPhotos", ThisKey="ProductPhotoID", OtherKey="ProductPhotoID")]
		public EntitySet<ProductProductPhoto> ProductProductPhotos
		{
			get
			{
				return this._ProductProductPhotos;
			}
			set
			{
				this._ProductProductPhotos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductProductPhotos(ProductProductPhoto entity)
		{
			this.SendPropertyChanging();
			entity.ProductPhoto = this;
		}
		
		private void detach_ProductProductPhotos(ProductProductPhoto entity)
		{
			this.SendPropertyChanging();
			entity.ProductPhoto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ProductProductPhoto")]
	public partial class ProductProductPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private int _ProductPhotoID;
		
		private bool _Primary;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<ProductPhoto> _ProductPhoto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductPhotoIDChanging(int value);
    partial void OnProductPhotoIDChanged();
    partial void OnPrimaryChanging(bool value);
    partial void OnPrimaryChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductProductPhoto()
		{
			this._Product = default(EntityRef<Product>);
			this._ProductPhoto = default(EntityRef<ProductPhoto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductPhotoID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductPhotoID
		{
			get
			{
				return this._ProductPhotoID;
			}
			set
			{
				if ((this._ProductPhotoID != value))
				{
					if (this._ProductPhoto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductPhotoIDChanging(value);
					this.SendPropertyChanging();
					this._ProductPhotoID = value;
					this.SendPropertyChanged("ProductPhotoID");
					this.OnProductPhotoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Primary]", Storage="_Primary", DbType="Bit NOT NULL")]
		public bool Primary
		{
			get
			{
				return this._Primary;
			}
			set
			{
				if ((this._Primary != value))
				{
					this.OnPrimaryChanging(value);
					this.SendPropertyChanging();
					this._Primary = value;
					this.SendPropertyChanged("Primary");
					this.OnPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductProductPhoto", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductProductPhotos.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductProductPhotos.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductPhoto_ProductProductPhoto", Storage="_ProductPhoto", ThisKey="ProductPhotoID", OtherKey="ProductPhotoID", IsForeignKey=true)]
		public ProductPhoto ProductPhoto
		{
			get
			{
				return this._ProductPhoto.Entity;
			}
			set
			{
				ProductPhoto previousValue = this._ProductPhoto.Entity;
				if (((previousValue != value) 
							|| (this._ProductPhoto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductPhoto.Entity = null;
						previousValue.ProductProductPhotos.Remove(this);
					}
					this._ProductPhoto.Entity = value;
					if ((value != null))
					{
						value.ProductProductPhotos.Add(this);
						this._ProductPhotoID = value.ProductPhotoID;
					}
					else
					{
						this._ProductPhotoID = default(int);
					}
					this.SendPropertyChanged("ProductPhoto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ProductReview")]
	public partial class ProductReview : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductReviewID;
		
		private int _ProductID;
		
		private string _ReviewerName;
		
		private System.DateTime _ReviewDate;
		
		private string _EmailAddress;
		
		private int _Rating;
		
		private string _Comments;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductReviewIDChanging(int value);
    partial void OnProductReviewIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnReviewerNameChanging(string value);
    partial void OnReviewerNameChanged();
    partial void OnReviewDateChanging(System.DateTime value);
    partial void OnReviewDateChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnRatingChanging(int value);
    partial void OnRatingChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductReview()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductReviewID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductReviewID
		{
			get
			{
				return this._ProductReviewID;
			}
			set
			{
				if ((this._ProductReviewID != value))
				{
					this.OnProductReviewIDChanging(value);
					this.SendPropertyChanging();
					this._ProductReviewID = value;
					this.SendPropertyChanged("ProductReviewID");
					this.OnProductReviewIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReviewerName
		{
			get
			{
				return this._ReviewerName;
			}
			set
			{
				if ((this._ReviewerName != value))
				{
					this.OnReviewerNameChanging(value);
					this.SendPropertyChanging();
					this._ReviewerName = value;
					this.SendPropertyChanged("ReviewerName");
					this.OnReviewerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReviewDate
		{
			get
			{
				return this._ReviewDate;
			}
			set
			{
				if ((this._ReviewDate != value))
				{
					this.OnReviewDateChanging(value);
					this.SendPropertyChanging();
					this._ReviewDate = value;
					this.SendPropertyChanged("ReviewDate");
					this.OnReviewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int NOT NULL")]
		public int Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(3850)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductReview", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductReviews.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductReviews.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ProductSubcategory")]
	public partial class ProductSubcategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductSubcategoryID;
		
		private int _ProductCategoryID;
		
		private string _Name;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<Product> _Products;
		
		private EntityRef<ProductCategory> _ProductCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductSubcategoryIDChanging(int value);
    partial void OnProductSubcategoryIDChanged();
    partial void OnProductCategoryIDChanging(int value);
    partial void OnProductCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductSubcategory()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._ProductCategory = default(EntityRef<ProductCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSubcategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductSubcategoryID
		{
			get
			{
				return this._ProductSubcategoryID;
			}
			set
			{
				if ((this._ProductSubcategoryID != value))
				{
					this.OnProductSubcategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ProductSubcategoryID = value;
					this.SendPropertyChanged("ProductSubcategoryID");
					this.OnProductSubcategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="Int NOT NULL")]
		public int ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					if (this._ProductCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryID = value;
					this.SendPropertyChanged("ProductCategoryID");
					this.OnProductCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductSubcategory_Product", Storage="_Products", ThisKey="ProductSubcategoryID", OtherKey="ProductSubcategoryID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductCategory_ProductSubcategory", Storage="_ProductCategory", ThisKey="ProductCategoryID", OtherKey="ProductCategoryID", IsForeignKey=true)]
		public ProductCategory ProductCategory
		{
			get
			{
				return this._ProductCategory.Entity;
			}
			set
			{
				ProductCategory previousValue = this._ProductCategory.Entity;
				if (((previousValue != value) 
							|| (this._ProductCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductCategory.Entity = null;
						previousValue.ProductSubcategories.Remove(this);
					}
					this._ProductCategory.Entity = value;
					if ((value != null))
					{
						value.ProductSubcategories.Add(this);
						this._ProductCategoryID = value.ProductCategoryID;
					}
					else
					{
						this._ProductCategoryID = default(int);
					}
					this.SendPropertyChanged("ProductCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductSubcategory = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductSubcategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.ScrapReason")]
	public partial class ScrapReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ScrapReasonID;
		
		private string _Name;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScrapReasonIDChanging(short value);
    partial void OnScrapReasonIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ScrapReason()
		{
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScrapReasonID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short ScrapReasonID
		{
			get
			{
				return this._ScrapReasonID;
			}
			set
			{
				if ((this._ScrapReasonID != value))
				{
					this.OnScrapReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ScrapReasonID = value;
					this.SendPropertyChanged("ScrapReasonID");
					this.OnScrapReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScrapReason_WorkOrder", Storage="_WorkOrders", ThisKey="ScrapReasonID", OtherKey="ScrapReasonID")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.ScrapReason = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.ScrapReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.TransactionHistory")]
	public partial class TransactionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionID;
		
		private int _ProductID;
		
		private int _ReferenceOrderID;
		
		private int _ReferenceOrderLineID;
		
		private System.DateTime _TransactionDate;
		
		private char _TransactionType;
		
		private int _Quantity;
		
		private decimal _ActualCost;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnReferenceOrderIDChanging(int value);
    partial void OnReferenceOrderIDChanged();
    partial void OnReferenceOrderLineIDChanging(int value);
    partial void OnReferenceOrderLineIDChanged();
    partial void OnTransactionDateChanging(System.DateTime value);
    partial void OnTransactionDateChanged();
    partial void OnTransactionTypeChanging(char value);
    partial void OnTransactionTypeChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnActualCostChanging(decimal value);
    partial void OnActualCostChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public TransactionHistory()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceOrderID", DbType="Int NOT NULL")]
		public int ReferenceOrderID
		{
			get
			{
				return this._ReferenceOrderID;
			}
			set
			{
				if ((this._ReferenceOrderID != value))
				{
					this.OnReferenceOrderIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceOrderID = value;
					this.SendPropertyChanged("ReferenceOrderID");
					this.OnReferenceOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceOrderLineID", DbType="Int NOT NULL")]
		public int ReferenceOrderLineID
		{
			get
			{
				return this._ReferenceOrderLineID;
			}
			set
			{
				if ((this._ReferenceOrderLineID != value))
				{
					this.OnReferenceOrderLineIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceOrderLineID = value;
					this.SendPropertyChanged("ReferenceOrderLineID");
					this.OnReferenceOrderLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="DateTime NOT NULL")]
		public System.DateTime TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="NChar(1) NOT NULL")]
		public char TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualCost", DbType="Money NOT NULL")]
		public decimal ActualCost
		{
			get
			{
				return this._ActualCost;
			}
			set
			{
				if ((this._ActualCost != value))
				{
					this.OnActualCostChanging(value);
					this.SendPropertyChanging();
					this._ActualCost = value;
					this.SendPropertyChanged("ActualCost");
					this.OnActualCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_TransactionHistory", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.TransactionHistories.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.TransactionHistories.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.TransactionHistoryArchive")]
	public partial class TransactionHistoryArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionID;
		
		private int _ProductID;
		
		private int _ReferenceOrderID;
		
		private int _ReferenceOrderLineID;
		
		private System.DateTime _TransactionDate;
		
		private char _TransactionType;
		
		private int _Quantity;
		
		private decimal _ActualCost;
		
		private System.DateTime _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnReferenceOrderIDChanging(int value);
    partial void OnReferenceOrderIDChanged();
    partial void OnReferenceOrderLineIDChanging(int value);
    partial void OnReferenceOrderLineIDChanged();
    partial void OnTransactionDateChanging(System.DateTime value);
    partial void OnTransactionDateChanged();
    partial void OnTransactionTypeChanging(char value);
    partial void OnTransactionTypeChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnActualCostChanging(decimal value);
    partial void OnActualCostChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public TransactionHistoryArchive()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceOrderID", DbType="Int NOT NULL")]
		public int ReferenceOrderID
		{
			get
			{
				return this._ReferenceOrderID;
			}
			set
			{
				if ((this._ReferenceOrderID != value))
				{
					this.OnReferenceOrderIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceOrderID = value;
					this.SendPropertyChanged("ReferenceOrderID");
					this.OnReferenceOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceOrderLineID", DbType="Int NOT NULL")]
		public int ReferenceOrderLineID
		{
			get
			{
				return this._ReferenceOrderLineID;
			}
			set
			{
				if ((this._ReferenceOrderLineID != value))
				{
					this.OnReferenceOrderLineIDChanging(value);
					this.SendPropertyChanging();
					this._ReferenceOrderLineID = value;
					this.SendPropertyChanged("ReferenceOrderLineID");
					this.OnReferenceOrderLineIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="DateTime NOT NULL")]
		public System.DateTime TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="NChar(1) NOT NULL")]
		public char TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualCost", DbType="Money NOT NULL")]
		public decimal ActualCost
		{
			get
			{
				return this._ActualCost;
			}
			set
			{
				if ((this._ActualCost != value))
				{
					this.OnActualCostChanging(value);
					this.SendPropertyChanging();
					this._ActualCost = value;
					this.SendPropertyChanged("ActualCost");
					this.OnActualCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.UnitMeasure")]
	public partial class UnitMeasure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UnitMeasureCode;
		
		private string _Name;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<Product> _Products;
		
		private EntitySet<Product> _Products1;
		
		private EntitySet<ProductVendor> _ProductVendors;
		
		private EntitySet<BillOfMaterial> _BillOfMaterials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitMeasureCodeChanging(string value);
    partial void OnUnitMeasureCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public UnitMeasure()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			this._Products1 = new EntitySet<Product>(new Action<Product>(this.attach_Products1), new Action<Product>(this.detach_Products1));
			this._ProductVendors = new EntitySet<ProductVendor>(new Action<ProductVendor>(this.attach_ProductVendors), new Action<ProductVendor>(this.detach_ProductVendors));
			this._BillOfMaterials = new EntitySet<BillOfMaterial>(new Action<BillOfMaterial>(this.attach_BillOfMaterials), new Action<BillOfMaterial>(this.detach_BillOfMaterials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitMeasureCode", DbType="NChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UnitMeasureCode
		{
			get
			{
				return this._UnitMeasureCode;
			}
			set
			{
				if ((this._UnitMeasureCode != value))
				{
					this.OnUnitMeasureCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitMeasureCode = value;
					this.SendPropertyChanged("UnitMeasureCode");
					this.OnUnitMeasureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitMeasure_Product", Storage="_Products", ThisKey="UnitMeasureCode", OtherKey="SizeUnitMeasureCode")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitMeasure_Product1", Storage="_Products1", ThisKey="UnitMeasureCode", OtherKey="WeightUnitMeasureCode")]
		public EntitySet<Product> Products1
		{
			get
			{
				return this._Products1;
			}
			set
			{
				this._Products1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitMeasure_ProductVendor", Storage="_ProductVendors", ThisKey="UnitMeasureCode", OtherKey="UnitMeasureCode")]
		public EntitySet<ProductVendor> ProductVendors
		{
			get
			{
				return this._ProductVendors;
			}
			set
			{
				this._ProductVendors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitMeasure_BillOfMaterial", Storage="_BillOfMaterials", ThisKey="UnitMeasureCode", OtherKey="UnitMeasureCode")]
		public EntitySet<BillOfMaterial> BillOfMaterials
		{
			get
			{
				return this._BillOfMaterials;
			}
			set
			{
				this._BillOfMaterials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.UnitMeasure = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.UnitMeasure = null;
		}
		
		private void attach_Products1(Product entity)
		{
			this.SendPropertyChanging();
			entity.UnitMeasure1 = this;
		}
		
		private void detach_Products1(Product entity)
		{
			this.SendPropertyChanging();
			entity.UnitMeasure1 = null;
		}
		
		private void attach_ProductVendors(ProductVendor entity)
		{
			this.SendPropertyChanging();
			entity.UnitMeasure = this;
		}
		
		private void detach_ProductVendors(ProductVendor entity)
		{
			this.SendPropertyChanging();
			entity.UnitMeasure = null;
		}
		
		private void attach_BillOfMaterials(BillOfMaterial entity)
		{
			this.SendPropertyChanging();
			entity.UnitMeasure = this;
		}
		
		private void detach_BillOfMaterials(BillOfMaterial entity)
		{
			this.SendPropertyChanging();
			entity.UnitMeasure = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.WorkOrder")]
	public partial class WorkOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkOrderID;
		
		private int _ProductID;
		
		private int _OrderQty;
		
		private int _StockedQty;
		
		private short _ScrappedQty;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.DateTime _DueDate;
		
		private System.Nullable<short> _ScrapReasonID;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<WorkOrderRouting> _WorkOrderRoutings;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<ScrapReason> _ScrapReason;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkOrderIDChanging(int value);
    partial void OnWorkOrderIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnOrderQtyChanging(int value);
    partial void OnOrderQtyChanged();
    partial void OnStockedQtyChanging(int value);
    partial void OnStockedQtyChanged();
    partial void OnScrappedQtyChanging(short value);
    partial void OnScrappedQtyChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnScrapReasonIDChanging(System.Nullable<short> value);
    partial void OnScrapReasonIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public WorkOrder()
		{
			this._WorkOrderRoutings = new EntitySet<WorkOrderRouting>(new Action<WorkOrderRouting>(this.attach_WorkOrderRoutings), new Action<WorkOrderRouting>(this.detach_WorkOrderRoutings));
			this._Product = default(EntityRef<Product>);
			this._ScrapReason = default(EntityRef<ScrapReason>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorkOrderID
		{
			get
			{
				return this._WorkOrderID;
			}
			set
			{
				if ((this._WorkOrderID != value))
				{
					this.OnWorkOrderIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderID = value;
					this.SendPropertyChanged("WorkOrderID");
					this.OnWorkOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderQty", DbType="Int NOT NULL")]
		public int OrderQty
		{
			get
			{
				return this._OrderQty;
			}
			set
			{
				if ((this._OrderQty != value))
				{
					this.OnOrderQtyChanging(value);
					this.SendPropertyChanging();
					this._OrderQty = value;
					this.SendPropertyChanged("OrderQty");
					this.OnOrderQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockedQty", AutoSync=AutoSync.Always, DbType="Int NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int StockedQty
		{
			get
			{
				return this._StockedQty;
			}
			set
			{
				if ((this._StockedQty != value))
				{
					this.OnStockedQtyChanging(value);
					this.SendPropertyChanging();
					this._StockedQty = value;
					this.SendPropertyChanged("StockedQty");
					this.OnStockedQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScrappedQty", DbType="SmallInt NOT NULL")]
		public short ScrappedQty
		{
			get
			{
				return this._ScrappedQty;
			}
			set
			{
				if ((this._ScrappedQty != value))
				{
					this.OnScrappedQtyChanging(value);
					this.SendPropertyChanging();
					this._ScrappedQty = value;
					this.SendPropertyChanged("ScrappedQty");
					this.OnScrappedQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime NOT NULL")]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScrapReasonID", DbType="SmallInt")]
		public System.Nullable<short> ScrapReasonID
		{
			get
			{
				return this._ScrapReasonID;
			}
			set
			{
				if ((this._ScrapReasonID != value))
				{
					if (this._ScrapReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScrapReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ScrapReasonID = value;
					this.SendPropertyChanged("ScrapReasonID");
					this.OnScrapReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderRouting", Storage="_WorkOrderRoutings", ThisKey="WorkOrderID", OtherKey="WorkOrderID")]
		public EntitySet<WorkOrderRouting> WorkOrderRoutings
		{
			get
			{
				return this._WorkOrderRoutings;
			}
			set
			{
				this._WorkOrderRoutings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_WorkOrder", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ScrapReason_WorkOrder", Storage="_ScrapReason", ThisKey="ScrapReasonID", OtherKey="ScrapReasonID", IsForeignKey=true)]
		public ScrapReason ScrapReason
		{
			get
			{
				return this._ScrapReason.Entity;
			}
			set
			{
				ScrapReason previousValue = this._ScrapReason.Entity;
				if (((previousValue != value) 
							|| (this._ScrapReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ScrapReason.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._ScrapReason.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._ScrapReasonID = value.ScrapReasonID;
					}
					else
					{
						this._ScrapReasonID = default(Nullable<short>);
					}
					this.SendPropertyChanged("ScrapReason");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrderRoutings(WorkOrderRouting entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WorkOrderRoutings(WorkOrderRouting entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.WorkOrderRouting")]
	public partial class WorkOrderRouting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorkOrderID;
		
		private int _ProductID;
		
		private short _OperationSequence;
		
		private short _LocationID;
		
		private System.DateTime _ScheduledStartDate;
		
		private System.DateTime _ScheduledEndDate;
		
		private System.Nullable<System.DateTime> _ActualStartDate;
		
		private System.Nullable<System.DateTime> _ActualEndDate;
		
		private System.Nullable<decimal> _ActualResourceHrs;
		
		private decimal _PlannedCost;
		
		private System.Nullable<decimal> _ActualCost;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorkOrderIDChanging(int value);
    partial void OnWorkOrderIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnOperationSequenceChanging(short value);
    partial void OnOperationSequenceChanged();
    partial void OnLocationIDChanging(short value);
    partial void OnLocationIDChanged();
    partial void OnScheduledStartDateChanging(System.DateTime value);
    partial void OnScheduledStartDateChanged();
    partial void OnScheduledEndDateChanging(System.DateTime value);
    partial void OnScheduledEndDateChanged();
    partial void OnActualStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualStartDateChanged();
    partial void OnActualEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualEndDateChanged();
    partial void OnActualResourceHrsChanging(System.Nullable<decimal> value);
    partial void OnActualResourceHrsChanged();
    partial void OnPlannedCostChanging(decimal value);
    partial void OnPlannedCostChanged();
    partial void OnActualCostChanging(System.Nullable<decimal> value);
    partial void OnActualCostChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public WorkOrderRouting()
		{
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WorkOrderID
		{
			get
			{
				return this._WorkOrderID;
			}
			set
			{
				if ((this._WorkOrderID != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderID = value;
					this.SendPropertyChanged("WorkOrderID");
					this.OnWorkOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationSequence", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short OperationSequence
		{
			get
			{
				return this._OperationSequence;
			}
			set
			{
				if ((this._OperationSequence != value))
				{
					this.OnOperationSequenceChanging(value);
					this.SendPropertyChanging();
					this._OperationSequence = value;
					this.SendPropertyChanged("OperationSequence");
					this.OnOperationSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="SmallInt NOT NULL")]
		public short LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledStartDate", DbType="DateTime NOT NULL")]
		public System.DateTime ScheduledStartDate
		{
			get
			{
				return this._ScheduledStartDate;
			}
			set
			{
				if ((this._ScheduledStartDate != value))
				{
					this.OnScheduledStartDateChanging(value);
					this.SendPropertyChanging();
					this._ScheduledStartDate = value;
					this.SendPropertyChanged("ScheduledStartDate");
					this.OnScheduledStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduledEndDate", DbType="DateTime NOT NULL")]
		public System.DateTime ScheduledEndDate
		{
			get
			{
				return this._ScheduledEndDate;
			}
			set
			{
				if ((this._ScheduledEndDate != value))
				{
					this.OnScheduledEndDateChanging(value);
					this.SendPropertyChanging();
					this._ScheduledEndDate = value;
					this.SendPropertyChanged("ScheduledEndDate");
					this.OnScheduledEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualStartDate
		{
			get
			{
				return this._ActualStartDate;
			}
			set
			{
				if ((this._ActualStartDate != value))
				{
					this.OnActualStartDateChanging(value);
					this.SendPropertyChanging();
					this._ActualStartDate = value;
					this.SendPropertyChanged("ActualStartDate");
					this.OnActualStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActualEndDate
		{
			get
			{
				return this._ActualEndDate;
			}
			set
			{
				if ((this._ActualEndDate != value))
				{
					this.OnActualEndDateChanging(value);
					this.SendPropertyChanging();
					this._ActualEndDate = value;
					this.SendPropertyChanged("ActualEndDate");
					this.OnActualEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualResourceHrs", DbType="Decimal(9,4)")]
		public System.Nullable<decimal> ActualResourceHrs
		{
			get
			{
				return this._ActualResourceHrs;
			}
			set
			{
				if ((this._ActualResourceHrs != value))
				{
					this.OnActualResourceHrsChanging(value);
					this.SendPropertyChanging();
					this._ActualResourceHrs = value;
					this.SendPropertyChanged("ActualResourceHrs");
					this.OnActualResourceHrsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlannedCost", DbType="Money NOT NULL")]
		public decimal PlannedCost
		{
			get
			{
				return this._PlannedCost;
			}
			set
			{
				if ((this._PlannedCost != value))
				{
					this.OnPlannedCostChanging(value);
					this.SendPropertyChanging();
					this._PlannedCost = value;
					this.SendPropertyChanged("PlannedCost");
					this.OnPlannedCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualCost", DbType="Money")]
		public System.Nullable<decimal> ActualCost
		{
			get
			{
				return this._ActualCost;
			}
			set
			{
				if ((this._ActualCost != value))
				{
					this.OnActualCostChanging(value);
					this.SendPropertyChanging();
					this._ActualCost = value;
					this.SendPropertyChanged("ActualCost");
					this.OnActualCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderRouting", Storage="_WorkOrder", ThisKey="WorkOrderID", OtherKey="WorkOrderID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderRoutings.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRoutings.Add(this);
						this._WorkOrderID = value.WorkOrderID;
					}
					else
					{
						this._WorkOrderID = default(int);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Purchasing.ProductVendor")]
	public partial class ProductVendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private int _BusinessEntityID;
		
		private int _AverageLeadTime;
		
		private decimal _StandardPrice;
		
		private System.Nullable<decimal> _LastReceiptCost;
		
		private System.Nullable<System.DateTime> _LastReceiptDate;
		
		private int _MinOrderQty;
		
		private int _MaxOrderQty;
		
		private System.Nullable<int> _OnOrderQty;
		
		private string _UnitMeasureCode;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<UnitMeasure> _UnitMeasure;
		
		private EntityRef<Vendor> _Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnAverageLeadTimeChanging(int value);
    partial void OnAverageLeadTimeChanged();
    partial void OnStandardPriceChanging(decimal value);
    partial void OnStandardPriceChanged();
    partial void OnLastReceiptCostChanging(System.Nullable<decimal> value);
    partial void OnLastReceiptCostChanged();
    partial void OnLastReceiptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastReceiptDateChanged();
    partial void OnMinOrderQtyChanging(int value);
    partial void OnMinOrderQtyChanged();
    partial void OnMaxOrderQtyChanging(int value);
    partial void OnMaxOrderQtyChanged();
    partial void OnOnOrderQtyChanging(System.Nullable<int> value);
    partial void OnOnOrderQtyChanged();
    partial void OnUnitMeasureCodeChanging(string value);
    partial void OnUnitMeasureCodeChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ProductVendor()
		{
			this._Product = default(EntityRef<Product>);
			this._UnitMeasure = default(EntityRef<UnitMeasure>);
			this._Vendor = default(EntityRef<Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					if (this._Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageLeadTime", DbType="Int NOT NULL")]
		public int AverageLeadTime
		{
			get
			{
				return this._AverageLeadTime;
			}
			set
			{
				if ((this._AverageLeadTime != value))
				{
					this.OnAverageLeadTimeChanging(value);
					this.SendPropertyChanging();
					this._AverageLeadTime = value;
					this.SendPropertyChanged("AverageLeadTime");
					this.OnAverageLeadTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardPrice", DbType="Money NOT NULL")]
		public decimal StandardPrice
		{
			get
			{
				return this._StandardPrice;
			}
			set
			{
				if ((this._StandardPrice != value))
				{
					this.OnStandardPriceChanging(value);
					this.SendPropertyChanging();
					this._StandardPrice = value;
					this.SendPropertyChanged("StandardPrice");
					this.OnStandardPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReceiptCost", DbType="Money")]
		public System.Nullable<decimal> LastReceiptCost
		{
			get
			{
				return this._LastReceiptCost;
			}
			set
			{
				if ((this._LastReceiptCost != value))
				{
					this.OnLastReceiptCostChanging(value);
					this.SendPropertyChanging();
					this._LastReceiptCost = value;
					this.SendPropertyChanged("LastReceiptCost");
					this.OnLastReceiptCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReceiptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastReceiptDate
		{
			get
			{
				return this._LastReceiptDate;
			}
			set
			{
				if ((this._LastReceiptDate != value))
				{
					this.OnLastReceiptDateChanging(value);
					this.SendPropertyChanging();
					this._LastReceiptDate = value;
					this.SendPropertyChanged("LastReceiptDate");
					this.OnLastReceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinOrderQty", DbType="Int NOT NULL")]
		public int MinOrderQty
		{
			get
			{
				return this._MinOrderQty;
			}
			set
			{
				if ((this._MinOrderQty != value))
				{
					this.OnMinOrderQtyChanging(value);
					this.SendPropertyChanging();
					this._MinOrderQty = value;
					this.SendPropertyChanged("MinOrderQty");
					this.OnMinOrderQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxOrderQty", DbType="Int NOT NULL")]
		public int MaxOrderQty
		{
			get
			{
				return this._MaxOrderQty;
			}
			set
			{
				if ((this._MaxOrderQty != value))
				{
					this.OnMaxOrderQtyChanging(value);
					this.SendPropertyChanging();
					this._MaxOrderQty = value;
					this.SendPropertyChanged("MaxOrderQty");
					this.OnMaxOrderQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnOrderQty", DbType="Int")]
		public System.Nullable<int> OnOrderQty
		{
			get
			{
				return this._OnOrderQty;
			}
			set
			{
				if ((this._OnOrderQty != value))
				{
					this.OnOnOrderQtyChanging(value);
					this.SendPropertyChanging();
					this._OnOrderQty = value;
					this.SendPropertyChanged("OnOrderQty");
					this.OnOnOrderQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitMeasureCode", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string UnitMeasureCode
		{
			get
			{
				return this._UnitMeasureCode;
			}
			set
			{
				if ((this._UnitMeasureCode != value))
				{
					if (this._UnitMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitMeasureCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitMeasureCode = value;
					this.SendPropertyChanged("UnitMeasureCode");
					this.OnUnitMeasureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductVendor", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductVendors.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductVendors.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitMeasure_ProductVendor", Storage="_UnitMeasure", ThisKey="UnitMeasureCode", OtherKey="UnitMeasureCode", IsForeignKey=true)]
		public UnitMeasure UnitMeasure
		{
			get
			{
				return this._UnitMeasure.Entity;
			}
			set
			{
				UnitMeasure previousValue = this._UnitMeasure.Entity;
				if (((previousValue != value) 
							|| (this._UnitMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitMeasure.Entity = null;
						previousValue.ProductVendors.Remove(this);
					}
					this._UnitMeasure.Entity = value;
					if ((value != null))
					{
						value.ProductVendors.Add(this);
						this._UnitMeasureCode = value.UnitMeasureCode;
					}
					else
					{
						this._UnitMeasureCode = default(string);
					}
					this.SendPropertyChanged("UnitMeasure");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_ProductVendor", Storage="_Vendor", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.ProductVendors.Remove(this);
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.ProductVendors.Add(this);
						this._BusinessEntityID = value.BusinessEntityID;
					}
					else
					{
						this._BusinessEntityID = default(int);
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Purchasing.PurchaseOrderDetail")]
	public partial class PurchaseOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseOrderID;
		
		private int _PurchaseOrderDetailID;
		
		private System.DateTime _DueDate;
		
		private short _OrderQty;
		
		private int _ProductID;
		
		private decimal _UnitPrice;
		
		private decimal _LineTotal;
		
		private decimal _ReceivedQty;
		
		private decimal _RejectedQty;
		
		private decimal _StockedQty;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<PurchaseOrderHeader> _PurchaseOrderHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseOrderIDChanging(int value);
    partial void OnPurchaseOrderIDChanged();
    partial void OnPurchaseOrderDetailIDChanging(int value);
    partial void OnPurchaseOrderDetailIDChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnOrderQtyChanging(short value);
    partial void OnOrderQtyChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnLineTotalChanging(decimal value);
    partial void OnLineTotalChanged();
    partial void OnReceivedQtyChanging(decimal value);
    partial void OnReceivedQtyChanged();
    partial void OnRejectedQtyChanging(decimal value);
    partial void OnRejectedQtyChanged();
    partial void OnStockedQtyChanging(decimal value);
    partial void OnStockedQtyChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PurchaseOrderDetail()
		{
			this._Product = default(EntityRef<Product>);
			this._PurchaseOrderHeader = default(EntityRef<PurchaseOrderHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PurchaseOrderID
		{
			get
			{
				return this._PurchaseOrderID;
			}
			set
			{
				if ((this._PurchaseOrderID != value))
				{
					if (this._PurchaseOrderHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseOrderIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderID = value;
					this.SendPropertyChanged("PurchaseOrderID");
					this.OnPurchaseOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseOrderDetailID
		{
			get
			{
				return this._PurchaseOrderDetailID;
			}
			set
			{
				if ((this._PurchaseOrderDetailID != value))
				{
					this.OnPurchaseOrderDetailIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderDetailID = value;
					this.SendPropertyChanged("PurchaseOrderDetailID");
					this.OnPurchaseOrderDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime NOT NULL")]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderQty", DbType="SmallInt NOT NULL")]
		public short OrderQty
		{
			get
			{
				return this._OrderQty;
			}
			set
			{
				if ((this._OrderQty != value))
				{
					this.OnOrderQtyChanging(value);
					this.SendPropertyChanging();
					this._OrderQty = value;
					this.SendPropertyChanged("OrderQty");
					this.OnOrderQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Money NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineTotal", AutoSync=AutoSync.Always, DbType="Money NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal LineTotal
		{
			get
			{
				return this._LineTotal;
			}
			set
			{
				if ((this._LineTotal != value))
				{
					this.OnLineTotalChanging(value);
					this.SendPropertyChanging();
					this._LineTotal = value;
					this.SendPropertyChanged("LineTotal");
					this.OnLineTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedQty", DbType="Decimal(8,2) NOT NULL")]
		public decimal ReceivedQty
		{
			get
			{
				return this._ReceivedQty;
			}
			set
			{
				if ((this._ReceivedQty != value))
				{
					this.OnReceivedQtyChanging(value);
					this.SendPropertyChanging();
					this._ReceivedQty = value;
					this.SendPropertyChanged("ReceivedQty");
					this.OnReceivedQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectedQty", DbType="Decimal(8,2) NOT NULL")]
		public decimal RejectedQty
		{
			get
			{
				return this._RejectedQty;
			}
			set
			{
				if ((this._RejectedQty != value))
				{
					this.OnRejectedQtyChanging(value);
					this.SendPropertyChanging();
					this._RejectedQty = value;
					this.SendPropertyChanged("RejectedQty");
					this.OnRejectedQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockedQty", AutoSync=AutoSync.Always, DbType="Decimal(9,2) NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal StockedQty
		{
			get
			{
				return this._StockedQty;
			}
			set
			{
				if ((this._StockedQty != value))
				{
					this.OnStockedQtyChanging(value);
					this.SendPropertyChanging();
					this._StockedQty = value;
					this.SendPropertyChanged("StockedQty");
					this.OnStockedQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_PurchaseOrderDetail", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.PurchaseOrderDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderDetails.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrderHeader_PurchaseOrderDetail", Storage="_PurchaseOrderHeader", ThisKey="PurchaseOrderID", OtherKey="PurchaseOrderID", IsForeignKey=true)]
		public PurchaseOrderHeader PurchaseOrderHeader
		{
			get
			{
				return this._PurchaseOrderHeader.Entity;
			}
			set
			{
				PurchaseOrderHeader previousValue = this._PurchaseOrderHeader.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseOrderHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseOrderHeader.Entity = null;
						previousValue.PurchaseOrderDetails.Remove(this);
					}
					this._PurchaseOrderHeader.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderDetails.Add(this);
						this._PurchaseOrderID = value.PurchaseOrderID;
					}
					else
					{
						this._PurchaseOrderID = default(int);
					}
					this.SendPropertyChanged("PurchaseOrderHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Purchasing.PurchaseOrderHeader")]
	public partial class PurchaseOrderHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PurchaseOrderID;
		
		private byte _RevisionNumber;
		
		private byte _Status;
		
		private int _EmployeeID;
		
		private int _VendorID;
		
		private int _ShipMethodID;
		
		private System.DateTime _OrderDate;
		
		private System.Nullable<System.DateTime> _ShipDate;
		
		private decimal _SubTotal;
		
		private decimal _TaxAmt;
		
		private decimal _Freight;
		
		private decimal _TotalDue;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<PurchaseOrderDetail> _PurchaseOrderDetails;
		
		private EntityRef<ShipMethod> _ShipMethod;
		
		private EntityRef<Vendor> _Vendor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseOrderIDChanging(int value);
    partial void OnPurchaseOrderIDChanged();
    partial void OnRevisionNumberChanging(byte value);
    partial void OnRevisionNumberChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnEmployeeIDChanging(int value);
    partial void OnEmployeeIDChanged();
    partial void OnVendorIDChanging(int value);
    partial void OnVendorIDChanged();
    partial void OnShipMethodIDChanging(int value);
    partial void OnShipMethodIDChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnShipDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipDateChanged();
    partial void OnSubTotalChanging(decimal value);
    partial void OnSubTotalChanged();
    partial void OnTaxAmtChanging(decimal value);
    partial void OnTaxAmtChanged();
    partial void OnFreightChanging(decimal value);
    partial void OnFreightChanged();
    partial void OnTotalDueChanging(decimal value);
    partial void OnTotalDueChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PurchaseOrderHeader()
		{
			this._PurchaseOrderDetails = new EntitySet<PurchaseOrderDetail>(new Action<PurchaseOrderDetail>(this.attach_PurchaseOrderDetails), new Action<PurchaseOrderDetail>(this.detach_PurchaseOrderDetails));
			this._ShipMethod = default(EntityRef<ShipMethod>);
			this._Vendor = default(EntityRef<Vendor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PurchaseOrderID
		{
			get
			{
				return this._PurchaseOrderID;
			}
			set
			{
				if ((this._PurchaseOrderID != value))
				{
					this.OnPurchaseOrderIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderID = value;
					this.SendPropertyChanged("PurchaseOrderID");
					this.OnPurchaseOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="TinyInt NOT NULL")]
		public byte RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="Int NOT NULL")]
		public int EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VendorID", DbType="Int NOT NULL")]
		public int VendorID
		{
			get
			{
				return this._VendorID;
			}
			set
			{
				if ((this._VendorID != value))
				{
					if (this._Vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVendorIDChanging(value);
					this.SendPropertyChanging();
					this._VendorID = value;
					this.SendPropertyChanged("VendorID");
					this.OnVendorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipMethodID", DbType="Int NOT NULL")]
		public int ShipMethodID
		{
			get
			{
				return this._ShipMethodID;
			}
			set
			{
				if ((this._ShipMethodID != value))
				{
					if (this._ShipMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipMethodIDChanging(value);
					this.SendPropertyChanging();
					this._ShipMethodID = value;
					this.SendPropertyChanged("ShipMethodID");
					this.OnShipMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ShipDate
		{
			get
			{
				return this._ShipDate;
			}
			set
			{
				if ((this._ShipDate != value))
				{
					this.OnShipDateChanging(value);
					this.SendPropertyChanging();
					this._ShipDate = value;
					this.SendPropertyChanged("ShipDate");
					this.OnShipDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="Money NOT NULL")]
		public decimal SubTotal
		{
			get
			{
				return this._SubTotal;
			}
			set
			{
				if ((this._SubTotal != value))
				{
					this.OnSubTotalChanging(value);
					this.SendPropertyChanging();
					this._SubTotal = value;
					this.SendPropertyChanged("SubTotal");
					this.OnSubTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmt", DbType="Money NOT NULL")]
		public decimal TaxAmt
		{
			get
			{
				return this._TaxAmt;
			}
			set
			{
				if ((this._TaxAmt != value))
				{
					this.OnTaxAmtChanging(value);
					this.SendPropertyChanging();
					this._TaxAmt = value;
					this.SendPropertyChanged("TaxAmt");
					this.OnTaxAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Freight", DbType="Money NOT NULL")]
		public decimal Freight
		{
			get
			{
				return this._Freight;
			}
			set
			{
				if ((this._Freight != value))
				{
					this.OnFreightChanging(value);
					this.SendPropertyChanging();
					this._Freight = value;
					this.SendPropertyChanged("Freight");
					this.OnFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDue", AutoSync=AutoSync.Always, DbType="Money NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal TotalDue
		{
			get
			{
				return this._TotalDue;
			}
			set
			{
				if ((this._TotalDue != value))
				{
					this.OnTotalDueChanging(value);
					this.SendPropertyChanging();
					this._TotalDue = value;
					this.SendPropertyChanged("TotalDue");
					this.OnTotalDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseOrderHeader_PurchaseOrderDetail", Storage="_PurchaseOrderDetails", ThisKey="PurchaseOrderID", OtherKey="PurchaseOrderID")]
		public EntitySet<PurchaseOrderDetail> PurchaseOrderDetails
		{
			get
			{
				return this._PurchaseOrderDetails;
			}
			set
			{
				this._PurchaseOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShipMethod_PurchaseOrderHeader", Storage="_ShipMethod", ThisKey="ShipMethodID", OtherKey="ShipMethodID", IsForeignKey=true)]
		public ShipMethod ShipMethod
		{
			get
			{
				return this._ShipMethod.Entity;
			}
			set
			{
				ShipMethod previousValue = this._ShipMethod.Entity;
				if (((previousValue != value) 
							|| (this._ShipMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShipMethod.Entity = null;
						previousValue.PurchaseOrderHeaders.Remove(this);
					}
					this._ShipMethod.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderHeaders.Add(this);
						this._ShipMethodID = value.ShipMethodID;
					}
					else
					{
						this._ShipMethodID = default(int);
					}
					this.SendPropertyChanged("ShipMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_PurchaseOrderHeader", Storage="_Vendor", ThisKey="VendorID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.PurchaseOrderHeaders.Remove(this);
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.PurchaseOrderHeaders.Add(this);
						this._VendorID = value.BusinessEntityID;
					}
					else
					{
						this._VendorID = default(int);
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseOrderDetails(PurchaseOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrderHeader = this;
		}
		
		private void detach_PurchaseOrderDetails(PurchaseOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseOrderHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Purchasing.ShipMethod")]
	public partial class ShipMethod : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShipMethodID;
		
		private string _Name;
		
		private decimal _ShipBase;
		
		private decimal _ShipRate;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<PurchaseOrderHeader> _PurchaseOrderHeaders;
		
		private EntitySet<SalesOrderHeader> _SalesOrderHeaders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShipMethodIDChanging(int value);
    partial void OnShipMethodIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShipBaseChanging(decimal value);
    partial void OnShipBaseChanged();
    partial void OnShipRateChanging(decimal value);
    partial void OnShipRateChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ShipMethod()
		{
			this._PurchaseOrderHeaders = new EntitySet<PurchaseOrderHeader>(new Action<PurchaseOrderHeader>(this.attach_PurchaseOrderHeaders), new Action<PurchaseOrderHeader>(this.detach_PurchaseOrderHeaders));
			this._SalesOrderHeaders = new EntitySet<SalesOrderHeader>(new Action<SalesOrderHeader>(this.attach_SalesOrderHeaders), new Action<SalesOrderHeader>(this.detach_SalesOrderHeaders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipMethodID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShipMethodID
		{
			get
			{
				return this._ShipMethodID;
			}
			set
			{
				if ((this._ShipMethodID != value))
				{
					this.OnShipMethodIDChanging(value);
					this.SendPropertyChanging();
					this._ShipMethodID = value;
					this.SendPropertyChanged("ShipMethodID");
					this.OnShipMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipBase", DbType="Money NOT NULL")]
		public decimal ShipBase
		{
			get
			{
				return this._ShipBase;
			}
			set
			{
				if ((this._ShipBase != value))
				{
					this.OnShipBaseChanging(value);
					this.SendPropertyChanging();
					this._ShipBase = value;
					this.SendPropertyChanged("ShipBase");
					this.OnShipBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipRate", DbType="Money NOT NULL")]
		public decimal ShipRate
		{
			get
			{
				return this._ShipRate;
			}
			set
			{
				if ((this._ShipRate != value))
				{
					this.OnShipRateChanging(value);
					this.SendPropertyChanging();
					this._ShipRate = value;
					this.SendPropertyChanged("ShipRate");
					this.OnShipRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShipMethod_PurchaseOrderHeader", Storage="_PurchaseOrderHeaders", ThisKey="ShipMethodID", OtherKey="ShipMethodID")]
		public EntitySet<PurchaseOrderHeader> PurchaseOrderHeaders
		{
			get
			{
				return this._PurchaseOrderHeaders;
			}
			set
			{
				this._PurchaseOrderHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShipMethod_SalesOrderHeader", Storage="_SalesOrderHeaders", ThisKey="ShipMethodID", OtherKey="ShipMethodID")]
		public EntitySet<SalesOrderHeader> SalesOrderHeaders
		{
			get
			{
				return this._SalesOrderHeaders;
			}
			set
			{
				this._SalesOrderHeaders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseOrderHeaders(PurchaseOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.ShipMethod = this;
		}
		
		private void detach_PurchaseOrderHeaders(PurchaseOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.ShipMethod = null;
		}
		
		private void attach_SalesOrderHeaders(SalesOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.ShipMethod = this;
		}
		
		private void detach_SalesOrderHeaders(SalesOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.ShipMethod = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Purchasing.Vendor")]
	public partial class Vendor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private string _AccountNumber;
		
		private string _Name;
		
		private byte _CreditRating;
		
		private bool _PreferredVendorStatus;
		
		private bool _ActiveFlag;
		
		private string _PurchasingWebServiceURL;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<ProductVendor> _ProductVendors;
		
		private EntitySet<PurchaseOrderHeader> _PurchaseOrderHeaders;
		
		private EntityRef<BusinessEntity> _BusinessEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreditRatingChanging(byte value);
    partial void OnCreditRatingChanged();
    partial void OnPreferredVendorStatusChanging(bool value);
    partial void OnPreferredVendorStatusChanged();
    partial void OnActiveFlagChanging(bool value);
    partial void OnActiveFlagChanged();
    partial void OnPurchasingWebServiceURLChanging(string value);
    partial void OnPurchasingWebServiceURLChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Vendor()
		{
			this._ProductVendors = new EntitySet<ProductVendor>(new Action<ProductVendor>(this.attach_ProductVendors), new Action<ProductVendor>(this.detach_ProductVendors));
			this._PurchaseOrderHeaders = new EntitySet<PurchaseOrderHeader>(new Action<PurchaseOrderHeader>(this.attach_PurchaseOrderHeaders), new Action<PurchaseOrderHeader>(this.detach_PurchaseOrderHeaders));
			this._BusinessEntity = default(EntityRef<BusinessEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					if (this._BusinessEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditRating", DbType="TinyInt NOT NULL")]
		public byte CreditRating
		{
			get
			{
				return this._CreditRating;
			}
			set
			{
				if ((this._CreditRating != value))
				{
					this.OnCreditRatingChanging(value);
					this.SendPropertyChanging();
					this._CreditRating = value;
					this.SendPropertyChanged("CreditRating");
					this.OnCreditRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredVendorStatus", DbType="Bit NOT NULL")]
		public bool PreferredVendorStatus
		{
			get
			{
				return this._PreferredVendorStatus;
			}
			set
			{
				if ((this._PreferredVendorStatus != value))
				{
					this.OnPreferredVendorStatusChanging(value);
					this.SendPropertyChanging();
					this._PreferredVendorStatus = value;
					this.SendPropertyChanged("PreferredVendorStatus");
					this.OnPreferredVendorStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveFlag", DbType="Bit NOT NULL")]
		public bool ActiveFlag
		{
			get
			{
				return this._ActiveFlag;
			}
			set
			{
				if ((this._ActiveFlag != value))
				{
					this.OnActiveFlagChanging(value);
					this.SendPropertyChanging();
					this._ActiveFlag = value;
					this.SendPropertyChanged("ActiveFlag");
					this.OnActiveFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasingWebServiceURL", DbType="NVarChar(1024)")]
		public string PurchasingWebServiceURL
		{
			get
			{
				return this._PurchasingWebServiceURL;
			}
			set
			{
				if ((this._PurchasingWebServiceURL != value))
				{
					this.OnPurchasingWebServiceURLChanging(value);
					this.SendPropertyChanging();
					this._PurchasingWebServiceURL = value;
					this.SendPropertyChanged("PurchasingWebServiceURL");
					this.OnPurchasingWebServiceURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_ProductVendor", Storage="_ProductVendors", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID")]
		public EntitySet<ProductVendor> ProductVendors
		{
			get
			{
				return this._ProductVendors;
			}
			set
			{
				this._ProductVendors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vendor_PurchaseOrderHeader", Storage="_PurchaseOrderHeaders", ThisKey="BusinessEntityID", OtherKey="VendorID")]
		public EntitySet<PurchaseOrderHeader> PurchaseOrderHeaders
		{
			get
			{
				return this._PurchaseOrderHeaders;
			}
			set
			{
				this._PurchaseOrderHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_Vendor", Storage="_BusinessEntity", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public BusinessEntity BusinessEntity
		{
			get
			{
				return this._BusinessEntity.Entity;
			}
			set
			{
				BusinessEntity previousValue = this._BusinessEntity.Entity;
				if (((previousValue != value) 
							|| (this._BusinessEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessEntity.Entity = null;
						previousValue.Vendor = null;
					}
					this._BusinessEntity.Entity = value;
					if ((value != null))
					{
						value.Vendor = this;
						this._BusinessEntityID = value.BusinessEntityID;
					}
					else
					{
						this._BusinessEntityID = default(int);
					}
					this.SendPropertyChanged("BusinessEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductVendors(ProductVendor entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = this;
		}
		
		private void detach_ProductVendors(ProductVendor entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = null;
		}
		
		private void attach_PurchaseOrderHeaders(PurchaseOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = this;
		}
		
		private void detach_PurchaseOrderHeaders(PurchaseOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Vendor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.CountryRegionCurrency")]
	public partial class CountryRegionCurrency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CountryRegionCode;
		
		private string _CurrencyCode;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Currency> _Currency;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public CountryRegionCurrency()
		{
			this._Currency = default(EntityRef<Currency>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryRegionCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CountryRegionCode
		{
			get
			{
				return this._CountryRegionCode;
			}
			set
			{
				if ((this._CountryRegionCode != value))
				{
					this.OnCountryRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryRegionCode = value;
					this.SendPropertyChanged("CountryRegionCode");
					this.OnCountryRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="NChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CountryRegionCurrency", Storage="_Currency", ThisKey="CurrencyCode", OtherKey="CurrencyCode", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.CountryRegionCurrencies.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.CountryRegionCurrencies.Add(this);
						this._CurrencyCode = value.CurrencyCode;
					}
					else
					{
						this._CurrencyCode = default(string);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.CreditCard")]
	public partial class CreditCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CreditCardID;
		
		private string _CardType;
		
		private string _CardNumber;
		
		private byte _ExpMonth;
		
		private short _ExpYear;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<PersonCreditCard> _PersonCreditCards;
		
		private EntitySet<SalesOrderHeader> _SalesOrderHeaders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCreditCardIDChanging(int value);
    partial void OnCreditCardIDChanged();
    partial void OnCardTypeChanging(string value);
    partial void OnCardTypeChanged();
    partial void OnCardNumberChanging(string value);
    partial void OnCardNumberChanged();
    partial void OnExpMonthChanging(byte value);
    partial void OnExpMonthChanged();
    partial void OnExpYearChanging(short value);
    partial void OnExpYearChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public CreditCard()
		{
			this._PersonCreditCards = new EntitySet<PersonCreditCard>(new Action<PersonCreditCard>(this.attach_PersonCreditCards), new Action<PersonCreditCard>(this.detach_PersonCreditCards));
			this._SalesOrderHeaders = new EntitySet<SalesOrderHeader>(new Action<SalesOrderHeader>(this.attach_SalesOrderHeaders), new Action<SalesOrderHeader>(this.detach_SalesOrderHeaders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CreditCardID
		{
			get
			{
				return this._CreditCardID;
			}
			set
			{
				if ((this._CreditCardID != value))
				{
					this.OnCreditCardIDChanging(value);
					this.SendPropertyChanging();
					this._CreditCardID = value;
					this.SendPropertyChanged("CreditCardID");
					this.OnCreditCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CardType
		{
			get
			{
				return this._CardType;
			}
			set
			{
				if ((this._CardType != value))
				{
					this.OnCardTypeChanging(value);
					this.SendPropertyChanging();
					this._CardType = value;
					this.SendPropertyChanged("CardType");
					this.OnCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string CardNumber
		{
			get
			{
				return this._CardNumber;
			}
			set
			{
				if ((this._CardNumber != value))
				{
					this.OnCardNumberChanging(value);
					this.SendPropertyChanging();
					this._CardNumber = value;
					this.SendPropertyChanged("CardNumber");
					this.OnCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpMonth", DbType="TinyInt NOT NULL")]
		public byte ExpMonth
		{
			get
			{
				return this._ExpMonth;
			}
			set
			{
				if ((this._ExpMonth != value))
				{
					this.OnExpMonthChanging(value);
					this.SendPropertyChanging();
					this._ExpMonth = value;
					this.SendPropertyChanged("ExpMonth");
					this.OnExpMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpYear", DbType="SmallInt NOT NULL")]
		public short ExpYear
		{
			get
			{
				return this._ExpYear;
			}
			set
			{
				if ((this._ExpYear != value))
				{
					this.OnExpYearChanging(value);
					this.SendPropertyChanging();
					this._ExpYear = value;
					this.SendPropertyChanged("ExpYear");
					this.OnExpYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCard_PersonCreditCard", Storage="_PersonCreditCards", ThisKey="CreditCardID", OtherKey="CreditCardID")]
		public EntitySet<PersonCreditCard> PersonCreditCards
		{
			get
			{
				return this._PersonCreditCards;
			}
			set
			{
				this._PersonCreditCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCard_SalesOrderHeader", Storage="_SalesOrderHeaders", ThisKey="CreditCardID", OtherKey="CreditCardID")]
		public EntitySet<SalesOrderHeader> SalesOrderHeaders
		{
			get
			{
				return this._SalesOrderHeaders;
			}
			set
			{
				this._SalesOrderHeaders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonCreditCards(PersonCreditCard entity)
		{
			this.SendPropertyChanging();
			entity.CreditCard = this;
		}
		
		private void detach_PersonCreditCards(PersonCreditCard entity)
		{
			this.SendPropertyChanging();
			entity.CreditCard = null;
		}
		
		private void attach_SalesOrderHeaders(SalesOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.CreditCard = this;
		}
		
		private void detach_SalesOrderHeaders(SalesOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.CreditCard = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CurrencyCode;
		
		private string _Name;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<CountryRegionCurrency> _CountryRegionCurrencies;
		
		private EntitySet<CurrencyRate> _CurrencyRates;
		
		private EntitySet<CurrencyRate> _CurrencyRates1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyCodeChanging(string value);
    partial void OnCurrencyCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Currency()
		{
			this._CountryRegionCurrencies = new EntitySet<CountryRegionCurrency>(new Action<CountryRegionCurrency>(this.attach_CountryRegionCurrencies), new Action<CountryRegionCurrency>(this.detach_CountryRegionCurrencies));
			this._CurrencyRates = new EntitySet<CurrencyRate>(new Action<CurrencyRate>(this.attach_CurrencyRates), new Action<CurrencyRate>(this.detach_CurrencyRates));
			this._CurrencyRates1 = new EntitySet<CurrencyRate>(new Action<CurrencyRate>(this.attach_CurrencyRates1), new Action<CurrencyRate>(this.detach_CurrencyRates1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyCode", DbType="NChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CurrencyCode
		{
			get
			{
				return this._CurrencyCode;
			}
			set
			{
				if ((this._CurrencyCode != value))
				{
					this.OnCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyCode = value;
					this.SendPropertyChanged("CurrencyCode");
					this.OnCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CountryRegionCurrency", Storage="_CountryRegionCurrencies", ThisKey="CurrencyCode", OtherKey="CurrencyCode")]
		public EntitySet<CountryRegionCurrency> CountryRegionCurrencies
		{
			get
			{
				return this._CountryRegionCurrencies;
			}
			set
			{
				this._CountryRegionCurrencies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRate", Storage="_CurrencyRates", ThisKey="CurrencyCode", OtherKey="FromCurrencyCode")]
		public EntitySet<CurrencyRate> CurrencyRates
		{
			get
			{
				return this._CurrencyRates;
			}
			set
			{
				this._CurrencyRates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRate1", Storage="_CurrencyRates1", ThisKey="CurrencyCode", OtherKey="ToCurrencyCode")]
		public EntitySet<CurrencyRate> CurrencyRates1
		{
			get
			{
				return this._CurrencyRates1;
			}
			set
			{
				this._CurrencyRates1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CountryRegionCurrencies(CountryRegionCurrency entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_CountryRegionCurrencies(CountryRegionCurrency entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_CurrencyRates(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_CurrencyRates(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
		
		private void attach_CurrencyRates1(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.Currency1 = this;
		}
		
		private void detach_CurrencyRates1(CurrencyRate entity)
		{
			this.SendPropertyChanging();
			entity.Currency1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.CurrencyRate")]
	public partial class CurrencyRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CurrencyRateID;
		
		private System.DateTime _CurrencyRateDate;
		
		private string _FromCurrencyCode;
		
		private string _ToCurrencyCode;
		
		private decimal _AverageRate;
		
		private decimal _EndOfDayRate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<SalesOrderHeader> _SalesOrderHeaders;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<Currency> _Currency1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCurrencyRateIDChanging(int value);
    partial void OnCurrencyRateIDChanged();
    partial void OnCurrencyRateDateChanging(System.DateTime value);
    partial void OnCurrencyRateDateChanged();
    partial void OnFromCurrencyCodeChanging(string value);
    partial void OnFromCurrencyCodeChanged();
    partial void OnToCurrencyCodeChanging(string value);
    partial void OnToCurrencyCodeChanged();
    partial void OnAverageRateChanging(decimal value);
    partial void OnAverageRateChanged();
    partial void OnEndOfDayRateChanging(decimal value);
    partial void OnEndOfDayRateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public CurrencyRate()
		{
			this._SalesOrderHeaders = new EntitySet<SalesOrderHeader>(new Action<SalesOrderHeader>(this.attach_SalesOrderHeaders), new Action<SalesOrderHeader>(this.detach_SalesOrderHeaders));
			this._Currency = default(EntityRef<Currency>);
			this._Currency1 = default(EntityRef<Currency>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CurrencyRateID
		{
			get
			{
				return this._CurrencyRateID;
			}
			set
			{
				if ((this._CurrencyRateID != value))
				{
					this.OnCurrencyRateIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRateID = value;
					this.SendPropertyChanged("CurrencyRateID");
					this.OnCurrencyRateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CurrencyRateDate
		{
			get
			{
				return this._CurrencyRateDate;
			}
			set
			{
				if ((this._CurrencyRateDate != value))
				{
					this.OnCurrencyRateDateChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRateDate = value;
					this.SendPropertyChanged("CurrencyRateDate");
					this.OnCurrencyRateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromCurrencyCode", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string FromCurrencyCode
		{
			get
			{
				return this._FromCurrencyCode;
			}
			set
			{
				if ((this._FromCurrencyCode != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._FromCurrencyCode = value;
					this.SendPropertyChanged("FromCurrencyCode");
					this.OnFromCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToCurrencyCode", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string ToCurrencyCode
		{
			get
			{
				return this._ToCurrencyCode;
			}
			set
			{
				if ((this._ToCurrencyCode != value))
				{
					if (this._Currency1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToCurrencyCodeChanging(value);
					this.SendPropertyChanging();
					this._ToCurrencyCode = value;
					this.SendPropertyChanged("ToCurrencyCode");
					this.OnToCurrencyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageRate", DbType="Money NOT NULL")]
		public decimal AverageRate
		{
			get
			{
				return this._AverageRate;
			}
			set
			{
				if ((this._AverageRate != value))
				{
					this.OnAverageRateChanging(value);
					this.SendPropertyChanging();
					this._AverageRate = value;
					this.SendPropertyChanged("AverageRate");
					this.OnAverageRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOfDayRate", DbType="Money NOT NULL")]
		public decimal EndOfDayRate
		{
			get
			{
				return this._EndOfDayRate;
			}
			set
			{
				if ((this._EndOfDayRate != value))
				{
					this.OnEndOfDayRateChanging(value);
					this.SendPropertyChanging();
					this._EndOfDayRate = value;
					this.SendPropertyChanged("EndOfDayRate");
					this.OnEndOfDayRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyRate_SalesOrderHeader", Storage="_SalesOrderHeaders", ThisKey="CurrencyRateID", OtherKey="CurrencyRateID")]
		public EntitySet<SalesOrderHeader> SalesOrderHeaders
		{
			get
			{
				return this._SalesOrderHeaders;
			}
			set
			{
				this._SalesOrderHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRate", Storage="_Currency", ThisKey="FromCurrencyCode", OtherKey="CurrencyCode", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.CurrencyRates.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.CurrencyRates.Add(this);
						this._FromCurrencyCode = value.CurrencyCode;
					}
					else
					{
						this._FromCurrencyCode = default(string);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_CurrencyRate1", Storage="_Currency1", ThisKey="ToCurrencyCode", OtherKey="CurrencyCode", IsForeignKey=true)]
		public Currency Currency1
		{
			get
			{
				return this._Currency1.Entity;
			}
			set
			{
				Currency previousValue = this._Currency1.Entity;
				if (((previousValue != value) 
							|| (this._Currency1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency1.Entity = null;
						previousValue.CurrencyRates1.Remove(this);
					}
					this._Currency1.Entity = value;
					if ((value != null))
					{
						value.CurrencyRates1.Add(this);
						this._ToCurrencyCode = value.CurrencyCode;
					}
					else
					{
						this._ToCurrencyCode = default(string);
					}
					this.SendPropertyChanged("Currency1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesOrderHeaders(SalesOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyRate = this;
		}
		
		private void detach_SalesOrderHeaders(SalesOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.CurrencyRate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private System.Nullable<int> _PersonID;
		
		private System.Nullable<int> _StoreID;
		
		private System.Nullable<int> _TerritoryID;
		
		private string _AccountNumber;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<SalesOrderHeader> _SalesOrderHeaders;
		
		private EntityRef<SalesTerritory> _SalesTerritory;
		
		private EntityRef<Store> _Store;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnPersonIDChanging(System.Nullable<int> value);
    partial void OnPersonIDChanged();
    partial void OnStoreIDChanging(System.Nullable<int> value);
    partial void OnStoreIDChanged();
    partial void OnTerritoryIDChanging(System.Nullable<int> value);
    partial void OnTerritoryIDChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Customer()
		{
			this._SalesOrderHeaders = new EntitySet<SalesOrderHeader>(new Action<SalesOrderHeader>(this.attach_SalesOrderHeaders), new Action<SalesOrderHeader>(this.detach_SalesOrderHeaders));
			this._SalesTerritory = default(EntityRef<SalesTerritory>);
			this._Store = default(EntityRef<Store>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int")]
		public System.Nullable<int> PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryID", DbType="Int")]
		public System.Nullable<int> TerritoryID
		{
			get
			{
				return this._TerritoryID;
			}
			set
			{
				if ((this._TerritoryID != value))
				{
					if (this._SalesTerritory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTerritoryIDChanging(value);
					this.SendPropertyChanging();
					this._TerritoryID = value;
					this.SendPropertyChanged("TerritoryID");
					this.OnTerritoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", AutoSync=AutoSync.Always, DbType="VarChar(10) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SalesOrderHeader", Storage="_SalesOrderHeaders", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<SalesOrderHeader> SalesOrderHeaders
		{
			get
			{
				return this._SalesOrderHeaders;
			}
			set
			{
				this._SalesOrderHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesTerritory_Customer", Storage="_SalesTerritory", ThisKey="TerritoryID", OtherKey="TerritoryID", IsForeignKey=true)]
		public SalesTerritory SalesTerritory
		{
			get
			{
				return this._SalesTerritory.Entity;
			}
			set
			{
				SalesTerritory previousValue = this._SalesTerritory.Entity;
				if (((previousValue != value) 
							|| (this._SalesTerritory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesTerritory.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._SalesTerritory.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._TerritoryID = value.TerritoryID;
					}
					else
					{
						this._TerritoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SalesTerritory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Customer", Storage="_Store", ThisKey="StoreID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._StoreID = value.BusinessEntityID;
					}
					else
					{
						this._StoreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Customer", Storage="_Person", ThisKey="PersonID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._PersonID = value.BusinessEntityID;
					}
					else
					{
						this._PersonID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesOrderHeaders(SalesOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_SalesOrderHeaders(SalesOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.PersonCreditCard")]
	public partial class PersonCreditCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private int _CreditCardID;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<CreditCard> _CreditCard;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnCreditCardIDChanging(int value);
    partial void OnCreditCardIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PersonCreditCard()
		{
			this._CreditCard = default(EntityRef<CreditCard>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CreditCardID
		{
			get
			{
				return this._CreditCardID;
			}
			set
			{
				if ((this._CreditCardID != value))
				{
					if (this._CreditCard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreditCardIDChanging(value);
					this.SendPropertyChanging();
					this._CreditCardID = value;
					this.SendPropertyChanged("CreditCardID");
					this.OnCreditCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCard_PersonCreditCard", Storage="_CreditCard", ThisKey="CreditCardID", OtherKey="CreditCardID", IsForeignKey=true)]
		public CreditCard CreditCard
		{
			get
			{
				return this._CreditCard.Entity;
			}
			set
			{
				CreditCard previousValue = this._CreditCard.Entity;
				if (((previousValue != value) 
							|| (this._CreditCard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditCard.Entity = null;
						previousValue.PersonCreditCards.Remove(this);
					}
					this._CreditCard.Entity = value;
					if ((value != null))
					{
						value.PersonCreditCards.Add(this);
						this._CreditCardID = value.CreditCardID;
					}
					else
					{
						this._CreditCardID = default(int);
					}
					this.SendPropertyChanged("CreditCard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonCreditCard", Storage="_Person", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.PersonCreditCards.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.PersonCreditCards.Add(this);
						this._BusinessEntityID = value.BusinessEntityID;
					}
					else
					{
						this._BusinessEntityID = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.SalesOrderDetail")]
	public partial class SalesOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalesOrderID;
		
		private int _SalesOrderDetailID;
		
		private string _CarrierTrackingNumber;
		
		private short _OrderQty;
		
		private int _ProductID;
		
		private int _SpecialOfferID;
		
		private decimal _UnitPrice;
		
		private decimal _UnitPriceDiscount;
		
		private decimal _LineTotal;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<SalesOrderHeader> _SalesOrderHeader;
		
		private EntityRef<SpecialOfferProduct> _SpecialOfferProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesOrderIDChanging(int value);
    partial void OnSalesOrderIDChanged();
    partial void OnSalesOrderDetailIDChanging(int value);
    partial void OnSalesOrderDetailIDChanged();
    partial void OnCarrierTrackingNumberChanging(string value);
    partial void OnCarrierTrackingNumberChanged();
    partial void OnOrderQtyChanging(short value);
    partial void OnOrderQtyChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnSpecialOfferIDChanging(int value);
    partial void OnSpecialOfferIDChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnUnitPriceDiscountChanging(decimal value);
    partial void OnUnitPriceDiscountChanged();
    partial void OnLineTotalChanging(decimal value);
    partial void OnLineTotalChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SalesOrderDetail()
		{
			this._SalesOrderHeader = default(EntityRef<SalesOrderHeader>);
			this._SpecialOfferProduct = default(EntityRef<SpecialOfferProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SalesOrderID
		{
			get
			{
				return this._SalesOrderID;
			}
			set
			{
				if ((this._SalesOrderID != value))
				{
					if (this._SalesOrderHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderIDChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderID = value;
					this.SendPropertyChanged("SalesOrderID");
					this.OnSalesOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SalesOrderDetailID
		{
			get
			{
				return this._SalesOrderDetailID;
			}
			set
			{
				if ((this._SalesOrderDetailID != value))
				{
					this.OnSalesOrderDetailIDChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderDetailID = value;
					this.SendPropertyChanged("SalesOrderDetailID");
					this.OnSalesOrderDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarrierTrackingNumber", DbType="NVarChar(25)")]
		public string CarrierTrackingNumber
		{
			get
			{
				return this._CarrierTrackingNumber;
			}
			set
			{
				if ((this._CarrierTrackingNumber != value))
				{
					this.OnCarrierTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._CarrierTrackingNumber = value;
					this.SendPropertyChanged("CarrierTrackingNumber");
					this.OnCarrierTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderQty", DbType="SmallInt NOT NULL")]
		public short OrderQty
		{
			get
			{
				return this._OrderQty;
			}
			set
			{
				if ((this._OrderQty != value))
				{
					this.OnOrderQtyChanging(value);
					this.SendPropertyChanging();
					this._OrderQty = value;
					this.SendPropertyChanged("OrderQty");
					this.OnOrderQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._SpecialOfferProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialOfferID", DbType="Int NOT NULL")]
		public int SpecialOfferID
		{
			get
			{
				return this._SpecialOfferID;
			}
			set
			{
				if ((this._SpecialOfferID != value))
				{
					if (this._SpecialOfferProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialOfferIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialOfferID = value;
					this.SendPropertyChanged("SpecialOfferID");
					this.OnSpecialOfferIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Money NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPriceDiscount", DbType="Money NOT NULL")]
		public decimal UnitPriceDiscount
		{
			get
			{
				return this._UnitPriceDiscount;
			}
			set
			{
				if ((this._UnitPriceDiscount != value))
				{
					this.OnUnitPriceDiscountChanging(value);
					this.SendPropertyChanging();
					this._UnitPriceDiscount = value;
					this.SendPropertyChanged("UnitPriceDiscount");
					this.OnUnitPriceDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineTotal", AutoSync=AutoSync.Always, DbType="Decimal(38,6) NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal LineTotal
		{
			get
			{
				return this._LineTotal;
			}
			set
			{
				if ((this._LineTotal != value))
				{
					this.OnLineTotalChanging(value);
					this.SendPropertyChanging();
					this._LineTotal = value;
					this.SendPropertyChanged("LineTotal");
					this.OnLineTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrderHeader_SalesOrderDetail", Storage="_SalesOrderHeader", ThisKey="SalesOrderID", OtherKey="SalesOrderID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SalesOrderHeader SalesOrderHeader
		{
			get
			{
				return this._SalesOrderHeader.Entity;
			}
			set
			{
				SalesOrderHeader previousValue = this._SalesOrderHeader.Entity;
				if (((previousValue != value) 
							|| (this._SalesOrderHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesOrderHeader.Entity = null;
						previousValue.SalesOrderDetails.Remove(this);
					}
					this._SalesOrderHeader.Entity = value;
					if ((value != null))
					{
						value.SalesOrderDetails.Add(this);
						this._SalesOrderID = value.SalesOrderID;
					}
					else
					{
						this._SalesOrderID = default(int);
					}
					this.SendPropertyChanged("SalesOrderHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialOfferProduct_SalesOrderDetail", Storage="_SpecialOfferProduct", ThisKey="SpecialOfferID,ProductID", OtherKey="SpecialOfferID,ProductID", IsForeignKey=true)]
		public SpecialOfferProduct SpecialOfferProduct
		{
			get
			{
				return this._SpecialOfferProduct.Entity;
			}
			set
			{
				SpecialOfferProduct previousValue = this._SpecialOfferProduct.Entity;
				if (((previousValue != value) 
							|| (this._SpecialOfferProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecialOfferProduct.Entity = null;
						previousValue.SalesOrderDetails.Remove(this);
					}
					this._SpecialOfferProduct.Entity = value;
					if ((value != null))
					{
						value.SalesOrderDetails.Add(this);
						this._SpecialOfferID = value.SpecialOfferID;
						this._ProductID = value.ProductID;
					}
					else
					{
						this._SpecialOfferID = default(int);
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("SpecialOfferProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.SalesOrderHeader")]
	public partial class SalesOrderHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalesOrderID;
		
		private byte _RevisionNumber;
		
		private System.DateTime _OrderDate;
		
		private System.DateTime _DueDate;
		
		private System.Nullable<System.DateTime> _ShipDate;
		
		private byte _Status;
		
		private bool _OnlineOrderFlag;
		
		private string _SalesOrderNumber;
		
		private string _PurchaseOrderNumber;
		
		private string _AccountNumber;
		
		private int _CustomerID;
		
		private System.Nullable<int> _SalesPersonID;
		
		private System.Nullable<int> _TerritoryID;
		
		private int _BillToAddressID;
		
		private int _ShipToAddressID;
		
		private int _ShipMethodID;
		
		private System.Nullable<int> _CreditCardID;
		
		private string _CreditCardApprovalCode;
		
		private System.Nullable<int> _CurrencyRateID;
		
		private decimal _SubTotal;
		
		private decimal _TaxAmt;
		
		private decimal _Freight;
		
		private decimal _TotalDue;
		
		private string _Comment;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<SalesOrderDetail> _SalesOrderDetails;
		
		private EntitySet<SalesOrderHeaderSalesReason> _SalesOrderHeaderSalesReasons;
		
		private EntityRef<CreditCard> _CreditCard;
		
		private EntityRef<CurrencyRate> _CurrencyRate;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<ShipMethod> _ShipMethod;
		
		private EntityRef<SalesPerson> _SalesPerson;
		
		private EntityRef<SalesTerritory> _SalesTerritory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesOrderIDChanging(int value);
    partial void OnSalesOrderIDChanged();
    partial void OnRevisionNumberChanging(byte value);
    partial void OnRevisionNumberChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnDueDateChanging(System.DateTime value);
    partial void OnDueDateChanged();
    partial void OnShipDateChanging(System.Nullable<System.DateTime> value);
    partial void OnShipDateChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnOnlineOrderFlagChanging(bool value);
    partial void OnOnlineOrderFlagChanged();
    partial void OnSalesOrderNumberChanging(string value);
    partial void OnSalesOrderNumberChanged();
    partial void OnPurchaseOrderNumberChanging(string value);
    partial void OnPurchaseOrderNumberChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnSalesPersonIDChanging(System.Nullable<int> value);
    partial void OnSalesPersonIDChanged();
    partial void OnTerritoryIDChanging(System.Nullable<int> value);
    partial void OnTerritoryIDChanged();
    partial void OnBillToAddressIDChanging(int value);
    partial void OnBillToAddressIDChanged();
    partial void OnShipToAddressIDChanging(int value);
    partial void OnShipToAddressIDChanged();
    partial void OnShipMethodIDChanging(int value);
    partial void OnShipMethodIDChanged();
    partial void OnCreditCardIDChanging(System.Nullable<int> value);
    partial void OnCreditCardIDChanged();
    partial void OnCreditCardApprovalCodeChanging(string value);
    partial void OnCreditCardApprovalCodeChanged();
    partial void OnCurrencyRateIDChanging(System.Nullable<int> value);
    partial void OnCurrencyRateIDChanged();
    partial void OnSubTotalChanging(decimal value);
    partial void OnSubTotalChanged();
    partial void OnTaxAmtChanging(decimal value);
    partial void OnTaxAmtChanged();
    partial void OnFreightChanging(decimal value);
    partial void OnFreightChanged();
    partial void OnTotalDueChanging(decimal value);
    partial void OnTotalDueChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SalesOrderHeader()
		{
			this._SalesOrderDetails = new EntitySet<SalesOrderDetail>(new Action<SalesOrderDetail>(this.attach_SalesOrderDetails), new Action<SalesOrderDetail>(this.detach_SalesOrderDetails));
			this._SalesOrderHeaderSalesReasons = new EntitySet<SalesOrderHeaderSalesReason>(new Action<SalesOrderHeaderSalesReason>(this.attach_SalesOrderHeaderSalesReasons), new Action<SalesOrderHeaderSalesReason>(this.detach_SalesOrderHeaderSalesReasons));
			this._CreditCard = default(EntityRef<CreditCard>);
			this._CurrencyRate = default(EntityRef<CurrencyRate>);
			this._Customer = default(EntityRef<Customer>);
			this._ShipMethod = default(EntityRef<ShipMethod>);
			this._SalesPerson = default(EntityRef<SalesPerson>);
			this._SalesTerritory = default(EntityRef<SalesTerritory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SalesOrderID
		{
			get
			{
				return this._SalesOrderID;
			}
			set
			{
				if ((this._SalesOrderID != value))
				{
					this.OnSalesOrderIDChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderID = value;
					this.SendPropertyChanged("SalesOrderID");
					this.OnSalesOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevisionNumber", DbType="TinyInt NOT NULL")]
		public byte RevisionNumber
		{
			get
			{
				return this._RevisionNumber;
			}
			set
			{
				if ((this._RevisionNumber != value))
				{
					this.OnRevisionNumberChanging(value);
					this.SendPropertyChanging();
					this._RevisionNumber = value;
					this.SendPropertyChanged("RevisionNumber");
					this.OnRevisionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DueDate", DbType="DateTime NOT NULL")]
		public System.DateTime DueDate
		{
			get
			{
				return this._DueDate;
			}
			set
			{
				if ((this._DueDate != value))
				{
					this.OnDueDateChanging(value);
					this.SendPropertyChanging();
					this._DueDate = value;
					this.SendPropertyChanged("DueDate");
					this.OnDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ShipDate
		{
			get
			{
				return this._ShipDate;
			}
			set
			{
				if ((this._ShipDate != value))
				{
					this.OnShipDateChanging(value);
					this.SendPropertyChanging();
					this._ShipDate = value;
					this.SendPropertyChanged("ShipDate");
					this.OnShipDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlineOrderFlag", DbType="Bit NOT NULL")]
		public bool OnlineOrderFlag
		{
			get
			{
				return this._OnlineOrderFlag;
			}
			set
			{
				if ((this._OnlineOrderFlag != value))
				{
					this.OnOnlineOrderFlagChanging(value);
					this.SendPropertyChanging();
					this._OnlineOrderFlag = value;
					this.SendPropertyChanged("OnlineOrderFlag");
					this.OnOnlineOrderFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderNumber", AutoSync=AutoSync.Always, DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string SalesOrderNumber
		{
			get
			{
				return this._SalesOrderNumber;
			}
			set
			{
				if ((this._SalesOrderNumber != value))
				{
					this.OnSalesOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderNumber = value;
					this.SendPropertyChanged("SalesOrderNumber");
					this.OnSalesOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderNumber", DbType="NVarChar(25)")]
		public string PurchaseOrderNumber
		{
			get
			{
				return this._PurchaseOrderNumber;
			}
			set
			{
				if ((this._PurchaseOrderNumber != value))
				{
					this.OnPurchaseOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderNumber = value;
					this.SendPropertyChanged("PurchaseOrderNumber");
					this.OnPurchaseOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(15)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPersonID", DbType="Int")]
		public System.Nullable<int> SalesPersonID
		{
			get
			{
				return this._SalesPersonID;
			}
			set
			{
				if ((this._SalesPersonID != value))
				{
					if (this._SalesPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesPersonIDChanging(value);
					this.SendPropertyChanging();
					this._SalesPersonID = value;
					this.SendPropertyChanged("SalesPersonID");
					this.OnSalesPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryID", DbType="Int")]
		public System.Nullable<int> TerritoryID
		{
			get
			{
				return this._TerritoryID;
			}
			set
			{
				if ((this._TerritoryID != value))
				{
					if (this._SalesTerritory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTerritoryIDChanging(value);
					this.SendPropertyChanging();
					this._TerritoryID = value;
					this.SendPropertyChanged("TerritoryID");
					this.OnTerritoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillToAddressID", DbType="Int NOT NULL")]
		public int BillToAddressID
		{
			get
			{
				return this._BillToAddressID;
			}
			set
			{
				if ((this._BillToAddressID != value))
				{
					this.OnBillToAddressIDChanging(value);
					this.SendPropertyChanging();
					this._BillToAddressID = value;
					this.SendPropertyChanged("BillToAddressID");
					this.OnBillToAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipToAddressID", DbType="Int NOT NULL")]
		public int ShipToAddressID
		{
			get
			{
				return this._ShipToAddressID;
			}
			set
			{
				if ((this._ShipToAddressID != value))
				{
					this.OnShipToAddressIDChanging(value);
					this.SendPropertyChanging();
					this._ShipToAddressID = value;
					this.SendPropertyChanged("ShipToAddressID");
					this.OnShipToAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShipMethodID", DbType="Int NOT NULL")]
		public int ShipMethodID
		{
			get
			{
				return this._ShipMethodID;
			}
			set
			{
				if ((this._ShipMethodID != value))
				{
					if (this._ShipMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShipMethodIDChanging(value);
					this.SendPropertyChanging();
					this._ShipMethodID = value;
					this.SendPropertyChanged("ShipMethodID");
					this.OnShipMethodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardID", DbType="Int")]
		public System.Nullable<int> CreditCardID
		{
			get
			{
				return this._CreditCardID;
			}
			set
			{
				if ((this._CreditCardID != value))
				{
					if (this._CreditCard.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreditCardIDChanging(value);
					this.SendPropertyChanging();
					this._CreditCardID = value;
					this.SendPropertyChanged("CreditCardID");
					this.OnCreditCardIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCardApprovalCode", DbType="VarChar(15)")]
		public string CreditCardApprovalCode
		{
			get
			{
				return this._CreditCardApprovalCode;
			}
			set
			{
				if ((this._CreditCardApprovalCode != value))
				{
					this.OnCreditCardApprovalCodeChanging(value);
					this.SendPropertyChanging();
					this._CreditCardApprovalCode = value;
					this.SendPropertyChanged("CreditCardApprovalCode");
					this.OnCreditCardApprovalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyRateID", DbType="Int")]
		public System.Nullable<int> CurrencyRateID
		{
			get
			{
				return this._CurrencyRateID;
			}
			set
			{
				if ((this._CurrencyRateID != value))
				{
					if (this._CurrencyRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrencyRateIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyRateID = value;
					this.SendPropertyChanged("CurrencyRateID");
					this.OnCurrencyRateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="Money NOT NULL")]
		public decimal SubTotal
		{
			get
			{
				return this._SubTotal;
			}
			set
			{
				if ((this._SubTotal != value))
				{
					this.OnSubTotalChanging(value);
					this.SendPropertyChanging();
					this._SubTotal = value;
					this.SendPropertyChanged("SubTotal");
					this.OnSubTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxAmt", DbType="Money NOT NULL")]
		public decimal TaxAmt
		{
			get
			{
				return this._TaxAmt;
			}
			set
			{
				if ((this._TaxAmt != value))
				{
					this.OnTaxAmtChanging(value);
					this.SendPropertyChanging();
					this._TaxAmt = value;
					this.SendPropertyChanged("TaxAmt");
					this.OnTaxAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Freight", DbType="Money NOT NULL")]
		public decimal Freight
		{
			get
			{
				return this._Freight;
			}
			set
			{
				if ((this._Freight != value))
				{
					this.OnFreightChanging(value);
					this.SendPropertyChanging();
					this._Freight = value;
					this.SendPropertyChanged("Freight");
					this.OnFreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDue", AutoSync=AutoSync.Always, DbType="Money NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public decimal TotalDue
		{
			get
			{
				return this._TotalDue;
			}
			set
			{
				if ((this._TotalDue != value))
				{
					this.OnTotalDueChanging(value);
					this.SendPropertyChanging();
					this._TotalDue = value;
					this.SendPropertyChanged("TotalDue");
					this.OnTotalDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(128)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrderHeader_SalesOrderDetail", Storage="_SalesOrderDetails", ThisKey="SalesOrderID", OtherKey="SalesOrderID")]
		public EntitySet<SalesOrderDetail> SalesOrderDetails
		{
			get
			{
				return this._SalesOrderDetails;
			}
			set
			{
				this._SalesOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrderHeader_SalesOrderHeaderSalesReason", Storage="_SalesOrderHeaderSalesReasons", ThisKey="SalesOrderID", OtherKey="SalesOrderID")]
		public EntitySet<SalesOrderHeaderSalesReason> SalesOrderHeaderSalesReasons
		{
			get
			{
				return this._SalesOrderHeaderSalesReasons;
			}
			set
			{
				this._SalesOrderHeaderSalesReasons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CreditCard_SalesOrderHeader", Storage="_CreditCard", ThisKey="CreditCardID", OtherKey="CreditCardID", IsForeignKey=true)]
		public CreditCard CreditCard
		{
			get
			{
				return this._CreditCard.Entity;
			}
			set
			{
				CreditCard previousValue = this._CreditCard.Entity;
				if (((previousValue != value) 
							|| (this._CreditCard.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CreditCard.Entity = null;
						previousValue.SalesOrderHeaders.Remove(this);
					}
					this._CreditCard.Entity = value;
					if ((value != null))
					{
						value.SalesOrderHeaders.Add(this);
						this._CreditCardID = value.CreditCardID;
					}
					else
					{
						this._CreditCardID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CreditCard");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrencyRate_SalesOrderHeader", Storage="_CurrencyRate", ThisKey="CurrencyRateID", OtherKey="CurrencyRateID", IsForeignKey=true)]
		public CurrencyRate CurrencyRate
		{
			get
			{
				return this._CurrencyRate.Entity;
			}
			set
			{
				CurrencyRate previousValue = this._CurrencyRate.Entity;
				if (((previousValue != value) 
							|| (this._CurrencyRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrencyRate.Entity = null;
						previousValue.SalesOrderHeaders.Remove(this);
					}
					this._CurrencyRate.Entity = value;
					if ((value != null))
					{
						value.SalesOrderHeaders.Add(this);
						this._CurrencyRateID = value.CurrencyRateID;
					}
					else
					{
						this._CurrencyRateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CurrencyRate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_SalesOrderHeader", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.SalesOrderHeaders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.SalesOrderHeaders.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShipMethod_SalesOrderHeader", Storage="_ShipMethod", ThisKey="ShipMethodID", OtherKey="ShipMethodID", IsForeignKey=true)]
		public ShipMethod ShipMethod
		{
			get
			{
				return this._ShipMethod.Entity;
			}
			set
			{
				ShipMethod previousValue = this._ShipMethod.Entity;
				if (((previousValue != value) 
							|| (this._ShipMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShipMethod.Entity = null;
						previousValue.SalesOrderHeaders.Remove(this);
					}
					this._ShipMethod.Entity = value;
					if ((value != null))
					{
						value.SalesOrderHeaders.Add(this);
						this._ShipMethodID = value.ShipMethodID;
					}
					else
					{
						this._ShipMethodID = default(int);
					}
					this.SendPropertyChanged("ShipMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesPerson_SalesOrderHeader", Storage="_SalesPerson", ThisKey="SalesPersonID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public SalesPerson SalesPerson
		{
			get
			{
				return this._SalesPerson.Entity;
			}
			set
			{
				SalesPerson previousValue = this._SalesPerson.Entity;
				if (((previousValue != value) 
							|| (this._SalesPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesPerson.Entity = null;
						previousValue.SalesOrderHeaders.Remove(this);
					}
					this._SalesPerson.Entity = value;
					if ((value != null))
					{
						value.SalesOrderHeaders.Add(this);
						this._SalesPersonID = value.BusinessEntityID;
					}
					else
					{
						this._SalesPersonID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SalesPerson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesTerritory_SalesOrderHeader", Storage="_SalesTerritory", ThisKey="TerritoryID", OtherKey="TerritoryID", IsForeignKey=true)]
		public SalesTerritory SalesTerritory
		{
			get
			{
				return this._SalesTerritory.Entity;
			}
			set
			{
				SalesTerritory previousValue = this._SalesTerritory.Entity;
				if (((previousValue != value) 
							|| (this._SalesTerritory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesTerritory.Entity = null;
						previousValue.SalesOrderHeaders.Remove(this);
					}
					this._SalesTerritory.Entity = value;
					if ((value != null))
					{
						value.SalesOrderHeaders.Add(this);
						this._TerritoryID = value.TerritoryID;
					}
					else
					{
						this._TerritoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SalesTerritory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesOrderDetails(SalesOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrderHeader = this;
		}
		
		private void detach_SalesOrderDetails(SalesOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrderHeader = null;
		}
		
		private void attach_SalesOrderHeaderSalesReasons(SalesOrderHeaderSalesReason entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrderHeader = this;
		}
		
		private void detach_SalesOrderHeaderSalesReasons(SalesOrderHeaderSalesReason entity)
		{
			this.SendPropertyChanging();
			entity.SalesOrderHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.SalesOrderHeaderSalesReason")]
	public partial class SalesOrderHeaderSalesReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalesOrderID;
		
		private int _SalesReasonID;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<SalesOrderHeader> _SalesOrderHeader;
		
		private EntityRef<SalesReason> _SalesReason;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesOrderIDChanging(int value);
    partial void OnSalesOrderIDChanged();
    partial void OnSalesReasonIDChanging(int value);
    partial void OnSalesReasonIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SalesOrderHeaderSalesReason()
		{
			this._SalesOrderHeader = default(EntityRef<SalesOrderHeader>);
			this._SalesReason = default(EntityRef<SalesReason>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesOrderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SalesOrderID
		{
			get
			{
				return this._SalesOrderID;
			}
			set
			{
				if ((this._SalesOrderID != value))
				{
					if (this._SalesOrderHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesOrderIDChanging(value);
					this.SendPropertyChanging();
					this._SalesOrderID = value;
					this.SendPropertyChanged("SalesOrderID");
					this.OnSalesOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesReasonID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SalesReasonID
		{
			get
			{
				return this._SalesReasonID;
			}
			set
			{
				if ((this._SalesReasonID != value))
				{
					if (this._SalesReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesReasonIDChanging(value);
					this.SendPropertyChanging();
					this._SalesReasonID = value;
					this.SendPropertyChanged("SalesReasonID");
					this.OnSalesReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesOrderHeader_SalesOrderHeaderSalesReason", Storage="_SalesOrderHeader", ThisKey="SalesOrderID", OtherKey="SalesOrderID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SalesOrderHeader SalesOrderHeader
		{
			get
			{
				return this._SalesOrderHeader.Entity;
			}
			set
			{
				SalesOrderHeader previousValue = this._SalesOrderHeader.Entity;
				if (((previousValue != value) 
							|| (this._SalesOrderHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesOrderHeader.Entity = null;
						previousValue.SalesOrderHeaderSalesReasons.Remove(this);
					}
					this._SalesOrderHeader.Entity = value;
					if ((value != null))
					{
						value.SalesOrderHeaderSalesReasons.Add(this);
						this._SalesOrderID = value.SalesOrderID;
					}
					else
					{
						this._SalesOrderID = default(int);
					}
					this.SendPropertyChanged("SalesOrderHeader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesReason_SalesOrderHeaderSalesReason", Storage="_SalesReason", ThisKey="SalesReasonID", OtherKey="SalesReasonID", IsForeignKey=true)]
		public SalesReason SalesReason
		{
			get
			{
				return this._SalesReason.Entity;
			}
			set
			{
				SalesReason previousValue = this._SalesReason.Entity;
				if (((previousValue != value) 
							|| (this._SalesReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesReason.Entity = null;
						previousValue.SalesOrderHeaderSalesReasons.Remove(this);
					}
					this._SalesReason.Entity = value;
					if ((value != null))
					{
						value.SalesOrderHeaderSalesReasons.Add(this);
						this._SalesReasonID = value.SalesReasonID;
					}
					else
					{
						this._SalesReasonID = default(int);
					}
					this.SendPropertyChanged("SalesReason");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.SalesPerson")]
	public partial class SalesPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private System.Nullable<int> _TerritoryID;
		
		private System.Nullable<decimal> _SalesQuota;
		
		private decimal _Bonus;
		
		private decimal _CommissionPct;
		
		private decimal _SalesYTD;
		
		private decimal _SalesLastYear;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<SalesOrderHeader> _SalesOrderHeaders;
		
		private EntitySet<SalesPersonQuotaHistory> _SalesPersonQuotaHistories;
		
		private EntitySet<SalesTerritoryHistory> _SalesTerritoryHistories;
		
		private EntitySet<Store> _Stores;
		
		private EntityRef<SalesTerritory> _SalesTerritory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnTerritoryIDChanging(System.Nullable<int> value);
    partial void OnTerritoryIDChanged();
    partial void OnSalesQuotaChanging(System.Nullable<decimal> value);
    partial void OnSalesQuotaChanged();
    partial void OnBonusChanging(decimal value);
    partial void OnBonusChanged();
    partial void OnCommissionPctChanging(decimal value);
    partial void OnCommissionPctChanged();
    partial void OnSalesYTDChanging(decimal value);
    partial void OnSalesYTDChanged();
    partial void OnSalesLastYearChanging(decimal value);
    partial void OnSalesLastYearChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SalesPerson()
		{
			this._SalesOrderHeaders = new EntitySet<SalesOrderHeader>(new Action<SalesOrderHeader>(this.attach_SalesOrderHeaders), new Action<SalesOrderHeader>(this.detach_SalesOrderHeaders));
			this._SalesPersonQuotaHistories = new EntitySet<SalesPersonQuotaHistory>(new Action<SalesPersonQuotaHistory>(this.attach_SalesPersonQuotaHistories), new Action<SalesPersonQuotaHistory>(this.detach_SalesPersonQuotaHistories));
			this._SalesTerritoryHistories = new EntitySet<SalesTerritoryHistory>(new Action<SalesTerritoryHistory>(this.attach_SalesTerritoryHistories), new Action<SalesTerritoryHistory>(this.detach_SalesTerritoryHistories));
			this._Stores = new EntitySet<Store>(new Action<Store>(this.attach_Stores), new Action<Store>(this.detach_Stores));
			this._SalesTerritory = default(EntityRef<SalesTerritory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryID", DbType="Int")]
		public System.Nullable<int> TerritoryID
		{
			get
			{
				return this._TerritoryID;
			}
			set
			{
				if ((this._TerritoryID != value))
				{
					if (this._SalesTerritory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTerritoryIDChanging(value);
					this.SendPropertyChanging();
					this._TerritoryID = value;
					this.SendPropertyChanged("TerritoryID");
					this.OnTerritoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesQuota", DbType="Money")]
		public System.Nullable<decimal> SalesQuota
		{
			get
			{
				return this._SalesQuota;
			}
			set
			{
				if ((this._SalesQuota != value))
				{
					this.OnSalesQuotaChanging(value);
					this.SendPropertyChanging();
					this._SalesQuota = value;
					this.SendPropertyChanged("SalesQuota");
					this.OnSalesQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bonus", DbType="Money NOT NULL")]
		public decimal Bonus
		{
			get
			{
				return this._Bonus;
			}
			set
			{
				if ((this._Bonus != value))
				{
					this.OnBonusChanging(value);
					this.SendPropertyChanging();
					this._Bonus = value;
					this.SendPropertyChanged("Bonus");
					this.OnBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionPct", DbType="SmallMoney NOT NULL")]
		public decimal CommissionPct
		{
			get
			{
				return this._CommissionPct;
			}
			set
			{
				if ((this._CommissionPct != value))
				{
					this.OnCommissionPctChanging(value);
					this.SendPropertyChanging();
					this._CommissionPct = value;
					this.SendPropertyChanged("CommissionPct");
					this.OnCommissionPctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesYTD", DbType="Money NOT NULL")]
		public decimal SalesYTD
		{
			get
			{
				return this._SalesYTD;
			}
			set
			{
				if ((this._SalesYTD != value))
				{
					this.OnSalesYTDChanging(value);
					this.SendPropertyChanging();
					this._SalesYTD = value;
					this.SendPropertyChanged("SalesYTD");
					this.OnSalesYTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesLastYear", DbType="Money NOT NULL")]
		public decimal SalesLastYear
		{
			get
			{
				return this._SalesLastYear;
			}
			set
			{
				if ((this._SalesLastYear != value))
				{
					this.OnSalesLastYearChanging(value);
					this.SendPropertyChanging();
					this._SalesLastYear = value;
					this.SendPropertyChanged("SalesLastYear");
					this.OnSalesLastYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesPerson_SalesOrderHeader", Storage="_SalesOrderHeaders", ThisKey="BusinessEntityID", OtherKey="SalesPersonID")]
		public EntitySet<SalesOrderHeader> SalesOrderHeaders
		{
			get
			{
				return this._SalesOrderHeaders;
			}
			set
			{
				this._SalesOrderHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesPerson_SalesPersonQuotaHistory", Storage="_SalesPersonQuotaHistories", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID")]
		public EntitySet<SalesPersonQuotaHistory> SalesPersonQuotaHistories
		{
			get
			{
				return this._SalesPersonQuotaHistories;
			}
			set
			{
				this._SalesPersonQuotaHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesPerson_SalesTerritoryHistory", Storage="_SalesTerritoryHistories", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID")]
		public EntitySet<SalesTerritoryHistory> SalesTerritoryHistories
		{
			get
			{
				return this._SalesTerritoryHistories;
			}
			set
			{
				this._SalesTerritoryHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesPerson_Store", Storage="_Stores", ThisKey="BusinessEntityID", OtherKey="SalesPersonID")]
		public EntitySet<Store> Stores
		{
			get
			{
				return this._Stores;
			}
			set
			{
				this._Stores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesTerritory_SalesPerson", Storage="_SalesTerritory", ThisKey="TerritoryID", OtherKey="TerritoryID", IsForeignKey=true)]
		public SalesTerritory SalesTerritory
		{
			get
			{
				return this._SalesTerritory.Entity;
			}
			set
			{
				SalesTerritory previousValue = this._SalesTerritory.Entity;
				if (((previousValue != value) 
							|| (this._SalesTerritory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesTerritory.Entity = null;
						previousValue.SalesPersons.Remove(this);
					}
					this._SalesTerritory.Entity = value;
					if ((value != null))
					{
						value.SalesPersons.Add(this);
						this._TerritoryID = value.TerritoryID;
					}
					else
					{
						this._TerritoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SalesTerritory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesOrderHeaders(SalesOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.SalesPerson = this;
		}
		
		private void detach_SalesOrderHeaders(SalesOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.SalesPerson = null;
		}
		
		private void attach_SalesPersonQuotaHistories(SalesPersonQuotaHistory entity)
		{
			this.SendPropertyChanging();
			entity.SalesPerson = this;
		}
		
		private void detach_SalesPersonQuotaHistories(SalesPersonQuotaHistory entity)
		{
			this.SendPropertyChanging();
			entity.SalesPerson = null;
		}
		
		private void attach_SalesTerritoryHistories(SalesTerritoryHistory entity)
		{
			this.SendPropertyChanging();
			entity.SalesPerson = this;
		}
		
		private void detach_SalesTerritoryHistories(SalesTerritoryHistory entity)
		{
			this.SendPropertyChanging();
			entity.SalesPerson = null;
		}
		
		private void attach_Stores(Store entity)
		{
			this.SendPropertyChanging();
			entity.SalesPerson = this;
		}
		
		private void detach_Stores(Store entity)
		{
			this.SendPropertyChanging();
			entity.SalesPerson = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.SalesPersonQuotaHistory")]
	public partial class SalesPersonQuotaHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private System.DateTime _QuotaDate;
		
		private decimal _SalesQuota;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<SalesPerson> _SalesPerson;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnQuotaDateChanging(System.DateTime value);
    partial void OnQuotaDateChanged();
    partial void OnSalesQuotaChanging(decimal value);
    partial void OnSalesQuotaChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SalesPersonQuotaHistory()
		{
			this._SalesPerson = default(EntityRef<SalesPerson>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					if (this._SalesPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotaDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime QuotaDate
		{
			get
			{
				return this._QuotaDate;
			}
			set
			{
				if ((this._QuotaDate != value))
				{
					this.OnQuotaDateChanging(value);
					this.SendPropertyChanging();
					this._QuotaDate = value;
					this.SendPropertyChanged("QuotaDate");
					this.OnQuotaDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesQuota", DbType="Money NOT NULL")]
		public decimal SalesQuota
		{
			get
			{
				return this._SalesQuota;
			}
			set
			{
				if ((this._SalesQuota != value))
				{
					this.OnSalesQuotaChanging(value);
					this.SendPropertyChanging();
					this._SalesQuota = value;
					this.SendPropertyChanged("SalesQuota");
					this.OnSalesQuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesPerson_SalesPersonQuotaHistory", Storage="_SalesPerson", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public SalesPerson SalesPerson
		{
			get
			{
				return this._SalesPerson.Entity;
			}
			set
			{
				SalesPerson previousValue = this._SalesPerson.Entity;
				if (((previousValue != value) 
							|| (this._SalesPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesPerson.Entity = null;
						previousValue.SalesPersonQuotaHistories.Remove(this);
					}
					this._SalesPerson.Entity = value;
					if ((value != null))
					{
						value.SalesPersonQuotaHistories.Add(this);
						this._BusinessEntityID = value.BusinessEntityID;
					}
					else
					{
						this._BusinessEntityID = default(int);
					}
					this.SendPropertyChanged("SalesPerson");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.SalesReason")]
	public partial class SalesReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalesReasonID;
		
		private string _Name;
		
		private string _ReasonType;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<SalesOrderHeaderSalesReason> _SalesOrderHeaderSalesReasons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesReasonIDChanging(int value);
    partial void OnSalesReasonIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnReasonTypeChanging(string value);
    partial void OnReasonTypeChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SalesReason()
		{
			this._SalesOrderHeaderSalesReasons = new EntitySet<SalesOrderHeaderSalesReason>(new Action<SalesOrderHeaderSalesReason>(this.attach_SalesOrderHeaderSalesReasons), new Action<SalesOrderHeaderSalesReason>(this.detach_SalesOrderHeaderSalesReasons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesReasonID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SalesReasonID
		{
			get
			{
				return this._SalesReasonID;
			}
			set
			{
				if ((this._SalesReasonID != value))
				{
					this.OnSalesReasonIDChanging(value);
					this.SendPropertyChanging();
					this._SalesReasonID = value;
					this.SendPropertyChanged("SalesReasonID");
					this.OnSalesReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReasonType
		{
			get
			{
				return this._ReasonType;
			}
			set
			{
				if ((this._ReasonType != value))
				{
					this.OnReasonTypeChanging(value);
					this.SendPropertyChanging();
					this._ReasonType = value;
					this.SendPropertyChanged("ReasonType");
					this.OnReasonTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesReason_SalesOrderHeaderSalesReason", Storage="_SalesOrderHeaderSalesReasons", ThisKey="SalesReasonID", OtherKey="SalesReasonID")]
		public EntitySet<SalesOrderHeaderSalesReason> SalesOrderHeaderSalesReasons
		{
			get
			{
				return this._SalesOrderHeaderSalesReasons;
			}
			set
			{
				this._SalesOrderHeaderSalesReasons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesOrderHeaderSalesReasons(SalesOrderHeaderSalesReason entity)
		{
			this.SendPropertyChanging();
			entity.SalesReason = this;
		}
		
		private void detach_SalesOrderHeaderSalesReasons(SalesOrderHeaderSalesReason entity)
		{
			this.SendPropertyChanging();
			entity.SalesReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.SalesTaxRate")]
	public partial class SalesTaxRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SalesTaxRateID;
		
		private int _StateProvinceID;
		
		private byte _TaxType;
		
		private decimal _TaxRate;
		
		private string _Name;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<StateProvince> _StateProvince;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSalesTaxRateIDChanging(int value);
    partial void OnSalesTaxRateIDChanged();
    partial void OnStateProvinceIDChanging(int value);
    partial void OnStateProvinceIDChanged();
    partial void OnTaxTypeChanging(byte value);
    partial void OnTaxTypeChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SalesTaxRate()
		{
			this._StateProvince = default(EntityRef<StateProvince>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesTaxRateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SalesTaxRateID
		{
			get
			{
				return this._SalesTaxRateID;
			}
			set
			{
				if ((this._SalesTaxRateID != value))
				{
					this.OnSalesTaxRateIDChanging(value);
					this.SendPropertyChanging();
					this._SalesTaxRateID = value;
					this.SendPropertyChanged("SalesTaxRateID");
					this.OnSalesTaxRateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvinceID", DbType="Int NOT NULL")]
		public int StateProvinceID
		{
			get
			{
				return this._StateProvinceID;
			}
			set
			{
				if ((this._StateProvinceID != value))
				{
					if (this._StateProvince.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._StateProvinceID = value;
					this.SendPropertyChanged("StateProvinceID");
					this.OnStateProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxType", DbType="TinyInt NOT NULL")]
		public byte TaxType
		{
			get
			{
				return this._TaxType;
			}
			set
			{
				if ((this._TaxType != value))
				{
					this.OnTaxTypeChanging(value);
					this.SendPropertyChanging();
					this._TaxType = value;
					this.SendPropertyChanged("TaxType");
					this.OnTaxTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="SmallMoney NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateProvince_SalesTaxRate", Storage="_StateProvince", ThisKey="StateProvinceID", OtherKey="StateProvinceID", IsForeignKey=true)]
		public StateProvince StateProvince
		{
			get
			{
				return this._StateProvince.Entity;
			}
			set
			{
				StateProvince previousValue = this._StateProvince.Entity;
				if (((previousValue != value) 
							|| (this._StateProvince.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StateProvince.Entity = null;
						previousValue.SalesTaxRates.Remove(this);
					}
					this._StateProvince.Entity = value;
					if ((value != null))
					{
						value.SalesTaxRates.Add(this);
						this._StateProvinceID = value.StateProvinceID;
					}
					else
					{
						this._StateProvinceID = default(int);
					}
					this.SendPropertyChanged("StateProvince");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.SalesTerritory")]
	public partial class SalesTerritory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TerritoryID;
		
		private string _Name;
		
		private string _CountryRegionCode;
		
		private string _Group;
		
		private decimal _SalesYTD;
		
		private decimal _SalesLastYear;
		
		private decimal _CostYTD;
		
		private decimal _CostLastYear;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<SalesOrderHeader> _SalesOrderHeaders;
		
		private EntitySet<SalesPerson> _SalesPersons;
		
		private EntitySet<SalesTerritoryHistory> _SalesTerritoryHistories;
		
		private EntitySet<StateProvince> _StateProvinces;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTerritoryIDChanging(int value);
    partial void OnTerritoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnSalesYTDChanging(decimal value);
    partial void OnSalesYTDChanged();
    partial void OnSalesLastYearChanging(decimal value);
    partial void OnSalesLastYearChanged();
    partial void OnCostYTDChanging(decimal value);
    partial void OnCostYTDChanged();
    partial void OnCostLastYearChanging(decimal value);
    partial void OnCostLastYearChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SalesTerritory()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._SalesOrderHeaders = new EntitySet<SalesOrderHeader>(new Action<SalesOrderHeader>(this.attach_SalesOrderHeaders), new Action<SalesOrderHeader>(this.detach_SalesOrderHeaders));
			this._SalesPersons = new EntitySet<SalesPerson>(new Action<SalesPerson>(this.attach_SalesPersons), new Action<SalesPerson>(this.detach_SalesPersons));
			this._SalesTerritoryHistories = new EntitySet<SalesTerritoryHistory>(new Action<SalesTerritoryHistory>(this.attach_SalesTerritoryHistories), new Action<SalesTerritoryHistory>(this.detach_SalesTerritoryHistories));
			this._StateProvinces = new EntitySet<StateProvince>(new Action<StateProvince>(this.attach_StateProvinces), new Action<StateProvince>(this.detach_StateProvinces));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TerritoryID
		{
			get
			{
				return this._TerritoryID;
			}
			set
			{
				if ((this._TerritoryID != value))
				{
					this.OnTerritoryIDChanging(value);
					this.SendPropertyChanging();
					this._TerritoryID = value;
					this.SendPropertyChanged("TerritoryID");
					this.OnTerritoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryRegionCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string CountryRegionCode
		{
			get
			{
				return this._CountryRegionCode;
			}
			set
			{
				if ((this._CountryRegionCode != value))
				{
					this.OnCountryRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryRegionCode = value;
					this.SendPropertyChanged("CountryRegionCode");
					this.OnCountryRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesYTD", DbType="Money NOT NULL")]
		public decimal SalesYTD
		{
			get
			{
				return this._SalesYTD;
			}
			set
			{
				if ((this._SalesYTD != value))
				{
					this.OnSalesYTDChanging(value);
					this.SendPropertyChanging();
					this._SalesYTD = value;
					this.SendPropertyChanged("SalesYTD");
					this.OnSalesYTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesLastYear", DbType="Money NOT NULL")]
		public decimal SalesLastYear
		{
			get
			{
				return this._SalesLastYear;
			}
			set
			{
				if ((this._SalesLastYear != value))
				{
					this.OnSalesLastYearChanging(value);
					this.SendPropertyChanging();
					this._SalesLastYear = value;
					this.SendPropertyChanged("SalesLastYear");
					this.OnSalesLastYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostYTD", DbType="Money NOT NULL")]
		public decimal CostYTD
		{
			get
			{
				return this._CostYTD;
			}
			set
			{
				if ((this._CostYTD != value))
				{
					this.OnCostYTDChanging(value);
					this.SendPropertyChanging();
					this._CostYTD = value;
					this.SendPropertyChanged("CostYTD");
					this.OnCostYTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostLastYear", DbType="Money NOT NULL")]
		public decimal CostLastYear
		{
			get
			{
				return this._CostLastYear;
			}
			set
			{
				if ((this._CostLastYear != value))
				{
					this.OnCostLastYearChanging(value);
					this.SendPropertyChanging();
					this._CostLastYear = value;
					this.SendPropertyChanged("CostLastYear");
					this.OnCostLastYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesTerritory_Customer", Storage="_Customers", ThisKey="TerritoryID", OtherKey="TerritoryID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesTerritory_SalesOrderHeader", Storage="_SalesOrderHeaders", ThisKey="TerritoryID", OtherKey="TerritoryID")]
		public EntitySet<SalesOrderHeader> SalesOrderHeaders
		{
			get
			{
				return this._SalesOrderHeaders;
			}
			set
			{
				this._SalesOrderHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesTerritory_SalesPerson", Storage="_SalesPersons", ThisKey="TerritoryID", OtherKey="TerritoryID")]
		public EntitySet<SalesPerson> SalesPersons
		{
			get
			{
				return this._SalesPersons;
			}
			set
			{
				this._SalesPersons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesTerritory_SalesTerritoryHistory", Storage="_SalesTerritoryHistories", ThisKey="TerritoryID", OtherKey="TerritoryID")]
		public EntitySet<SalesTerritoryHistory> SalesTerritoryHistories
		{
			get
			{
				return this._SalesTerritoryHistories;
			}
			set
			{
				this._SalesTerritoryHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesTerritory_StateProvince", Storage="_StateProvinces", ThisKey="TerritoryID", OtherKey="TerritoryID")]
		public EntitySet<StateProvince> StateProvinces
		{
			get
			{
				return this._StateProvinces;
			}
			set
			{
				this._StateProvinces.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.SalesTerritory = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.SalesTerritory = null;
		}
		
		private void attach_SalesOrderHeaders(SalesOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.SalesTerritory = this;
		}
		
		private void detach_SalesOrderHeaders(SalesOrderHeader entity)
		{
			this.SendPropertyChanging();
			entity.SalesTerritory = null;
		}
		
		private void attach_SalesPersons(SalesPerson entity)
		{
			this.SendPropertyChanging();
			entity.SalesTerritory = this;
		}
		
		private void detach_SalesPersons(SalesPerson entity)
		{
			this.SendPropertyChanging();
			entity.SalesTerritory = null;
		}
		
		private void attach_SalesTerritoryHistories(SalesTerritoryHistory entity)
		{
			this.SendPropertyChanging();
			entity.SalesTerritory = this;
		}
		
		private void detach_SalesTerritoryHistories(SalesTerritoryHistory entity)
		{
			this.SendPropertyChanging();
			entity.SalesTerritory = null;
		}
		
		private void attach_StateProvinces(StateProvince entity)
		{
			this.SendPropertyChanging();
			entity.SalesTerritory = this;
		}
		
		private void detach_StateProvinces(StateProvince entity)
		{
			this.SendPropertyChanging();
			entity.SalesTerritory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.SalesTerritoryHistory")]
	public partial class SalesTerritoryHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private int _TerritoryID;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<SalesPerson> _SalesPerson;
		
		private EntityRef<SalesTerritory> _SalesTerritory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnTerritoryIDChanging(int value);
    partial void OnTerritoryIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SalesTerritoryHistory()
		{
			this._SalesPerson = default(EntityRef<SalesPerson>);
			this._SalesTerritory = default(EntityRef<SalesTerritory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					if (this._SalesPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TerritoryID
		{
			get
			{
				return this._TerritoryID;
			}
			set
			{
				if ((this._TerritoryID != value))
				{
					if (this._SalesTerritory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTerritoryIDChanging(value);
					this.SendPropertyChanging();
					this._TerritoryID = value;
					this.SendPropertyChanged("TerritoryID");
					this.OnTerritoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesPerson_SalesTerritoryHistory", Storage="_SalesPerson", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public SalesPerson SalesPerson
		{
			get
			{
				return this._SalesPerson.Entity;
			}
			set
			{
				SalesPerson previousValue = this._SalesPerson.Entity;
				if (((previousValue != value) 
							|| (this._SalesPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesPerson.Entity = null;
						previousValue.SalesTerritoryHistories.Remove(this);
					}
					this._SalesPerson.Entity = value;
					if ((value != null))
					{
						value.SalesTerritoryHistories.Add(this);
						this._BusinessEntityID = value.BusinessEntityID;
					}
					else
					{
						this._BusinessEntityID = default(int);
					}
					this.SendPropertyChanged("SalesPerson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesTerritory_SalesTerritoryHistory", Storage="_SalesTerritory", ThisKey="TerritoryID", OtherKey="TerritoryID", IsForeignKey=true)]
		public SalesTerritory SalesTerritory
		{
			get
			{
				return this._SalesTerritory.Entity;
			}
			set
			{
				SalesTerritory previousValue = this._SalesTerritory.Entity;
				if (((previousValue != value) 
							|| (this._SalesTerritory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesTerritory.Entity = null;
						previousValue.SalesTerritoryHistories.Remove(this);
					}
					this._SalesTerritory.Entity = value;
					if ((value != null))
					{
						value.SalesTerritoryHistories.Add(this);
						this._TerritoryID = value.TerritoryID;
					}
					else
					{
						this._TerritoryID = default(int);
					}
					this.SendPropertyChanged("SalesTerritory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.ShoppingCartItem")]
	public partial class ShoppingCartItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShoppingCartItemID;
		
		private string _ShoppingCartID;
		
		private int _Quantity;
		
		private int _ProductID;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShoppingCartItemIDChanging(int value);
    partial void OnShoppingCartItemIDChanged();
    partial void OnShoppingCartIDChanging(string value);
    partial void OnShoppingCartIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ShoppingCartItem()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoppingCartItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ShoppingCartItemID
		{
			get
			{
				return this._ShoppingCartItemID;
			}
			set
			{
				if ((this._ShoppingCartItemID != value))
				{
					this.OnShoppingCartItemIDChanging(value);
					this.SendPropertyChanging();
					this._ShoppingCartItemID = value;
					this.SendPropertyChanged("ShoppingCartItemID");
					this.OnShoppingCartItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoppingCartID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ShoppingCartID
		{
			get
			{
				return this._ShoppingCartID;
			}
			set
			{
				if ((this._ShoppingCartID != value))
				{
					this.OnShoppingCartIDChanging(value);
					this.SendPropertyChanging();
					this._ShoppingCartID = value;
					this.SendPropertyChanged("ShoppingCartID");
					this.OnShoppingCartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ShoppingCartItem", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ShoppingCartItems.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ShoppingCartItems.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.SpecialOffer")]
	public partial class SpecialOffer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpecialOfferID;
		
		private string _Description;
		
		private decimal _DiscountPct;
		
		private string _Type;
		
		private string _Category;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _MinQty;
		
		private System.Nullable<int> _MaxQty;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<SpecialOfferProduct> _SpecialOfferProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialOfferIDChanging(int value);
    partial void OnSpecialOfferIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDiscountPctChanging(decimal value);
    partial void OnDiscountPctChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnMinQtyChanging(int value);
    partial void OnMinQtyChanged();
    partial void OnMaxQtyChanging(System.Nullable<int> value);
    partial void OnMaxQtyChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SpecialOffer()
		{
			this._SpecialOfferProducts = new EntitySet<SpecialOfferProduct>(new Action<SpecialOfferProduct>(this.attach_SpecialOfferProducts), new Action<SpecialOfferProduct>(this.detach_SpecialOfferProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialOfferID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SpecialOfferID
		{
			get
			{
				return this._SpecialOfferID;
			}
			set
			{
				if ((this._SpecialOfferID != value))
				{
					this.OnSpecialOfferIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialOfferID = value;
					this.SendPropertyChanged("SpecialOfferID");
					this.OnSpecialOfferIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPct", DbType="SmallMoney NOT NULL")]
		public decimal DiscountPct
		{
			get
			{
				return this._DiscountPct;
			}
			set
			{
				if ((this._DiscountPct != value))
				{
					this.OnDiscountPctChanging(value);
					this.SendPropertyChanging();
					this._DiscountPct = value;
					this.SendPropertyChanged("DiscountPct");
					this.OnDiscountPctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinQty", DbType="Int NOT NULL")]
		public int MinQty
		{
			get
			{
				return this._MinQty;
			}
			set
			{
				if ((this._MinQty != value))
				{
					this.OnMinQtyChanging(value);
					this.SendPropertyChanging();
					this._MinQty = value;
					this.SendPropertyChanged("MinQty");
					this.OnMinQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxQty", DbType="Int")]
		public System.Nullable<int> MaxQty
		{
			get
			{
				return this._MaxQty;
			}
			set
			{
				if ((this._MaxQty != value))
				{
					this.OnMaxQtyChanging(value);
					this.SendPropertyChanging();
					this._MaxQty = value;
					this.SendPropertyChanged("MaxQty");
					this.OnMaxQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialOffer_SpecialOfferProduct", Storage="_SpecialOfferProducts", ThisKey="SpecialOfferID", OtherKey="SpecialOfferID")]
		public EntitySet<SpecialOfferProduct> SpecialOfferProducts
		{
			get
			{
				return this._SpecialOfferProducts;
			}
			set
			{
				this._SpecialOfferProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SpecialOfferProducts(SpecialOfferProduct entity)
		{
			this.SendPropertyChanging();
			entity.SpecialOffer = this;
		}
		
		private void detach_SpecialOfferProducts(SpecialOfferProduct entity)
		{
			this.SendPropertyChanging();
			entity.SpecialOffer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.SpecialOfferProduct")]
	public partial class SpecialOfferProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpecialOfferID;
		
		private int _ProductID;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<SalesOrderDetail> _SalesOrderDetails;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<SpecialOffer> _SpecialOffer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpecialOfferIDChanging(int value);
    partial void OnSpecialOfferIDChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SpecialOfferProduct()
		{
			this._SalesOrderDetails = new EntitySet<SalesOrderDetail>(new Action<SalesOrderDetail>(this.attach_SalesOrderDetails), new Action<SalesOrderDetail>(this.detach_SalesOrderDetails));
			this._Product = default(EntityRef<Product>);
			this._SpecialOffer = default(EntityRef<SpecialOffer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialOfferID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SpecialOfferID
		{
			get
			{
				return this._SpecialOfferID;
			}
			set
			{
				if ((this._SpecialOfferID != value))
				{
					if (this._SpecialOffer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpecialOfferIDChanging(value);
					this.SendPropertyChanging();
					this._SpecialOfferID = value;
					this.SendPropertyChanged("SpecialOfferID");
					this.OnSpecialOfferIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialOfferProduct_SalesOrderDetail", Storage="_SalesOrderDetails", ThisKey="SpecialOfferID,ProductID", OtherKey="SpecialOfferID,ProductID")]
		public EntitySet<SalesOrderDetail> SalesOrderDetails
		{
			get
			{
				return this._SalesOrderDetails;
			}
			set
			{
				this._SalesOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_SpecialOfferProduct", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.SpecialOfferProducts.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.SpecialOfferProducts.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpecialOffer_SpecialOfferProduct", Storage="_SpecialOffer", ThisKey="SpecialOfferID", OtherKey="SpecialOfferID", IsForeignKey=true)]
		public SpecialOffer SpecialOffer
		{
			get
			{
				return this._SpecialOffer.Entity;
			}
			set
			{
				SpecialOffer previousValue = this._SpecialOffer.Entity;
				if (((previousValue != value) 
							|| (this._SpecialOffer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpecialOffer.Entity = null;
						previousValue.SpecialOfferProducts.Remove(this);
					}
					this._SpecialOffer.Entity = value;
					if ((value != null))
					{
						value.SpecialOfferProducts.Add(this);
						this._SpecialOfferID = value.SpecialOfferID;
					}
					else
					{
						this._SpecialOfferID = default(int);
					}
					this.SendPropertyChanged("SpecialOffer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesOrderDetails(SalesOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.SpecialOfferProduct = this;
		}
		
		private void detach_SalesOrderDetails(SalesOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.SpecialOfferProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.Store")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private string _Name;
		
		private System.Nullable<int> _SalesPersonID;
		
		private System.Xml.Linq.XElement _Demographics;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<Customer> _Customers;
		
		private EntityRef<SalesPerson> _SalesPerson;
		
		private EntityRef<BusinessEntity> _BusinessEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSalesPersonIDChanging(System.Nullable<int> value);
    partial void OnSalesPersonIDChanged();
    partial void OnDemographicsChanging(System.Xml.Linq.XElement value);
    partial void OnDemographicsChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Store()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._SalesPerson = default(EntityRef<SalesPerson>);
			this._BusinessEntity = default(EntityRef<BusinessEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					if (this._BusinessEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesPersonID", DbType="Int")]
		public System.Nullable<int> SalesPersonID
		{
			get
			{
				return this._SalesPersonID;
			}
			set
			{
				if ((this._SalesPersonID != value))
				{
					if (this._SalesPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesPersonIDChanging(value);
					this.SendPropertyChanging();
					this._SalesPersonID = value;
					this.SendPropertyChanged("SalesPersonID");
					this.OnSalesPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Demographics", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Demographics
		{
			get
			{
				return this._Demographics;
			}
			set
			{
				if ((this._Demographics != value))
				{
					this.OnDemographicsChanging(value);
					this.SendPropertyChanging();
					this._Demographics = value;
					this.SendPropertyChanged("Demographics");
					this.OnDemographicsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Customer", Storage="_Customers", ThisKey="BusinessEntityID", OtherKey="StoreID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesPerson_Store", Storage="_SalesPerson", ThisKey="SalesPersonID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public SalesPerson SalesPerson
		{
			get
			{
				return this._SalesPerson.Entity;
			}
			set
			{
				SalesPerson previousValue = this._SalesPerson.Entity;
				if (((previousValue != value) 
							|| (this._SalesPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesPerson.Entity = null;
						previousValue.Stores.Remove(this);
					}
					this._SalesPerson.Entity = value;
					if ((value != null))
					{
						value.Stores.Add(this);
						this._SalesPersonID = value.BusinessEntityID;
					}
					else
					{
						this._SalesPersonID = default(Nullable<int>);
					}
					this.SendPropertyChanged("SalesPerson");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_Store", Storage="_BusinessEntity", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public BusinessEntity BusinessEntity
		{
			get
			{
				return this._BusinessEntity.Entity;
			}
			set
			{
				BusinessEntity previousValue = this._BusinessEntity.Entity;
				if (((previousValue != value) 
							|| (this._BusinessEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessEntity.Entity = null;
						previousValue.Store = null;
					}
					this._BusinessEntity.Entity = value;
					if ((value != null))
					{
						value.Store = this;
						this._BusinessEntityID = value.BusinessEntityID;
					}
					else
					{
						this._BusinessEntityID = default(int);
					}
					this.SendPropertyChanged("BusinessEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.Illustration")]
	public partial class Illustration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IllustrationID;
		
		private System.Xml.Linq.XElement _Diagram;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<ProductModelIllustration> _ProductModelIllustrations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIllustrationIDChanging(int value);
    partial void OnIllustrationIDChanged();
    partial void OnDiagramChanging(System.Xml.Linq.XElement value);
    partial void OnDiagramChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Illustration()
		{
			this._ProductModelIllustrations = new EntitySet<ProductModelIllustration>(new Action<ProductModelIllustration>(this.attach_ProductModelIllustrations), new Action<ProductModelIllustration>(this.detach_ProductModelIllustrations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IllustrationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IllustrationID
		{
			get
			{
				return this._IllustrationID;
			}
			set
			{
				if ((this._IllustrationID != value))
				{
					this.OnIllustrationIDChanging(value);
					this.SendPropertyChanging();
					this._IllustrationID = value;
					this.SendPropertyChanged("IllustrationID");
					this.OnIllustrationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diagram", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Diagram
		{
			get
			{
				return this._Diagram;
			}
			set
			{
				if ((this._Diagram != value))
				{
					this.OnDiagramChanging(value);
					this.SendPropertyChanging();
					this._Diagram = value;
					this.SendPropertyChanged("Diagram");
					this.OnDiagramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Illustration_ProductModelIllustration", Storage="_ProductModelIllustrations", ThisKey="IllustrationID", OtherKey="IllustrationID")]
		public EntitySet<ProductModelIllustration> ProductModelIllustrations
		{
			get
			{
				return this._ProductModelIllustrations;
			}
			set
			{
				this._ProductModelIllustrations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductModelIllustrations(ProductModelIllustration entity)
		{
			this.SendPropertyChanging();
			entity.Illustration = this;
		}
		
		private void detach_ProductModelIllustrations(ProductModelIllustration entity)
		{
			this.SendPropertyChanging();
			entity.Illustration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.BillOfMaterials")]
	public partial class BillOfMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BillOfMaterialsID;
		
		private System.Nullable<int> _ProductAssemblyID;
		
		private int _ComponentID;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _UnitMeasureCode;
		
		private short _BOMLevel;
		
		private decimal _PerAssemblyQty;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Product> _Product1;
		
		private EntityRef<UnitMeasure> _UnitMeasure;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillOfMaterialsIDChanging(int value);
    partial void OnBillOfMaterialsIDChanged();
    partial void OnProductAssemblyIDChanging(System.Nullable<int> value);
    partial void OnProductAssemblyIDChanged();
    partial void OnComponentIDChanging(int value);
    partial void OnComponentIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnUnitMeasureCodeChanging(string value);
    partial void OnUnitMeasureCodeChanged();
    partial void OnBOMLevelChanging(short value);
    partial void OnBOMLevelChanged();
    partial void OnPerAssemblyQtyChanging(decimal value);
    partial void OnPerAssemblyQtyChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public BillOfMaterial()
		{
			this._Product = default(EntityRef<Product>);
			this._Product1 = default(EntityRef<Product>);
			this._UnitMeasure = default(EntityRef<UnitMeasure>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillOfMaterialsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BillOfMaterialsID
		{
			get
			{
				return this._BillOfMaterialsID;
			}
			set
			{
				if ((this._BillOfMaterialsID != value))
				{
					this.OnBillOfMaterialsIDChanging(value);
					this.SendPropertyChanging();
					this._BillOfMaterialsID = value;
					this.SendPropertyChanged("BillOfMaterialsID");
					this.OnBillOfMaterialsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductAssemblyID", DbType="Int")]
		public System.Nullable<int> ProductAssemblyID
		{
			get
			{
				return this._ProductAssemblyID;
			}
			set
			{
				if ((this._ProductAssemblyID != value))
				{
					if (this._Product1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductAssemblyIDChanging(value);
					this.SendPropertyChanging();
					this._ProductAssemblyID = value;
					this.SendPropertyChanged("ProductAssemblyID");
					this.OnProductAssemblyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComponentID", DbType="Int NOT NULL")]
		public int ComponentID
		{
			get
			{
				return this._ComponentID;
			}
			set
			{
				if ((this._ComponentID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnComponentIDChanging(value);
					this.SendPropertyChanging();
					this._ComponentID = value;
					this.SendPropertyChanged("ComponentID");
					this.OnComponentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitMeasureCode", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string UnitMeasureCode
		{
			get
			{
				return this._UnitMeasureCode;
			}
			set
			{
				if ((this._UnitMeasureCode != value))
				{
					if (this._UnitMeasure.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitMeasureCodeChanging(value);
					this.SendPropertyChanging();
					this._UnitMeasureCode = value;
					this.SendPropertyChanged("UnitMeasureCode");
					this.OnUnitMeasureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BOMLevel", DbType="SmallInt NOT NULL")]
		public short BOMLevel
		{
			get
			{
				return this._BOMLevel;
			}
			set
			{
				if ((this._BOMLevel != value))
				{
					this.OnBOMLevelChanging(value);
					this.SendPropertyChanging();
					this._BOMLevel = value;
					this.SendPropertyChanged("BOMLevel");
					this.OnBOMLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PerAssemblyQty", DbType="Decimal(8,2) NOT NULL")]
		public decimal PerAssemblyQty
		{
			get
			{
				return this._PerAssemblyQty;
			}
			set
			{
				if ((this._PerAssemblyQty != value))
				{
					this.OnPerAssemblyQtyChanging(value);
					this.SendPropertyChanging();
					this._PerAssemblyQty = value;
					this.SendPropertyChanged("PerAssemblyQty");
					this.OnPerAssemblyQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_BillOfMaterial", Storage="_Product", ThisKey="ComponentID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.BillOfMaterials.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.BillOfMaterials.Add(this);
						this._ComponentID = value.ProductID;
					}
					else
					{
						this._ComponentID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_BillOfMaterial1", Storage="_Product1", ThisKey="ProductAssemblyID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product1
		{
			get
			{
				return this._Product1.Entity;
			}
			set
			{
				Product previousValue = this._Product1.Entity;
				if (((previousValue != value) 
							|| (this._Product1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product1.Entity = null;
						previousValue.BillOfMaterials1.Remove(this);
					}
					this._Product1.Entity = value;
					if ((value != null))
					{
						value.BillOfMaterials1.Add(this);
						this._ProductAssemblyID = value.ProductID;
					}
					else
					{
						this._ProductAssemblyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UnitMeasure_BillOfMaterial", Storage="_UnitMeasure", ThisKey="UnitMeasureCode", OtherKey="UnitMeasureCode", IsForeignKey=true)]
		public UnitMeasure UnitMeasure
		{
			get
			{
				return this._UnitMeasure.Entity;
			}
			set
			{
				UnitMeasure previousValue = this._UnitMeasure.Entity;
				if (((previousValue != value) 
							|| (this._UnitMeasure.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UnitMeasure.Entity = null;
						previousValue.BillOfMaterials.Remove(this);
					}
					this._UnitMeasure.Entity = value;
					if ((value != null))
					{
						value.BillOfMaterials.Add(this);
						this._UnitMeasureCode = value.UnitMeasureCode;
					}
					else
					{
						this._UnitMeasureCode = default(string);
					}
					this.SendPropertyChanged("UnitMeasure");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.StateProvince")]
	public partial class StateProvince : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateProvinceID;
		
		private string _StateProvinceCode;
		
		private string _CountryRegionCode;
		
		private bool _IsOnlyStateProvinceFlag;
		
		private string _Name;
		
		private int _TerritoryID;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<SalesTaxRate> _SalesTaxRates;
		
		private EntityRef<SalesTerritory> _SalesTerritory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateProvinceIDChanging(int value);
    partial void OnStateProvinceIDChanged();
    partial void OnStateProvinceCodeChanging(string value);
    partial void OnStateProvinceCodeChanged();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnIsOnlyStateProvinceFlagChanging(bool value);
    partial void OnIsOnlyStateProvinceFlagChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTerritoryIDChanging(int value);
    partial void OnTerritoryIDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public StateProvince()
		{
			this._SalesTaxRates = new EntitySet<SalesTaxRate>(new Action<SalesTaxRate>(this.attach_SalesTaxRates), new Action<SalesTaxRate>(this.detach_SalesTaxRates));
			this._SalesTerritory = default(EntityRef<SalesTerritory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvinceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateProvinceID
		{
			get
			{
				return this._StateProvinceID;
			}
			set
			{
				if ((this._StateProvinceID != value))
				{
					this.OnStateProvinceIDChanging(value);
					this.SendPropertyChanging();
					this._StateProvinceID = value;
					this.SendPropertyChanged("StateProvinceID");
					this.OnStateProvinceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateProvinceCode", DbType="NChar(3) NOT NULL", CanBeNull=false)]
		public string StateProvinceCode
		{
			get
			{
				return this._StateProvinceCode;
			}
			set
			{
				if ((this._StateProvinceCode != value))
				{
					this.OnStateProvinceCodeChanging(value);
					this.SendPropertyChanging();
					this._StateProvinceCode = value;
					this.SendPropertyChanged("StateProvinceCode");
					this.OnStateProvinceCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryRegionCode", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string CountryRegionCode
		{
			get
			{
				return this._CountryRegionCode;
			}
			set
			{
				if ((this._CountryRegionCode != value))
				{
					this.OnCountryRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryRegionCode = value;
					this.SendPropertyChanged("CountryRegionCode");
					this.OnCountryRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOnlyStateProvinceFlag", DbType="Bit NOT NULL")]
		public bool IsOnlyStateProvinceFlag
		{
			get
			{
				return this._IsOnlyStateProvinceFlag;
			}
			set
			{
				if ((this._IsOnlyStateProvinceFlag != value))
				{
					this.OnIsOnlyStateProvinceFlagChanging(value);
					this.SendPropertyChanging();
					this._IsOnlyStateProvinceFlag = value;
					this.SendPropertyChanged("IsOnlyStateProvinceFlag");
					this.OnIsOnlyStateProvinceFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerritoryID", DbType="Int NOT NULL")]
		public int TerritoryID
		{
			get
			{
				return this._TerritoryID;
			}
			set
			{
				if ((this._TerritoryID != value))
				{
					if (this._SalesTerritory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTerritoryIDChanging(value);
					this.SendPropertyChanging();
					this._TerritoryID = value;
					this.SendPropertyChanged("TerritoryID");
					this.OnTerritoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StateProvince_SalesTaxRate", Storage="_SalesTaxRates", ThisKey="StateProvinceID", OtherKey="StateProvinceID")]
		public EntitySet<SalesTaxRate> SalesTaxRates
		{
			get
			{
				return this._SalesTaxRates;
			}
			set
			{
				this._SalesTaxRates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SalesTerritory_StateProvince", Storage="_SalesTerritory", ThisKey="TerritoryID", OtherKey="TerritoryID", IsForeignKey=true)]
		public SalesTerritory SalesTerritory
		{
			get
			{
				return this._SalesTerritory.Entity;
			}
			set
			{
				SalesTerritory previousValue = this._SalesTerritory.Entity;
				if (((previousValue != value) 
							|| (this._SalesTerritory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SalesTerritory.Entity = null;
						previousValue.StateProvinces.Remove(this);
					}
					this._SalesTerritory.Entity = value;
					if ((value != null))
					{
						value.StateProvinces.Add(this);
						this._TerritoryID = value.TerritoryID;
					}
					else
					{
						this._TerritoryID = default(int);
					}
					this.SendPropertyChanged("SalesTerritory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SalesTaxRates(SalesTaxRate entity)
		{
			this.SendPropertyChanging();
			entity.StateProvince = this;
		}
		
		private void detach_SalesTaxRates(SalesTaxRate entity)
		{
			this.SendPropertyChanging();
			entity.StateProvince = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.PhoneNumberType")]
	public partial class PhoneNumberType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhoneNumberTypeID;
		
		private string _Name;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<PersonPhone> _PersonPhones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneNumberTypeIDChanging(int value);
    partial void OnPhoneNumberTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PhoneNumberType()
		{
			this._PersonPhones = new EntitySet<PersonPhone>(new Action<PersonPhone>(this.attach_PersonPhones), new Action<PersonPhone>(this.detach_PersonPhones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhoneNumberTypeID
		{
			get
			{
				return this._PhoneNumberTypeID;
			}
			set
			{
				if ((this._PhoneNumberTypeID != value))
				{
					this.OnPhoneNumberTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberTypeID = value;
					this.SendPropertyChanged("PhoneNumberTypeID");
					this.OnPhoneNumberTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhoneNumberType_PersonPhone", Storage="_PersonPhones", ThisKey="PhoneNumberTypeID", OtherKey="PhoneNumberTypeID")]
		public EntitySet<PersonPhone> PersonPhones
		{
			get
			{
				return this._PersonPhones;
			}
			set
			{
				this._PersonPhones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonPhones(PersonPhone entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumberType = this;
		}
		
		private void detach_PersonPhones(PersonPhone entity)
		{
			this.SendPropertyChanging();
			entity.PhoneNumberType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.PersonPhone")]
	public partial class PersonPhone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private string _PhoneNumber;
		
		private int _PhoneNumberTypeID;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<PhoneNumberType> _PhoneNumberType;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberTypeIDChanging(int value);
    partial void OnPhoneNumberTypeIDChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PersonPhone()
		{
			this._PhoneNumberType = default(EntityRef<PhoneNumberType>);
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PhoneNumberTypeID
		{
			get
			{
				return this._PhoneNumberTypeID;
			}
			set
			{
				if ((this._PhoneNumberTypeID != value))
				{
					if (this._PhoneNumberType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhoneNumberTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberTypeID = value;
					this.SendPropertyChanged("PhoneNumberTypeID");
					this.OnPhoneNumberTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhoneNumberType_PersonPhone", Storage="_PhoneNumberType", ThisKey="PhoneNumberTypeID", OtherKey="PhoneNumberTypeID", IsForeignKey=true)]
		public PhoneNumberType PhoneNumberType
		{
			get
			{
				return this._PhoneNumberType.Entity;
			}
			set
			{
				PhoneNumberType previousValue = this._PhoneNumberType.Entity;
				if (((previousValue != value) 
							|| (this._PhoneNumberType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhoneNumberType.Entity = null;
						previousValue.PersonPhones.Remove(this);
					}
					this._PhoneNumberType.Entity = value;
					if ((value != null))
					{
						value.PersonPhones.Add(this);
						this._PhoneNumberTypeID = value.PhoneNumberTypeID;
					}
					else
					{
						this._PhoneNumberTypeID = default(int);
					}
					this.SendPropertyChanged("PhoneNumberType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonPhone", Storage="_Person", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.PersonPhones.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.PersonPhones.Add(this);
						this._BusinessEntityID = value.BusinessEntityID;
					}
					else
					{
						this._BusinessEntityID = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.Person")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private string _PersonType;
		
		private bool _NameStyle;
		
		private string _Title;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private string _Suffix;
		
		private int _EmailPromotion;
		
		private System.Xml.Linq.XElement _AdditionalContactInfo;
		
		private System.Xml.Linq.XElement _Demographics;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<PersonCreditCard> _PersonCreditCards;
		
		private EntitySet<PersonPhone> _PersonPhones;
		
		private EntityRef<Password> _Password;
		
		private EntitySet<BusinessEntityContact> _BusinessEntityContacts;
		
		private EntityRef<BusinessEntity> _BusinessEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnPersonTypeChanging(string value);
    partial void OnPersonTypeChanged();
    partial void OnNameStyleChanging(bool value);
    partial void OnNameStyleChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSuffixChanging(string value);
    partial void OnSuffixChanged();
    partial void OnEmailPromotionChanging(int value);
    partial void OnEmailPromotionChanged();
    partial void OnAdditionalContactInfoChanging(System.Xml.Linq.XElement value);
    partial void OnAdditionalContactInfoChanged();
    partial void OnDemographicsChanging(System.Xml.Linq.XElement value);
    partial void OnDemographicsChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Person()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._PersonCreditCards = new EntitySet<PersonCreditCard>(new Action<PersonCreditCard>(this.attach_PersonCreditCards), new Action<PersonCreditCard>(this.detach_PersonCreditCards));
			this._PersonPhones = new EntitySet<PersonPhone>(new Action<PersonPhone>(this.attach_PersonPhones), new Action<PersonPhone>(this.detach_PersonPhones));
			this._Password = default(EntityRef<Password>);
			this._BusinessEntityContacts = new EntitySet<BusinessEntityContact>(new Action<BusinessEntityContact>(this.attach_BusinessEntityContacts), new Action<BusinessEntityContact>(this.detach_BusinessEntityContacts));
			this._BusinessEntity = default(EntityRef<BusinessEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					if (this._BusinessEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonType", DbType="NChar(2) NOT NULL", CanBeNull=false)]
		public string PersonType
		{
			get
			{
				return this._PersonType;
			}
			set
			{
				if ((this._PersonType != value))
				{
					this.OnPersonTypeChanging(value);
					this.SendPropertyChanging();
					this._PersonType = value;
					this.SendPropertyChanged("PersonType");
					this.OnPersonTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameStyle", DbType="Bit NOT NULL")]
		public bool NameStyle
		{
			get
			{
				return this._NameStyle;
			}
			set
			{
				if ((this._NameStyle != value))
				{
					this.OnNameStyleChanging(value);
					this.SendPropertyChanging();
					this._NameStyle = value;
					this.SendPropertyChanged("NameStyle");
					this.OnNameStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(8)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suffix", DbType="NVarChar(10)")]
		public string Suffix
		{
			get
			{
				return this._Suffix;
			}
			set
			{
				if ((this._Suffix != value))
				{
					this.OnSuffixChanging(value);
					this.SendPropertyChanging();
					this._Suffix = value;
					this.SendPropertyChanged("Suffix");
					this.OnSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailPromotion", DbType="Int NOT NULL")]
		public int EmailPromotion
		{
			get
			{
				return this._EmailPromotion;
			}
			set
			{
				if ((this._EmailPromotion != value))
				{
					this.OnEmailPromotionChanging(value);
					this.SendPropertyChanging();
					this._EmailPromotion = value;
					this.SendPropertyChanged("EmailPromotion");
					this.OnEmailPromotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalContactInfo", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement AdditionalContactInfo
		{
			get
			{
				return this._AdditionalContactInfo;
			}
			set
			{
				if ((this._AdditionalContactInfo != value))
				{
					this.OnAdditionalContactInfoChanging(value);
					this.SendPropertyChanging();
					this._AdditionalContactInfo = value;
					this.SendPropertyChanged("AdditionalContactInfo");
					this.OnAdditionalContactInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Demographics", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement Demographics
		{
			get
			{
				return this._Demographics;
			}
			set
			{
				if ((this._Demographics != value))
				{
					this.OnDemographicsChanging(value);
					this.SendPropertyChanging();
					this._Demographics = value;
					this.SendPropertyChanged("Demographics");
					this.OnDemographicsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Customer", Storage="_Customers", ThisKey="BusinessEntityID", OtherKey="PersonID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonCreditCard", Storage="_PersonCreditCards", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID")]
		public EntitySet<PersonCreditCard> PersonCreditCards
		{
			get
			{
				return this._PersonCreditCards;
			}
			set
			{
				this._PersonCreditCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_PersonPhone", Storage="_PersonPhones", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID")]
		public EntitySet<PersonPhone> PersonPhones
		{
			get
			{
				return this._PersonPhones;
			}
			set
			{
				this._PersonPhones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Password", Storage="_Password", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsUnique=true, IsForeignKey=false)]
		public Password Password
		{
			get
			{
				return this._Password.Entity;
			}
			set
			{
				Password previousValue = this._Password.Entity;
				if (((previousValue != value) 
							|| (this._Password.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Password.Entity = null;
						previousValue.Person = null;
					}
					this._Password.Entity = value;
					if ((value != null))
					{
						value.Person = this;
					}
					this.SendPropertyChanged("Password");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_BusinessEntityContact", Storage="_BusinessEntityContacts", ThisKey="BusinessEntityID", OtherKey="PersonID")]
		public EntitySet<BusinessEntityContact> BusinessEntityContacts
		{
			get
			{
				return this._BusinessEntityContacts;
			}
			set
			{
				this._BusinessEntityContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_Person", Storage="_BusinessEntity", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public BusinessEntity BusinessEntity
		{
			get
			{
				return this._BusinessEntity.Entity;
			}
			set
			{
				BusinessEntity previousValue = this._BusinessEntity.Entity;
				if (((previousValue != value) 
							|| (this._BusinessEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessEntity.Entity = null;
						previousValue.Person = null;
					}
					this._BusinessEntity.Entity = value;
					if ((value != null))
					{
						value.Person = this;
						this._BusinessEntityID = value.BusinessEntityID;
					}
					else
					{
						this._BusinessEntityID = default(int);
					}
					this.SendPropertyChanged("BusinessEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_PersonCreditCards(PersonCreditCard entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_PersonCreditCards(PersonCreditCard entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_PersonPhones(PersonPhone entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_PersonPhones(PersonPhone entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
		
		private void attach_BusinessEntityContacts(BusinessEntityContact entity)
		{
			this.SendPropertyChanging();
			entity.Person = this;
		}
		
		private void detach_BusinessEntityContacts(BusinessEntityContact entity)
		{
			this.SendPropertyChanging();
			entity.Person = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.Password")]
	public partial class Password : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private string _PasswordHash;
		
		private string _PasswordSalt;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Person> _Person;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Password()
		{
			this._Person = default(EntityRef<Person>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_Password", Storage="_Person", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.Password = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.Password = this;
						this._BusinessEntityID = value.BusinessEntityID;
					}
					else
					{
						this._BusinessEntityID = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.BusinessEntityContact")]
	public partial class BusinessEntityContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private int _PersonID;
		
		private int _ContactTypeID;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Person> _Person;
		
		private EntityRef<BusinessEntity> _BusinessEntity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnPersonIDChanging(int value);
    partial void OnPersonIDChanged();
    partial void OnContactTypeIDChanging(int value);
    partial void OnContactTypeIDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public BusinessEntityContact()
		{
			this._Person = default(EntityRef<Person>);
			this._BusinessEntity = default(EntityRef<BusinessEntity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					if (this._BusinessEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					if (this._Person.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ContactTypeID
		{
			get
			{
				return this._ContactTypeID;
			}
			set
			{
				if ((this._ContactTypeID != value))
				{
					this.OnContactTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ContactTypeID = value;
					this.SendPropertyChanged("ContactTypeID");
					this.OnContactTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Person_BusinessEntityContact", Storage="_Person", ThisKey="PersonID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.BusinessEntityContacts.Remove(this);
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.BusinessEntityContacts.Add(this);
						this._PersonID = value.BusinessEntityID;
					}
					else
					{
						this._PersonID = default(int);
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_BusinessEntityContact", Storage="_BusinessEntity", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public BusinessEntity BusinessEntity
		{
			get
			{
				return this._BusinessEntity.Entity;
			}
			set
			{
				BusinessEntity previousValue = this._BusinessEntity.Entity;
				if (((previousValue != value) 
							|| (this._BusinessEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessEntity.Entity = null;
						previousValue.BusinessEntityContacts.Remove(this);
					}
					this._BusinessEntity.Entity = value;
					if ((value != null))
					{
						value.BusinessEntityContacts.Add(this);
						this._BusinessEntityID = value.BusinessEntityID;
					}
					else
					{
						this._BusinessEntityID = default(int);
					}
					this.SendPropertyChanged("BusinessEntity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.BusinessEntityAddress")]
	public partial class BusinessEntityAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private int _AddressID;
		
		private int _AddressTypeID;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<BusinessEntity> _BusinessEntity;
		
		private EntityRef<AddressType> _AddressType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnAddressTypeIDChanging(int value);
    partial void OnAddressTypeIDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public BusinessEntityAddress()
		{
			this._BusinessEntity = default(EntityRef<BusinessEntity>);
			this._AddressType = default(EntityRef<AddressType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					if (this._BusinessEntity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AddressTypeID
		{
			get
			{
				return this._AddressTypeID;
			}
			set
			{
				if ((this._AddressTypeID != value))
				{
					if (this._AddressType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AddressTypeID = value;
					this.SendPropertyChanged("AddressTypeID");
					this.OnAddressTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_BusinessEntityAddress", Storage="_BusinessEntity", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsForeignKey=true)]
		public BusinessEntity BusinessEntity
		{
			get
			{
				return this._BusinessEntity.Entity;
			}
			set
			{
				BusinessEntity previousValue = this._BusinessEntity.Entity;
				if (((previousValue != value) 
							|| (this._BusinessEntity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BusinessEntity.Entity = null;
						previousValue.BusinessEntityAddresses.Remove(this);
					}
					this._BusinessEntity.Entity = value;
					if ((value != null))
					{
						value.BusinessEntityAddresses.Add(this);
						this._BusinessEntityID = value.BusinessEntityID;
					}
					else
					{
						this._BusinessEntityID = default(int);
					}
					this.SendPropertyChanged("BusinessEntity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressType_BusinessEntityAddress", Storage="_AddressType", ThisKey="AddressTypeID", OtherKey="AddressTypeID", IsForeignKey=true)]
		public AddressType AddressType
		{
			get
			{
				return this._AddressType.Entity;
			}
			set
			{
				AddressType previousValue = this._AddressType.Entity;
				if (((previousValue != value) 
							|| (this._AddressType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressType.Entity = null;
						previousValue.BusinessEntityAddresses.Remove(this);
					}
					this._AddressType.Entity = value;
					if ((value != null))
					{
						value.BusinessEntityAddresses.Add(this);
						this._AddressTypeID = value.AddressTypeID;
					}
					else
					{
						this._AddressTypeID = default(int);
					}
					this.SendPropertyChanged("AddressType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.BusinessEntity")]
	public partial class BusinessEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BusinessEntityID;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Vendor> _Vendor;
		
		private EntityRef<Store> _Store;
		
		private EntityRef<Person> _Person;
		
		private EntitySet<BusinessEntityContact> _BusinessEntityContacts;
		
		private EntitySet<BusinessEntityAddress> _BusinessEntityAddresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBusinessEntityIDChanging(int value);
    partial void OnBusinessEntityIDChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public BusinessEntity()
		{
			this._Vendor = default(EntityRef<Vendor>);
			this._Store = default(EntityRef<Store>);
			this._Person = default(EntityRef<Person>);
			this._BusinessEntityContacts = new EntitySet<BusinessEntityContact>(new Action<BusinessEntityContact>(this.attach_BusinessEntityContacts), new Action<BusinessEntityContact>(this.detach_BusinessEntityContacts));
			this._BusinessEntityAddresses = new EntitySet<BusinessEntityAddress>(new Action<BusinessEntityAddress>(this.attach_BusinessEntityAddresses), new Action<BusinessEntityAddress>(this.detach_BusinessEntityAddresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessEntityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BusinessEntityID
		{
			get
			{
				return this._BusinessEntityID;
			}
			set
			{
				if ((this._BusinessEntityID != value))
				{
					this.OnBusinessEntityIDChanging(value);
					this.SendPropertyChanging();
					this._BusinessEntityID = value;
					this.SendPropertyChanged("BusinessEntityID");
					this.OnBusinessEntityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_Vendor", Storage="_Vendor", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsUnique=true, IsForeignKey=false)]
		public Vendor Vendor
		{
			get
			{
				return this._Vendor.Entity;
			}
			set
			{
				Vendor previousValue = this._Vendor.Entity;
				if (((previousValue != value) 
							|| (this._Vendor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vendor.Entity = null;
						previousValue.BusinessEntity = null;
					}
					this._Vendor.Entity = value;
					if ((value != null))
					{
						value.BusinessEntity = this;
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_Store", Storage="_Store", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsUnique=true, IsForeignKey=false)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.BusinessEntity = null;
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.BusinessEntity = this;
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_Person", Storage="_Person", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID", IsUnique=true, IsForeignKey=false)]
		public Person Person
		{
			get
			{
				return this._Person.Entity;
			}
			set
			{
				Person previousValue = this._Person.Entity;
				if (((previousValue != value) 
							|| (this._Person.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Person.Entity = null;
						previousValue.BusinessEntity = null;
					}
					this._Person.Entity = value;
					if ((value != null))
					{
						value.BusinessEntity = this;
					}
					this.SendPropertyChanged("Person");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_BusinessEntityContact", Storage="_BusinessEntityContacts", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID")]
		public EntitySet<BusinessEntityContact> BusinessEntityContacts
		{
			get
			{
				return this._BusinessEntityContacts;
			}
			set
			{
				this._BusinessEntityContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BusinessEntity_BusinessEntityAddress", Storage="_BusinessEntityAddresses", ThisKey="BusinessEntityID", OtherKey="BusinessEntityID")]
		public EntitySet<BusinessEntityAddress> BusinessEntityAddresses
		{
			get
			{
				return this._BusinessEntityAddresses;
			}
			set
			{
				this._BusinessEntityAddresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessEntityContacts(BusinessEntityContact entity)
		{
			this.SendPropertyChanging();
			entity.BusinessEntity = this;
		}
		
		private void detach_BusinessEntityContacts(BusinessEntityContact entity)
		{
			this.SendPropertyChanging();
			entity.BusinessEntity = null;
		}
		
		private void attach_BusinessEntityAddresses(BusinessEntityAddress entity)
		{
			this.SendPropertyChanging();
			entity.BusinessEntity = this;
		}
		
		private void detach_BusinessEntityAddresses(BusinessEntityAddress entity)
		{
			this.SendPropertyChanging();
			entity.BusinessEntity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Person.AddressType")]
	public partial class AddressType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressTypeID;
		
		private string _Name;
		
		private System.Guid _rowguid;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<BusinessEntityAddress> _BusinessEntityAddresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressTypeIDChanging(int value);
    partial void OnAddressTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnrowguidChanging(System.Guid value);
    partial void OnrowguidChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public AddressType()
		{
			this._BusinessEntityAddresses = new EntitySet<BusinessEntityAddress>(new Action<BusinessEntityAddress>(this.attach_BusinessEntityAddresses), new Action<BusinessEntityAddress>(this.detach_BusinessEntityAddresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddressTypeID
		{
			get
			{
				return this._AddressTypeID;
			}
			set
			{
				if ((this._AddressTypeID != value))
				{
					this.OnAddressTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AddressTypeID = value;
					this.SendPropertyChanged("AddressTypeID");
					this.OnAddressTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rowguid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid rowguid
		{
			get
			{
				return this._rowguid;
			}
			set
			{
				if ((this._rowguid != value))
				{
					this.OnrowguidChanging(value);
					this.SendPropertyChanging();
					this._rowguid = value;
					this.SendPropertyChanged("rowguid");
					this.OnrowguidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressType_BusinessEntityAddress", Storage="_BusinessEntityAddresses", ThisKey="AddressTypeID", OtherKey="AddressTypeID")]
		public EntitySet<BusinessEntityAddress> BusinessEntityAddresses
		{
			get
			{
				return this._BusinessEntityAddresses;
			}
			set
			{
				this._BusinessEntityAddresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BusinessEntityAddresses(BusinessEntityAddress entity)
		{
			this.SendPropertyChanging();
			entity.AddressType = this;
		}
		
		private void detach_BusinessEntityAddresses(BusinessEntityAddress entity)
		{
			this.SendPropertyChanging();
			entity.AddressType = null;
		}
	}
}
#pragma warning restore 1591
